[BugLab_Wrong_Operator]^if  ( name.declaration == null )  {^214^^^^^203^227^if  ( name.declaration != null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( name.refs == null )  {^218^^^^^203^227^if  ( name.refs != null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( ref.getTwin (  )  == null && !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( ref.getTwin (  )  != null || !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^allRefInfo.put ( name.node, new RefInfo ( ref, ref )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^this.initialValueParent = lvalueToRemoveLater;^463^^^^^462^467^this.initialValueParent = initialValueParent;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^this.initialValue = lvalueToRemoveLater;^464^^^^^462^467^this.initialValue = initialValue;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^lastValue = lvalueToRemoveLater;^465^^^^^462^467^lastValue = initialValue;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^isAssignable = false;^466^^^^^462^467^isAssignable = true;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( namespace != null )  {^108^^^^^107^112^if  ( namespace == null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^namespace = new GlobalNamespace ( compiler, lvalueToRemoveLater ) ;^109^^^^^107^112^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( root, compiler ) ;^109^^^^^107^112^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^namespace = new GlobalNamespace ( compiler, lastValue ) ;^109^^^^^107^112^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^overrideDefines ( collectDefines ( lvalueToRemoveLater, namespace )  ) ;^111^^^^^107^112^overrideDefines ( collectDefines ( root, namespace )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^overrideDefines ( collectDefines ( namespace, root )  ) ;^111^^^^^107^112^overrideDefines ( collectDefines ( root, namespace )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^boolean changed = true;^115^^^^^114^142^boolean changed = false;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( root != info.initialValue )  {^122^^^^^114^142^if  ( finalValue != info.initialValue )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( finalValue != root )  {^122^^^^^114^142^if  ( finalValue != info.initialValue )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( finalValue <= info.initialValue )  {^122^^^^^114^142^if  ( finalValue != info.initialValue )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^changed = isAssignable || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^changed = changed || lastValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^changed = changed || finalValue.getType (  )  != lastValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^changed = info || finalValue.getType (  )  != changed.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^changed = changed || info.initialValue.getType (  )  != finalValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^changed = changed || info.getType (  )  != finalValue.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^changed = changed || finalValue.getType (  )  != info.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^changed = changed && finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^changed = changed || finalValue.getType (  )  == info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info.initialValueParent.replaceChild ( info.initialValue, lastValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info.initialValueParent.replaceChild ( root, finalValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^info.initialValueParent.replaceChild ( info.initialValue.initialValue, finalValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^info.initialValueParent.replaceChild ( finalValue, info.initialValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info.initialValue, root.cloneTree (  )  ) ;^124^^^^^114^142^info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.addToDebugLog ( "Overriding @define variable " + unknownDefine ) ;^125^^^^^114^142^compiler.addToDebugLog ( "Overriding @define variable " + defineName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^compiler.addToDebugLog ( "Overriding @define variable "  !=  defineName ) ;^125^^^^^114^142^compiler.addToDebugLog ( "Overriding @define variable " + defineName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^finalValue.getType (  )  != lvalueToRemoveLater.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^127^128^^^^114^142^finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^finalValue.getType (  )  != info.initialValue.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info ) ;^127^128^^^^114^142^finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^finalValue.getType (  )  != info.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue.initialValue ) ;^127^128^^^^114^142^finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^!finalValue.isEquivalentTo ( inputValue ) ;^128^^^^^114^142^!finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^changed = changed || finalValue.getType (  )  != root.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^changed = finalValue || changed.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^changed = changed || finalValue.getType (  )  < info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node inputValue = dominantReplacements.get ( unknownDefine ) ;^119^^^^^114^142^Node inputValue = dominantReplacements.get ( defineName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^Node inputValue = defineName.get ( dominantReplacements ) ;^119^^^^^114^142^Node inputValue = dominantReplacements.get ( defineName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^Node finalValue = info != null ? inputValue : inputValue.getLastValue (  ) ;^120^121^^^^114^142^Node finalValue = inputValue != null ? inputValue : info.getLastValue (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^Node finalValue = inputValue == null ? inputValue : info.getLastValue (  ) ;^120^121^^^^114^142^Node finalValue = inputValue != null ? inputValue : info.getLastValue (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info.initialValueParent.replaceChild ( info.initialValue, root.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^compiler.addToDebugLog ( "Overriding @define variable "  ||  defineName ) ;^125^^^^^114^142^compiler.addToDebugLog ( "Overriding @define variable " + defineName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^finalValue.getType (  )  != lastValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^127^128^^^^114^142^finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^!finalValue.isEquivalentTo ( root ) ;^128^^^^^114^142^!finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^!finalValue.isEquivalentTo ( info.initialValue.initialValue ) ;^128^^^^^114^142^!finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^!finalValue.isEquivalentTo ( info ) ;^128^^^^^114^142^!finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( isAssignable )  {^132^^^^^114^142^if  ( changed )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, reasonNotAssignable )  ) ;^140^^^^^114^142^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( unknownDefine, UNKNOWN_DEFINE_WARNING )  ) ;^140^^^^^114^142^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, unknownDefine )  ) ;^140^^^^^114^142^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^return REASON_DEFINE_NOT_ASSIGNABLE.format ( params ) ;^145^^^^^144^146^return format.format ( params ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] format [RETURN_TYPE] String   MessageFormat format  params [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  Object[]  params  
[BugLab_Argument_Swapping]^return params.format ( format ) ;^145^^^^^144^146^return format.format ( params ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] format [RETURN_TYPE] String   MessageFormat format  params [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  Object[]  params  
[BugLab_Wrong_Operator]^if  ( name.docInfo != null || name.docInfo.isDefine (  )  )  {^158^^^^^154^181^if  ( name.docInfo != null && name.docInfo.isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Wrong_Operator]^if  ( name.docInfo == null && name.docInfo.isDefine (  )  )  {^158^^^^^154^181^if  ( name.docInfo != null && name.docInfo.isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Wrong_Operator]^} else if  ( name.refs == null )  {^160^^^^^154^181^} else if  ( name.refs != null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^if  ( info == null && lvalueToRemoveLater.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Wrong_Operator]^if  ( info == null || parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Wrong_Operator]^if  ( info != null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^info = lvalueToRemoveLater.getJSDocInfo (  ) ;^167^^^^^165^168^info = parent.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^info = n.getJSDocInfo (  ) ;^167^^^^^165^168^info = parent.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Wrong_Operator]^if  ( info != null || info.isDefine (  )  )  {^170^^^^^154^181^if  ( info != null && info.isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Wrong_Operator]^if  ( info == null && info.isDefine (  )  )  {^170^^^^^154^181^if  ( info != null && info.isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^info = root.getJSDocInfo (  ) ;^167^^^^^154^181^info = parent.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^JSDocInfo info = root.getJSDocInfo (  ) ;^164^^^^^154^181^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.VAR && lastValue.hasOneChild (  )  )  {^166^^^^^154^181^parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Argument_Swapping]^if  ( parent == null && info.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^info = root.getJSDocInfo (  ) ;^167^^^^^165^168^info = parent.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^JSDocInfo info = lastValue.getJSDocInfo (  ) ;^164^^^^^154^181^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.VAR && n.hasOneChild (  )  )  {^166^^^^^154^181^parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^info = lvalueToRemoveLater.getJSDocInfo (  ) ;^167^^^^^154^181^info = parent.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^if  ( info == null && root.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^JSDocInfo info = lvalueToRemoveLater.getJSDocInfo (  ) ;^164^^^^^154^181^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^JSDocInfo info = parent.getJSDocInfo (  ) ;^164^^^^^154^181^JSDocInfo info = n.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.VAR && root.hasOneChild (  )  )  {^166^^^^^154^181^parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^if  ( info == null && n.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^info = lastValue.getJSDocInfo (  ) ;^167^^^^^165^168^info = parent.getJSDocInfo (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.VAR && lvalueToRemoveLater.hasOneChild (  )  )  {^166^^^^^154^181^parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Argument_Swapping]^CollectDefines pass = new CollectDefines ( allDefines, compiler ) ;^178^^^^^154^181^CollectDefines pass = new CollectDefines ( compiler, allDefines ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, lastValue, pass ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( compiler, pass, root ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( pass, root, compiler ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[BugLab_Variable_Misuse]^updateAssignAllowedStack ( lastValue, true ) ;^243^^^^^241^245^updateAssignAllowedStack ( n, true ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  nodeTraversal  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^updateAssignAllowedStack ( n, false ) ;^243^^^^^241^245^updateAssignAllowedStack ( n, true ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  nodeTraversal  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^return false;^244^^^^^241^245^return true;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  nodeTraversal  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^RefInfo refInfo = allRefInfo.get ( lastValue ) ;^248^^^^^233^263^RefInfo refInfo = allRefInfo.get ( n ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^RefInfo refInfo = n.get ( allRefInfo ) ;^248^^^^^233^263^RefInfo refInfo = allRefInfo.get ( n ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( refInfo == null )  {^249^^^^^234^264^if  ( refInfo != null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  == Token.ASSIGN || name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  != Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration != ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, unknownDefine, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, val, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( fullName, t, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( t, fullName, valParent, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^lvalueToRemoveLater = n;^272^^^^^257^287^lvalueToRemoveLater = valParent;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, root, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, val, lvalueToRemoveLater )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( val, fullName, t, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, lvalueToRemoveLater, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, UNKNOWN_DEFINE_WARNING, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, lvalueToRemoveLater, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, UNKNOWN_DEFINE_WARNING, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, lastValue, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, val, parent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( valParent, fullName, val, t )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( t, val, fullName, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( t, valParent, val, fullName )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( info == null )  {^281^^^^^266^296^if  ( info != null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^setDefineInfoNotAssignable ( t, info ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^assignableDefines.remove ( unknownDefine ) ;^283^^^^^268^298^assignableDefines.remove ( fullName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = assignableDefines.get ( unknownDefine ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^DefineInfo info = fullName.get ( assignableDefines ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^Ref ref = refInfo.ref.ref;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^Ref ref = refInfo;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^Name name = refInfo.name.name;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^Name name = refInfo;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node val = lvalueToRemoveLater.getLastChild (  ) ;^257^^^^^242^272^Node val = valParent.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node val = root.getLastChild (  ) ;^257^^^^^242^272^Node val = valParent.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, root, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, UNKNOWN_DEFINE_WARNING, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, val, n )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  >= Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^lvalueToRemoveLater = lvalueToRemoveLater;^272^^^^^257^287^lvalueToRemoveLater = valParent;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^lvalueToRemoveLater = val;^272^^^^^257^287^lvalueToRemoveLater = valParent;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, root, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^lvalueToRemoveLater = parent;^272^^^^^257^287^lvalueToRemoveLater = valParent;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = 0.get ( fullName ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node val = lastValue.getLastChild (  ) ;^257^^^^^242^272^Node val = valParent.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( val.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, root, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, UNKNOWN_DEFINE_WARNING, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, n, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( !t.inGlobalScope (  )  && lvalueToRemoveLater.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^275^305^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( !t.inGlobalScope (  )  || n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^275^305^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  == null && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^275^305^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, root, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, n, UNKNOWN_DEFINE_WARNING, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, lastValue, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, UNKNOWN_DEFINE_WARNING, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.getJSDocInfo (  )  != valull && n.getJSDocInfo (  ) .isDefine (  )  )  {^291^^^^^276^306^n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.getJSDocInfo (  )  != lastValueull && n.getJSDocInfo (  ) .isDefine (  )  )  {^291^^^^^276^306^n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, lvalueToRemoveLater, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, n, UNKNOWN_DEFINE_WARNING, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, lvalueToRemoveLater, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, UNKNOWN_DEFINE_WARNING, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( lvalueToRemoveLater == lvalueToRemoveLater )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( parent == n )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^if  ( n == lvalueToRemoveLater )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( lvalueToRemoveLater != n )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( lvalueToRemoveLater < n )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( valParent.getType (  )  == Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  < Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Preconditions.checkState ( parent.getType (  )  == Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^Preconditions.checkState ( n.getType (  )  != Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Preconditions.checkState ( lastValue.getType (  )  == Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( lastValue.getFirstChild (  )  ) ;^305^^^^^299^306^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( valParent.getFirstChild (  )  ) ;^305^^^^^299^306^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node last = val.getLastChild (  ) ;^300^^^^^285^315^Node last = n.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node last = valParent.getLastChild (  ) ;^300^^^^^285^315^Node last = n.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( valParent ) ;^301^^^^^286^316^n.removeChild ( last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^parent.replaceChild ( n, valParent ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^parent.replaceChild ( last, n ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node last = lvalueToRemoveLater.getLastChild (  ) ;^300^^^^^285^315^Node last = n.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( lastValue.getType (  )  == Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( root ) ;^301^^^^^286^316^n.removeChild ( last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^parent.replaceChild ( val, last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^Preconditions.checkState ( n.getType (  )  != Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Preconditions.checkState ( lastValue.getType (  )  == Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( lvalueToRemoveLater.getFirstChild (  )  ) ;^305^^^^^290^320^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  <= Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Preconditions.checkState ( lvalueToRemoveLater.getType (  )  == Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( parent.getFirstChild (  )  ) ;^305^^^^^299^306^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Node last = parent.getLastChild (  ) ;^300^^^^^285^315^Node last = n.getLastChild (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^parent.replaceChild ( root, last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^parent.replaceChild ( n, parent ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^parent.replaceChild ( valParent, last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Preconditions.checkState ( lvalueToRemoveLater.getType (  )  == Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^Preconditions.checkState ( n.getType (  )  > Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^Preconditions.checkState ( parent.getType (  )  == Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^n.removeChild ( valParent.getFirstChild (  )  ) ;^305^^^^^290^320^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( valParent.getType (  )  == Token.CALL )  {^310^^^^^295^325^if  ( n.getType (  )  == Token.CALL )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.CALL )  {^310^^^^^295^325^if  ( n.getType (  )  == Token.CALL )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^setDefineInfoNotAssignable ( t, info ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^updateAssignAllowedStack ( lastValue, false ) ;^330^^^^^315^345^updateAssignAllowedStack ( n, false ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^updateAssignAllowedStack ( n, true ) ;^330^^^^^315^345^updateAssignAllowedStack ( n, false ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( isAssignable )  {^349^^^^^340^356^if  ( entering )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] updateAssignAllowedStack [RETURN_TYPE] void   Node n boolean entering [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^assignAllowed.push ( -1 ) ;^350^^^^^340^356^assignAllowed.push ( 0 ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] updateAssignAllowedStack [RETURN_TYPE] void   Node n boolean entering [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^switch  ( lastValue.getType (  )  )  {^341^^^^^340^356^switch  ( n.getType (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] updateAssignAllowedStack [RETURN_TYPE] void   Node n boolean entering [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^return assignAllowed.element (  )  >= 1;^363^^^^^362^364^return assignAllowed.element (  )  == 1;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] isAssignAllowed [RETURN_TYPE] boolean   [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( n == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( value == null && !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( value != null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( info != null )  {^386^^^^^381^402^if  ( info == null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( parent )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, parent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, reasonNotAssignable, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^return false;^394^^^^^381^402^return true;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( root )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( valParent, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, lvalueToRemoveLater ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, n ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^allDefines.put ( unknownDefine, info ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^allDefines.put ( info, name ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^assignableDefines.put ( unknownDefine, info ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^assignableDefines.put ( info, name ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( lvalueToRemoveLater )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, n, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, lvalueToRemoveLater, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( root, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, root ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( lvalueToRemoveLater, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = allDefines.get ( unknownDefine ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = 4.get ( name ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = allDefines.get ( reasonNotAssignable ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^assignableDefines.put ( reasonNotAssignable, info ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, lvalueToRemoveLater, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, root, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, parent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, value, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, reasonNotAssignable )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^if  ( info != null )  {^386^^^^^376^405^if  ( info == null )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( n )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, lvalueToRemoveLater, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, reasonNotAssignable, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^return false;^394^^^^^376^405^return true;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( parent )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, reasonNotAssignable, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( n, valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, root ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( val, valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, lvalueToRemoveLater ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^allDefines.put ( unknownDefine, info ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^allDefines.put ( info, name ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^assignableDefines.put ( unknownDefine, info ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^assignableDefines.put ( info, name ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, n, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, parent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = allDefines.get ( reasonNotAssignable ) ;^385^^^^^376^405^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^376^405^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, unknownDefine )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, UNKNOWN_DEFINE_WARNING, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, parent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, unknownDefine )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, t, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^DefineInfo info = allDefines.get ( unknownDefine ) ;^385^^^^^376^405^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( lvalueToRemoveLater )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, root, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, UNKNOWN_DEFINE_WARNING, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( valParent )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( parent, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, valParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( n, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( n )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^allDefines.put ( reasonNotAssignable, info ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, root, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, root, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( root )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, lvalueToRemoveLater, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, lvalueToRemoveLater, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( lvalueToRemoveLater, valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^allDefines.put ( reasonNotAssignable, info ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^assignableDefines.put ( reasonNotAssignable, info ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, lvalueToRemoveLater, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, valParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( parent == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^if  ( value == null || !NodeUtil.isValidDefineValue ( value, 1.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^if  ( allDefines == null || !NodeUtil.isValidDefineValue ( value, value.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, unknownDefine )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, value, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, value, UNKNOWN_DEFINE_WARNING, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, value, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, t, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^return true;^404^^^^^376^405^return false;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^return ref.node.getParent (  )  != null || ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^415^416^417^^^413^418^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] getValueParent [RETURN_TYPE] Node   Ref ref [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^return ref.node.getParent (  )  == null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^415^416^417^^^413^418^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] getValueParent [RETURN_TYPE] Node   Ref ref [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Operator]^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  != Token.VAR ? ref.node : ref.node.getParent (  ) ;^415^416^417^^^413^418^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] getValueParent [RETURN_TYPE] Node   Ref ref [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^info.setNotAssignable ( format ( format, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Argument_Swapping]^info.setNotAssignable ( format ( t, REASON_DEFINE_NOT_ASSIGNABLE.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^isAssignable = true;^475^^^^^474^477^isAssignable = false;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] setNotAssignable [RETURN_TYPE] void   String reason [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^return unknownDefine;^483^^^^^482^484^return reasonNotAssignable;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] getReasonWhyNotAssignable [RETURN_TYPE] String   [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^lastValue = val;^492^^^^^491^494^lastValue = value;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] recordAssignment [RETURN_TYPE] boolean   Node value [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^return entering;^493^^^^^491^494^return isAssignable;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] recordAssignment [RETURN_TYPE] boolean   Node value [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Variable_Misuse]^return val;^500^^^^^499^501^return lastValue;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] getLastValue [RETURN_TYPE] Node   [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[BugLab_Wrong_Literal]^assignAllowed.push ( 2 ) ;^209^^^^^203^227^assignAllowed.push ( 1 ) ;^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( name.declaration == null )  {^214^^^^^203^227^if  ( name.declaration != null )  {^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( name.refs == null )  {^218^^^^^203^227^if  ( name.refs != null )  {^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.getTwin (  )  == null && !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.getTwin (  )  != null || !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^allRefInfo.put ( name.node, new RefInfo ( ref, ref )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^updateAssignAllowedStack ( parent, true ) ;^243^^^^^241^245^updateAssignAllowedStack ( n, true ) ;^[CLASS] CollectDefines RefInfo  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  nodeTraversal  Node  lvalueToRemoveLater  n  parent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^updateAssignAllowedStack ( n, false ) ;^243^^^^^241^245^updateAssignAllowedStack ( n, true ) ;^[CLASS] CollectDefines RefInfo  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  nodeTraversal  Node  lvalueToRemoveLater  n  parent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^return false;^244^^^^^241^245^return true;^[CLASS] CollectDefines RefInfo  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  nodeTraversal  Node  lvalueToRemoveLater  n  parent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^RefInfo refInfo = allRefInfo.get ( valParent ) ;^248^^^^^233^263^RefInfo refInfo = allRefInfo.get ( n ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^RefInfo refInfo = n.get ( allRefInfo ) ;^248^^^^^233^263^RefInfo refInfo = allRefInfo.get ( n ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( refInfo == null )  {^249^^^^^234^264^if  ( refInfo != null )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  == Token.ASSIGN || name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  != Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration != ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, val, parent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( fullName, t, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( t, fullName, valParent, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^lvalueToRemoveLater = val;^272^^^^^257^287^lvalueToRemoveLater = valParent;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^lvalueToRemoveLater = parent;^272^^^^^257^287^lvalueToRemoveLater = valParent;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, parent, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( val, fullName, t, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( valParent, fullName, val, t )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, parent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, parent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( processDefineAssignment ( t, fullName, valParent, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( t, valParent, val, fullName )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( info == null )  {^281^^^^^266^296^if  ( info != null )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^setDefineInfoNotAssignable ( t, info ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^DefineInfo info = fullName.get ( assignableDefines ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^Ref ref = refInfo.ref.ref;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^Ref ref = refInfo;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^Name name = refInfo.name.name;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^Name name = refInfo;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Node val = parent.getLastChild (  ) ;^257^^^^^242^272^Node val = valParent.getLastChild (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Node val = val.getLastChild (  ) ;^257^^^^^242^272^Node val = valParent.getLastChild (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( val.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^258^259^^^^243^273^if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( processDefineAssignment ( t, val, fullName, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, null, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^DefineInfo info = 2.get ( fullName ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, parent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, parent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( !t.inGlobalScope (  )  && val.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^275^305^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( !t.inGlobalScope (  )  || n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^275^305^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  == null && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^275^305^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, n, this, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.getJSDocInfo (  )  != valull && n.getJSDocInfo (  ) .isDefine (  )  )  {^291^^^^^276^306^n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.getJSDocInfo (  )  != valParentull && n.getJSDocInfo (  ) .isDefine (  )  )  {^291^^^^^276^306^n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( lvalueToRemoveLater == valParent )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( valParent == n )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^if  ( n == lvalueToRemoveLater )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( lvalueToRemoveLater != n )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( lvalueToRemoveLater < n )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( valParent.getType (  )  == Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  < Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Preconditions.checkState ( valParent.getType (  )  == Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^Preconditions.checkState ( n.getType (  )  >= Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Preconditions.checkState ( val.getType (  )  == Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.removeChild ( valParent.getFirstChild (  )  ) ;^305^^^^^299^306^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Node last = valParent.getLastChild (  ) ;^300^^^^^285^315^Node last = n.getLastChild (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Node last = val.getLastChild (  ) ;^300^^^^^285^315^Node last = n.getLastChild (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^parent.replaceChild ( valParent, last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^parent.replaceChild ( n, valParent ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.removeChild ( valParent ) ;^301^^^^^286^316^n.removeChild ( last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^parent.replaceChild ( last, n ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Preconditions.checkState ( valParent.getType (  )  == Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^Preconditions.checkState ( n.getType (  )  != Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Preconditions.checkState ( val.getType (  )  == Token.NAME ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.removeChild ( val.getFirstChild (  )  ) ;^305^^^^^290^320^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.removeChild ( valParent.getFirstChild (  )  ) ;^305^^^^^290^320^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  <= Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.ASSIGN )  {^299^^^^^284^314^if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^Preconditions.checkState ( n.getType (  )  != Token.NAME ) ;^304^^^^^299^306^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^n.removeChild ( val.getFirstChild (  )  ) ;^305^^^^^299^306^n.removeChild ( n.getFirstChild (  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^Preconditions.checkState ( n.getType (  )  == Token.null ) ;^304^^^^^289^319^Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( val.getType (  )  == Token.CALL )  {^310^^^^^295^325^if  ( n.getType (  )  == Token.CALL )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.CALL )  {^310^^^^^295^325^if  ( n.getType (  )  == Token.CALL )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^for  ( DefineInfo info : 2.values (  )  )  {^322^^^^^307^337^for  ( DefineInfo info : assignableDefines.values (  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^setDefineInfoNotAssignable ( t, info ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^updateAssignAllowedStack ( valParent, false ) ;^330^^^^^315^345^updateAssignAllowedStack ( n, false ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^updateAssignAllowedStack ( n, true ) ;^330^^^^^315^345^updateAssignAllowedStack ( n, false ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^assignAllowed.push ( -1 ) ;^350^^^^^340^356^assignAllowed.push ( 0 ) ;^[CLASS] CollectDefines RefInfo  [METHOD] updateAssignAllowedStack [RETURN_TYPE] void   Node n boolean entering [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  entering  Node  last  lvalueToRemoveLater  n  parent  val  valParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^return assignAllowed.element (  )  != 1;^363^^^^^362^364^return assignAllowed.element (  )  == 1;^[CLASS] CollectDefines RefInfo  [METHOD] isAssignAllowed [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  last  lvalueToRemoveLater  n  parent  val  valParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( value == null && !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( value != null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( info != null )  {^386^^^^^381^402^if  ( info == null )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( valParent )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^return false;^394^^^^^381^402^return true;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( valueParent )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( valParent, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, val ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, valParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^allDefines.put ( info, name ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^assignableDefines.put ( info, name ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, value, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, t, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^if  ( info != null )  {^386^^^^^376^405^if  ( info == null )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( valParent )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^return false;^394^^^^^376^405^return true;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( val, valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, valParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( value, val ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( valParent, valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^376^405^DefineInfo info = allDefines.get ( name ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^assignableDefines.put ( info, name ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( valueParent )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, 3, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valueParent, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, value, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^info = new DefineInfo ( val, valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( val )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, valParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^if  ( valueParent == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^if  ( allDefines == null || !NodeUtil.isValidDefineValue ( value, value.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( name, value, INVALID_DEFINE_INIT_ERROR, t )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, value, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, val, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^JSError.make ( t, valueParent, null, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^} else if  ( info.recordAssignment ( val )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Literal]^return true;^404^^^^^376^405^return false;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^return ref.node.getParent (  )  != null || ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^415^416^417^^^413^418^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] getValueParent [RETURN_TYPE] Node   Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^return ref.node.getParent (  )  == null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^415^416^417^^^413^418^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] getValueParent [RETURN_TYPE] Node   Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Wrong_Operator]^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  != Token.VAR ? ref.node : ref.node.getParent (  ) ;^415^416^417^^^413^418^return ref.node.getParent (  )  != null && ref.node.getParent (  ) .getType (  )  == Token.VAR ? ref.node : ref.node.getParent (  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] getValueParent [RETURN_TYPE] Node   Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Argument_Swapping]^info.setNotAssignable ( format ( t, REASON_DEFINE_NOT_ASSIGNABLE.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[BugLab_Variable_Misuse]^this.initialValueParent = lastValue;^463^^^^^462^467^this.initialValueParent = initialValueParent;^[CLASS] DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] boolean  isAssignable  String  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  
[BugLab_Variable_Misuse]^this.initialValue = lastValue;^464^^^^^462^467^this.initialValue = initialValue;^[CLASS] DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] boolean  isAssignable  String  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  
[BugLab_Wrong_Literal]^isAssignable = false;^466^^^^^462^467^isAssignable = true;^[CLASS] DefineInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node initialValue Node initialValueParent [VARIABLES] boolean  isAssignable  String  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  
[BugLab_Wrong_Literal]^isAssignable = true;^475^^^^^474^477^isAssignable = false;^[CLASS] DefineInfo  [METHOD] setNotAssignable [RETURN_TYPE] void   String reason [VARIABLES] boolean  isAssignable  String  reason  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  
[BugLab_Variable_Misuse]^reasonNotAssignable = reasonNotAssignable;^476^^^^^474^477^reasonNotAssignable = reason;^[CLASS] DefineInfo  [METHOD] setNotAssignable [RETURN_TYPE] void   String reason [VARIABLES] boolean  isAssignable  String  reason  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  
[BugLab_Variable_Misuse]^return reason;^483^^^^^482^484^return reasonNotAssignable;^[CLASS] DefineInfo  [METHOD] getReasonWhyNotAssignable [RETURN_TYPE] String   [VARIABLES] boolean  isAssignable  String  reason  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  
[BugLab_Variable_Misuse]^lastValue = lastValue;^492^^^^^491^494^lastValue = value;^[CLASS] DefineInfo  [METHOD] recordAssignment [RETURN_TYPE] boolean   Node value [VARIABLES] boolean  isAssignable  String  reason  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  value  
[BugLab_Variable_Misuse]^return value;^500^^^^^499^501^return lastValue;^[CLASS] DefineInfo  [METHOD] getLastValue [RETURN_TYPE] Node   [VARIABLES] boolean  isAssignable  String  reason  reasonNotAssignable  Node  initialValue  initialValueParent  lastValue  value  
