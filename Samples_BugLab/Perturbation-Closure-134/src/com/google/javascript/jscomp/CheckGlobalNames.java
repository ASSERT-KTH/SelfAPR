[BugLab_Wrong_Operator]^if  ( namespace != null )  {^67^^^^^64^74^if  ( namespace == null )  {^[CLASS] CheckGlobalNames  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Node  externs  root  GlobalNamespace  namespace  Name  name  
[BugLab_Variable_Misuse]^namespace = new GlobalNamespace ( compiler, externs ) ;^68^^^^^64^74^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CheckGlobalNames  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Node  externs  root  GlobalNamespace  namespace  Name  name  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( root, compiler ) ;^68^^^^^64^74^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CheckGlobalNames  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Node  externs  root  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^checkDescendantNames ( name, name.globalSets + name.localSets == 0 ) ;^72^^^^^64^74^checkDescendantNames ( name, name.globalSets + name.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Node  externs  root  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^checkDescendantNames ( name, name.globalSets  &  name.localSets > 0 ) ;^72^^^^^64^74^checkDescendantNames ( name, name.globalSets + name.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Node  externs  root  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^if  ( name.props == null )  {^85^^^^^84^101^if  ( name.props != null )  {^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  && prop.globalSets + prop.localSets > 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets == 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets  ||  prop.localSets > 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Variable_Misuse]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( name )  || prop.globalSets + prop.localSets > 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets >= 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets  >  prop.localSets > 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Literal]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 2 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Literal]^boolean propIsDefined = true;^89^^^^^84^101^boolean propIsDefined = false;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Variable_Misuse]^validateName ( name, propIsDefined ) ;^97^^^^^84^101^validateName ( prop, propIsDefined ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Argument_Swapping]^validateName ( propIsDefined, prop ) ;^97^^^^^84^101^validateName ( prop, propIsDefined ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Variable_Misuse]^checkDescendantNames ( name, propIsDefined ) ;^98^^^^^84^101^checkDescendantNames ( prop, propIsDefined ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Variable_Misuse]^checkDescendantNames ( prop, nameIsDefined ) ;^98^^^^^84^101^checkDescendantNames ( prop, propIsDefined ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Argument_Swapping]^checkDescendantNames ( propIsDefined, prop ) ;^98^^^^^84^101^checkDescendantNames ( prop, propIsDefined ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets  >>  prop.localSets > 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets  !=  prop.localSets > 0 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Literal]^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > -1 ) ;^93^94^^^^84^101^propIsDefined =  ( !propertyMustBeInitializedByFullName ( prop )  || prop.globalSets + prop.localSets > 0 ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Variable_Misuse]^validateName ( prop, nameIsDefined ) ;^97^^^^^84^101^validateName ( prop, propIsDefined ) ;^[CLASS] CheckGlobalNames  [METHOD] checkDescendantNames [RETURN_TYPE] void   Name name boolean nameIsDefined [VARIABLES] AbstractCompiler  compiler  boolean  nameIsDefined  propIsDefined  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  prop  
[BugLab_Wrong_Operator]^if  ( declaration == null )  {^108^^^^^103^127^if  ( declaration != null )  {^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Variable_Misuse]^reportRefToUndefinedName ( name, ref ) ;^109^^^^^103^127^reportRefToUndefinedName ( name, declaration ) ;^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Argument_Swapping]^reportRefToUndefinedName ( declaration, name ) ;^109^^^^^103^127^reportRefToUndefinedName ( name, declaration ) ;^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Variable_Misuse]^if  ( ref != null )  {^108^^^^^103^127^if  ( declaration != null )  {^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Wrong_Operator]^if  ( name.refs == null )  {^113^^^^^103^127^if  ( name.refs != null )  {^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Wrong_Operator]^if  ( declaration != null || ref.module != declaration.module && !moduleGraph.dependsOn ( ref.module, declaration.module )  )  {^119^120^121^^^103^127^if  ( declaration != null && ref.module != declaration.module && !moduleGraph.dependsOn ( ref.module, declaration.module )  )  {^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Wrong_Operator]^if  ( declaration == null && ref.module != declaration.module && !moduleGraph.dependsOn ( ref.module, declaration.module )  )  {^119^120^121^^^103^127^if  ( declaration != null && ref.module != declaration.module && !moduleGraph.dependsOn ( ref.module, declaration.module )  )  {^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Wrong_Operator]^if  ( declaration != null && ref.module == declaration.module && !moduleGraph.dependsOn ( ref.module, declaration.module )  )  {^119^120^121^^^103^127^if  ( declaration != null && ref.module != declaration.module && !moduleGraph.dependsOn ( ref.module, declaration.module )  )  {^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Argument_Swapping]^reportBadModuleReference ( ref, name ) ;^122^^^^^103^127^reportBadModuleReference ( name, ref ) ;^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Variable_Misuse]^reportBadModuleReference ( name, declaration ) ;^122^^^^^103^127^reportBadModuleReference ( name, ref ) ;^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Variable_Misuse]^reportRefToUndefinedName ( name, declaration ) ;^117^^^^^103^127^reportRefToUndefinedName ( name, ref ) ;^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Argument_Swapping]^reportRefToUndefinedName ( ref, name ) ;^117^^^^^103^127^reportRefToUndefinedName ( name, ref ) ;^[CLASS] CheckGlobalNames  [METHOD] validateName [RETURN_TYPE] void   Name name boolean isDefined [VARIABLES] AbstractCompiler  compiler  Ref  declaration  ref  boolean  isDefined  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  JSModuleGraph  moduleGraph  Name  name  
[BugLab_Wrong_Operator]^while  ( name.parent != null || name.parent.globalSets + name.parent.localSets == 0 )  {^138^139^^^^136^146^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets == 0 )  {^[CLASS] CheckGlobalNames  [METHOD] reportRefToUndefinedName [RETURN_TYPE] void   Name name Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^while  ( name.parent == null && name.parent.globalSets + name.parent.localSets == 0 )  {^138^139^^^^136^146^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets == 0 )  {^[CLASS] CheckGlobalNames  [METHOD] reportRefToUndefinedName [RETURN_TYPE] void   Name name Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets != 0 )  {^138^139^^^^136^146^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets == 0 )  {^[CLASS] CheckGlobalNames  [METHOD] reportRefToUndefinedName [RETURN_TYPE] void   Name name Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^while  <  ( name.parent != null && name.parent.globalSets + name.parent.localSets == 0 )  {^138^139^^^^136^146^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets == 0 )  {^[CLASS] CheckGlobalNames  [METHOD] reportRefToUndefinedName [RETURN_TYPE] void   Name name Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Literal]^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets == -1 )  {^138^139^^^^136^146^while  ( name.parent != null && name.parent.globalSets + name.parent.localSets == 0 )  {^[CLASS] CheckGlobalNames  [METHOD] reportRefToUndefinedName [RETURN_TYPE] void   Name name Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  GlobalNamespace  namespace  Name  name  
[BugLab_Wrong_Operator]^return name.parent != null || name.parent.aliasingGets == 0 && name.parent.type == Name.Type.OBJECTLIT;^161^162^^^^152^163^return name.parent != null && name.parent.aliasingGets == 0 && name.parent.type == Name.Type.OBJECTLIT;^[CLASS] CheckGlobalNames  [METHOD] propertyMustBeInitializedByFullName [RETURN_TYPE] boolean   Name name [VARIABLES] AbstractCompiler  compiler  boolean  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  
[BugLab_Wrong_Operator]^return name.parent == null && name.parent.aliasingGets == 0 && name.parent.type == Name.Type.OBJECTLIT;^161^162^^^^152^163^return name.parent != null && name.parent.aliasingGets == 0 && name.parent.type == Name.Type.OBJECTLIT;^[CLASS] CheckGlobalNames  [METHOD] propertyMustBeInitializedByFullName [RETURN_TYPE] boolean   Name name [VARIABLES] AbstractCompiler  compiler  boolean  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  
[BugLab_Wrong_Operator]^return name.parent != null && name.parent.aliasingGets != 0 && name.parent.type == Name.Type.OBJECTLIT;^161^162^^^^152^163^return name.parent != null && name.parent.aliasingGets == 0 && name.parent.type == Name.Type.OBJECTLIT;^[CLASS] CheckGlobalNames  [METHOD] propertyMustBeInitializedByFullName [RETURN_TYPE] boolean   Name name [VARIABLES] AbstractCompiler  compiler  boolean  GlobalNamespace  namespace  CheckLevel  level  DiagnosticType  STRICT_MODULE_DEP_QNAME  UNDEFINED_NAME_WARNING  Name  name  
