[BugLab_Variable_Misuse]^NodeTraversal.traverse ( null, root, cb ) ;^60^^^^^46^70^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( null, cb, subtree ) ;^60^^^^^46^70^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( splitter, compiler, supplier, numThreads )  ) .process ( externs, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( compiler, supplier, splitter, numThreads )  ) .process ( externs, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( supplier, splitter, compiler, numThreads )  ) .process ( externs, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( numThreads, splitter, supplier, compiler )  ) .process ( externs, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Variable_Misuse]^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( subtree, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Variable_Misuse]^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, subtree ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( compiler, numThreads, supplier, splitter )  ) .process ( externs, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( compiler, splitter, externs, numThreads )  ) .process ( supplier, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( compiler, splitter, supplier, externs )  ) .process ( numThreads, root ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^( new ParallelCompilerPass ( root, splitter, supplier, numThreads )  ) .process ( externs, compiler ) ;^68^69^^^^46^70^( new ParallelCompilerPass ( compiler, splitter, supplier, numThreads )  ) .process ( externs, root ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AstParallelizer  splitter  Node  externs  root  subtree  RemoveConstantRValuesCallback  cb  Supplier  supplier  int  numThreads  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( null, cb, subtree ) ;^60^^^^^54^64^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] get [RETURN_TYPE] Task   [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  int  numThreads  Node  subtree  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( null, cb, subtree ) ;^60^^^^^57^62^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] RemoveConstantExpressionsParallel 1 1  [METHOD] processSubtree [RETURN_TYPE] Result   Node subtree [VARIABLES] RemoveConstantRValuesCallback  cb  AbstractCompiler  compiler  boolean  int  numThreads  Node  subtree  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( null, cb, subtree ) ;^60^^^^^54^64^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] 1 1  [METHOD] get [RETURN_TYPE] Task   [VARIABLES] boolean  Node  subtree  RemoveConstantRValuesCallback  cb  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( null, cb, subtree ) ;^60^^^^^57^62^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] 1 1  [METHOD] processSubtree [RETURN_TYPE] Result   Node subtree [VARIABLES] boolean  Node  subtree  RemoveConstantRValuesCallback  cb  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( null, cb, subtree ) ;^60^^^^^57^62^NodeTraversal.traverse ( null, subtree, cb ) ;^[CLASS] 1  [METHOD] processSubtree [RETURN_TYPE] Result   Node subtree [VARIABLES] boolean  Node  subtree  RemoveConstantRValuesCallback  cb  
