[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new Traversal (  )  ) ;^102^^^^^96^103^NodeTraversal.traverse ( compiler, root, new Traversal (  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  externs  root  String  GET_CSS_NAME_FUNCTION  Map  cssNames  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new Traversal (  )  ) ;^102^^^^^96^103^NodeTraversal.traverse ( compiler, root, new Traversal (  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  externs  root  String  GET_CSS_NAME_FUNCTION  Map  cssNames  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new Traversal (  )  ) ;^102^^^^^96^103^NodeTraversal.traverse ( compiler, root, new Traversal (  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  externs  root  String  GET_CSS_NAME_FUNCTION  Map  cssNames  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( first, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, first, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, first, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^processStringNode ( first, t ) ;^122^^^^^107^137^processStringNode ( t, first ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^processStringNode (  first ) ;^122^^^^^107^137^processStringNode ( t, first ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^processStringNode ( t ) ;^122^^^^^107^137^processStringNode ( t, first ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^parent.replaceChild ( first, n ) ;^124^^^^^109^139^parent.replaceChild ( n, first ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^parent.replaceChild (  first ) ;^124^^^^^109^139^parent.replaceChild ( n, first ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^parent.replaceChild ( n ) ;^124^^^^^109^139^parent.replaceChild ( n, first ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, second, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^Node replacement = new Node ( Token.ADD, second, Node.newString ( "-" + first.getString (  )  )  ) ;^146^147^^^^131^161^Node replacement = new Node ( Token.ADD, first, Node.newString ( "-" + second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^Node replacement = new Node ( Token.ADD,  Node.newString ( "-" + second.getString (  )  )  ) ;^146^147^^^^131^161^Node replacement = new Node ( Token.ADD, first, Node.newString ( "-" + second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^Node replacement = new Node ( Token. first, Node.newString ( "-" + second.getString (  )  )  ) ;^146^147^^^^131^161^Node replacement = new Node ( Token.ADD, first, Node.newString ( "-" + second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^processStringNode ( second, t ) ;^144^^^^^129^159^processStringNode ( t, second ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^processStringNode (  second ) ;^144^^^^^129^159^processStringNode ( t, second ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^processStringNode ( t ) ;^144^^^^^129^159^processStringNode ( t, second ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^parent.replaceChild ( replacement, n ) ;^148^^^^^133^163^parent.replaceChild ( n, replacement ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^parent.replaceChild (  replacement ) ;^148^^^^^133^163^parent.replaceChild ( n, replacement ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^parent.replaceChild ( n ) ;^148^^^^^133^163^parent.replaceChild ( n, replacement ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( second, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, STRING_LITERAL_EXPECTED_ERROR, n, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, second, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, second, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, first, UNEXPECTED_STRING_LITERAL_ERROR, n.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( second, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , t.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) .getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, first, UNEXPECTED_STRING_LITERAL_ERROR.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( first, n, UNEXPECTED_STRING_LITERAL_ERROR, t.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, second, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , n.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, second.getString (  ) , first.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, second, first.getString (  ) , UNEXPECTED_STRING_LITERAL_ERROR.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, second, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, STRING_LITERAL_EXPECTED_ERROR, n, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, first, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( first, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, first, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, count, String.valueOf ( INVALID_NUM_ARGUMENTS_ERROR )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_NUM_ARGUMENTS_ERROR, n, t, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( second, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( UNEXPECTED_STRING_LITERAL_ERROR, n, t, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, count, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( n )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  first  n  parent  replacement  second  String  GET_CSS_NAME_FUNCTION  Map  cssNames  int  count  
[buglab_swap_variables]^Integer count = parts.get ( cssNames[i] ) ;^180^^^^^175^201^Integer count = cssNames.get ( parts[i] ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^cssNames.put ( parts[i].intValue (  )  + 1 ) ;^184^^^^^175^201^cssNames.put ( parts[i], count.intValue (  )  + 1 ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( parts, n, UNKNOWN_SYMBOL_WARNING, t[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, parts, UNKNOWN_SYMBOL_WARNING[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^String replacement = parts.get ( symbolMap[i] ) ;^187^^^^^175^201^String replacement = symbolMap.get ( parts[i] ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, parts, UNKNOWN_SYMBOL_WARNING, n[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, UNKNOWN_SYMBOL_WARNING, n, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^if  ( n != symbolMapull )  {^197^^^^^175^201^if  ( symbolMap != null )  {^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^for  ( parts.lengthnt i = 0; i < i; i++ )  {^178^^^^^175^201^for  ( int i = 0; i < parts.length; i++ )  {^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < parts.length.length; i++ )  {^178^^^^^175^201^for  ( int i = 0; i < parts.length; i++ )  {^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^cssNames.put ( count[i], parts.intValue (  )  + 1 ) ;^184^^^^^175^201^cssNames.put ( parts[i], count.intValue (  )  + 1 ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^if  ( n == replacementull )  {^188^^^^^175^201^if  ( replacement == null )  {^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( UNKNOWN_SYMBOL_WARNING, n, t, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] ReplaceCssNames Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  AbstractCompiler  compiler  boolean  CssRenamingMap  symbolMap  NodeTraversal  t  DiagnosticType  INVALID_NUM_ARGUMENTS_ERROR  STRING_LITERAL_EXPECTED_ERROR  UNEXPECTED_STRING_LITERAL_ERROR  UNKNOWN_SYMBOL_WARNING  Node  n  String  GET_CSS_NAME_FUNCTION  replacement  String[]  parts  Map  cssNames  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, first, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^processStringNode ( first, t ) ;^122^^^^^107^137^processStringNode ( t, first ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^processStringNode (  first ) ;^122^^^^^107^137^processStringNode ( t, first ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^processStringNode ( t ) ;^122^^^^^107^137^processStringNode ( t, first ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^parent.replaceChild (  first ) ;^124^^^^^109^139^parent.replaceChild ( n, first ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^parent.replaceChild ( first, n ) ;^124^^^^^109^139^parent.replaceChild ( n, first ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^parent.replaceChild ( n ) ;^124^^^^^109^139^parent.replaceChild ( n, first ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, second, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, second, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^Node replacement = new Node ( Token.ADD, second, Node.newString ( "-" + first.getString (  )  )  ) ;^146^147^^^^131^161^Node replacement = new Node ( Token.ADD, first, Node.newString ( "-" + second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^Node replacement = new Node ( Token.ADD,  Node.newString ( "-" + second.getString (  )  )  ) ;^146^147^^^^131^161^Node replacement = new Node ( Token.ADD, first, Node.newString ( "-" + second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^Node replacement = new Node ( Token. first, Node.newString ( "-" + second.getString (  )  )  ) ;^146^147^^^^131^161^Node replacement = new Node ( Token.ADD, first, Node.newString ( "-" + second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^processStringNode ( second, t ) ;^144^^^^^129^159^processStringNode ( t, second ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^processStringNode (  second ) ;^144^^^^^129^159^processStringNode ( t, second ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^processStringNode ( t ) ;^144^^^^^129^159^processStringNode ( t, second ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^parent.replaceChild ( replacement, n ) ;^148^^^^^133^163^parent.replaceChild ( n, replacement ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^parent.replaceChild (  replacement ) ;^148^^^^^133^163^parent.replaceChild ( n, replacement ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^parent.replaceChild ( n ) ;^148^^^^^133^163^parent.replaceChild ( n, replacement ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, second, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( second, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, STRING_LITERAL_EXPECTED_ERROR, n, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, second, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , n.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, first, UNEXPECTED_STRING_LITERAL_ERROR, n.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, second.getString (  ) , first.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) .getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, second, first.getString (  ) , UNEXPECTED_STRING_LITERAL_ERROR.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, first, UNEXPECTED_STRING_LITERAL_ERROR.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( second, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, STRING_LITERAL_EXPECTED_ERROR, n, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^143^154^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, first, STRING_LITERAL_EXPECTED_ERROR, Token.name ( n.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, first, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( first, n, UNEXPECTED_STRING_LITERAL_ERROR, t.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( UNEXPECTED_STRING_LITERAL_ERROR, n, t, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, second, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( STRING_LITERAL_EXPECTED_ERROR, n, t, Token.name ( second.getType (  )  )  )  ) ;^152^153^^^^137^167^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( second.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, INVALID_NUM_ARGUMENTS_ERROR, n, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, count, String.valueOf ( INVALID_NUM_ARGUMENTS_ERROR )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_NUM_ARGUMENTS_ERROR, n, t, String.valueOf ( count )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( first, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( t.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, first, Token.name ( STRING_LITERAL_EXPECTED_ERROR.getType (  )  )  )  ) ;^127^128^^^^121^129^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( second, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , t.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, STRING_LITERAL_EXPECTED_ERROR, n, Token.name ( first.getType (  )  )  )  ) ;^127^128^^^^112^142^compiler.report ( JSError.make ( t, n, STRING_LITERAL_EXPECTED_ERROR, Token.name ( first.getType (  )  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, UNEXPECTED_STRING_LITERAL_ERROR, n, first.getString (  ) , second.getString (  )  )  ) ;^139^140^141^^^124^154^compiler.report ( JSError.make ( t, n, UNEXPECTED_STRING_LITERAL_ERROR, first.getString (  ) , second.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^compiler.report ( JSError.make ( count, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( t )  )  ) ;^158^159^^^^143^173^compiler.report ( JSError.make ( t, n, INVALID_NUM_ARGUMENTS_ERROR, String.valueOf ( count )  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  first  n  parent  replacement  second  int  count  
[buglab_swap_variables]^Integer count = parts.get ( cssNames[i] ) ;^180^^^^^175^201^Integer count = cssNames.get ( parts[i] ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^cssNames.put ( count[i], parts.intValue (  )  + 1 ) ;^184^^^^^175^201^cssNames.put ( parts[i], count.intValue (  )  + 1 ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^cssNames.put ( parts[i].intValue (  )  + 1 ) ;^184^^^^^175^201^cssNames.put ( parts[i], count.intValue (  )  + 1 ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, parts, UNKNOWN_SYMBOL_WARNING[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( parts, n, UNKNOWN_SYMBOL_WARNING, t[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, parts, UNKNOWN_SYMBOL_WARNING, n[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^String replacement = parts.get ( symbolMap[i] ) ;^187^^^^^175^201^String replacement = symbolMap.get ( parts[i] ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, UNKNOWN_SYMBOL_WARNING, n, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^compiler.report ( JSError.make ( UNKNOWN_SYMBOL_WARNING, n, t, parts[i], n.getString (  )  )  ) ;^190^191^^^^175^201^compiler.report ( JSError.make ( t, n, UNKNOWN_SYMBOL_WARNING, parts[i], n.getString (  )  )  ) ;^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^if  ( n != symbolMapull )  {^197^^^^^175^201^if  ( symbolMap != null )  {^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^if  ( n == replacementull )  {^188^^^^^175^201^if  ( replacement == null )  {^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
[buglab_swap_variables]^for  ( parts.lengthnt i = 0; i < i; i++ )  {^178^^^^^175^201^for  ( int i = 0; i < parts.length; i++ )  {^[CLASS] Traversal  [METHOD] processStringNode [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Integer  count  boolean  NodeTraversal  t  Node  n  String[]  parts  String  replacement  int  i  
