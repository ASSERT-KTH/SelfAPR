[BugLab_Argument_Swapping]^return sourceName.get ( map ) ;^52^^^^^51^53^return map.get ( sourceName ) ;^[CLASS] VariableMap  [METHOD] lookupNewName [RETURN_TYPE] String   String sourceName [VARIABLES] char  SEPARATOR  String  sourceName  boolean  Map  map  reverseMap  
[BugLab_Wrong_Operator]^if  ( reverseMap != null )  {^60^^^^^59^64^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[BugLab_Variable_Misuse]^return 0.get ( newName ) ;^63^^^^^59^64^return reverseMap.get ( newName ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[BugLab_Argument_Swapping]^return newName.get ( reverseMap ) ;^63^^^^^59^64^return reverseMap.get ( newName ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[BugLab_Wrong_Operator]^if  ( reverseMap != null )  {^70^^^^^69^77^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[BugLab_Variable_Misuse]^rm.put ( 1.getValue (  ) , entry.getKey (  )  ) ;^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[BugLab_Variable_Misuse]^for  ( Map.Entry<String, String> entry : 1.entrySet (  )  )  {^72^^^^^69^77^for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  {^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[BugLab_Wrong_Operator]^if  ( reverseMap != null )  {^90^^^^^89^94^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[BugLab_Variable_Misuse]^Writer writer = new OutputStreamWriter ( baos, Charsets.4 ) ;^120^^^^^118^135^Writer writer = new OutputStreamWriter ( baos, Charsets.UTF_8 ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[BugLab_Variable_Misuse]^writer.write ( 3.getValue (  )  ) ;^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[BugLab_Argument_Swapping]^if  ( line <= 0 || pos == pos.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Operator]^if  ( pos <= 0 && pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Operator]^if  ( pos < 0 || pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Operator]^if  ( pos <= 0 || pos >= line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Operator]^if  ( pos <= 0 || pos == line.length (  )   !=  1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Literal]^if  ( pos <= pos || pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Literal]^if  ( pos <= 0 || pos == line.length (  )   )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Argument_Swapping]^int pos = SEPARATOR.lastIndexOf ( line ) ;^155^^^^^141^162^int pos = line.lastIndexOf ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Argument_Swapping]^map.put ( pos.substring ( 0, line ) , line.substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Operator]^map.put ( line.substring ( 0, pos ) , line.substring ( pos  ^  1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Literal]^map.put ( line.substring ( pos, pos ) , line.substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Literal]^map.put ( line.substring ( 0, pos ) , line.substring ( pos + pos )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Operator]^map.put ( line.substring ( 0, pos ) , line.substring ( pos  <<  1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[BugLab_Wrong_Literal]^map.put ( line.substring ( 0, pos ) , line.substring ( pos  )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
