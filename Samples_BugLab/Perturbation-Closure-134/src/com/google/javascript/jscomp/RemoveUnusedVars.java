[buglab_swap_variables]^logger_.fine ( "RemoveUnusedVars ( " + numRemoved_ + " ) : removed " + i ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[buglab_swap_variables]^if  ( MAX_ITERATIONS == i )  {^103^^^^^86^106^if  ( i == MAX_ITERATIONS )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[buglab_swap_variables]^Scope scope = new SyntacticScopeCreator ( root ) .createScope ( compiler_, null ) ;^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[buglab_swap_variables]^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope (  null ) ;^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[buglab_swap_variables]^traverseNode ( scope, null, root ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[buglab_swap_variables]^traverseNode (  null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[buglab_swap_variables]^traverseNode ( root, null ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[buglab_swap_variables]^traverseFunction ( scope, n ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseFunction (  scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseFunction ( n ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Var var = n.getVar ( scope.getString (  )  ) ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseFunction ( scope, n ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseFunction (  scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseFunction ( n ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( n, c, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode (  n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( c, scope, n ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( c,  scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( scope, n, c ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( c, n ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Scope fnScope = scopeew SyntacticScopeCreator ( compiler_ ) .createScope ( n, n ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope (  scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Scope fnScope = new SyntacticScopeCreator ( scope ) .createScope ( n, compiler_ ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Scope fnScope = compiler_ew SyntacticScopeCreator ( n ) .createScope ( n, scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( n, body, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode (  n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( body,  fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( body, fnScope, n ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^traverseNode ( body, n ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^removeUnreferencedFunctionArgs ( fnScope, n ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^removeUnreferencedFunctionArgs (  fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^removeUnreferencedFunctionArgs ( n ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^while  (  ( argList = lastArg.getLastChild (  )  )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^Var var = lastArg.getVar ( fnScope.getString (  )  ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^if  ( var.contains ( referenced )  )  {^211^^^^^210^226^if  ( referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^NodeUtil.removeChild ( toRemove, parent ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^NodeUtil.removeChild (  toRemove ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^NodeUtil.removeChild ( parent ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^new Node ( Token.EXPR_RESULT.removeFirstChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^new Node ( Token. nameNode.removeFirstChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^parent.replaceChild (  new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[buglab_swap_variables]^parent.replaceChild ( toRemove, new Node ( Token. nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
