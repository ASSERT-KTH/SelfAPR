[buglab_swap_variables]^super ( parent, name.getFirstChild (  )  ) ;^341^^^^^340^344^super ( name, parent.getFirstChild (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super (  parent.getFirstChild (  )  ) ;^341^^^^^340^344^super ( name, parent.getFirstChild (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name.getFirstChild (  )  ) ;^341^^^^^340^344^super ( name, parent.getFirstChild (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( parent, node, name, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super (  node, parent, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, parent, node, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name,  parent, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, node,  gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, gramps, parent, node ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, node, parent ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( node, name, parent, gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super (  node, parent, gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, gramps, parent, node ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name,  parent, gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, node, gramps, parent ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, node,  gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^super ( name, node, parent ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return this.name.compareTo ( rhs.name.name ) ;^215^^^^^214^216^return this.name.compareTo ( rhs.name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] compareTo [RETURN_TYPE] int   JsName rhs [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  rhs  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return rhs.name.compareTo ( this.name ) ;^215^^^^^214^216^return this.name.compareTo ( rhs.name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] compareTo [RETURN_TYPE] int   JsName rhs [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  JsName  name  rhs  Node  gramps  node  parent  List  generations  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node == child )  {^283^^^^^268^298^if  ( child == node )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildBefore (  parent ) ;^301^^^^^286^316^containingNode.addChildBefore ( earlyDecls, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildBefore ( earlyDecls ) ;^301^^^^^286^316^containingNode.addChildBefore ( earlyDecls, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildAfter (  parent ) ;^310^^^^^307^311^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildAfter ( parent, currDecl ) ;^310^^^^^307^311^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildAfter ( currDecl ) ;^310^^^^^307^311^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildBefore (  parent ) ;^308^^^^^293^323^containingNode.addChildBefore ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildBefore ( parent, currDecl ) ;^308^^^^^293^323^containingNode.addChildBefore ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildBefore ( currDecl ) ;^308^^^^^293^323^containingNode.addChildBefore ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildBefore ( parent, earlyDecls ) ;^301^^^^^286^316^containingNode.addChildBefore ( earlyDecls, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildAfter (  parent ) ;^310^^^^^295^325^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^containingNode.addChildAfter ( currDecl ) ;^310^^^^^295^325^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( currDecl, containingNode ) ;^312^^^^^297^327^replaceWithRhs ( containingNode, currDecl ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs (  currDecl ) ;^312^^^^^297^327^replaceWithRhs ( containingNode, currDecl ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^312^^^^^297^327^replaceWithRhs ( containingNode, currDecl ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^271^^^^^256^286^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^271^^^^^256^286^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^271^^^^^256^286^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^322^^^^^319^323^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^322^^^^^319^323^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^322^^^^^319^323^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^316^^^^^301^331^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^316^^^^^301^331^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^316^^^^^301^331^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^322^^^^^307^337^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^322^^^^^307^337^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^322^^^^^307^337^replaceWithRhs ( containingNode, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, gramps, parent.getLastChild (  ) .cloneTree (  )  ) ;^353^354^^^^346^356^changeProxy.replaceWith ( gramps, parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith (  parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^353^354^^^^346^356^changeProxy.replaceWith ( gramps, parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( gramps,  parent.getLastChild (  ) .cloneTree (  )  ) ;^353^354^^^^346^356^changeProxy.replaceWith ( gramps, parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.removeChild ( gramps.getParent (  )  ) ;^350^^^^^346^356^changeProxy.removeChild ( gramps.getParent (  ) , gramps ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( node, parent, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith (  node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent,  new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, node, new Node ( Token. Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.removeChild ( parent, gramps ) ;^420^^^^^417^425^changeProxy.removeChild ( gramps, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.removeChild (  parent ) ;^420^^^^^417^425^changeProxy.removeChild ( gramps, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.removeChild ( gramps ) ;^420^^^^^417^425^changeProxy.removeChild ( gramps, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, gramps, new Node ( Token.FALSE )  ) ;^450^^^^^449^451^changeProxy.replaceWith ( gramps, parent, new Node ( Token.FALSE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith (  parent, new Node ( Token.FALSE )  ) ;^450^^^^^449^451^changeProxy.replaceWith ( gramps, parent, new Node ( Token.FALSE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( gramps,  new Node ( Token.FALSE )  ) ;^450^^^^^449^451^changeProxy.replaceWith ( gramps, parent, new Node ( Token.FALSE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  name  rhs  Node  child  containingNode  currDecl  earlyDecls  gramps  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( n, t.getFirstChild (  ) , n ) ;^463^^^^^458^470^ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation (  n.getFirstChild (  ) , n ) ;^463^^^^^458^470^ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( t.getFirstChild (  ) , n ) ;^463^^^^^458^470^ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( n, t, parent ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation (  n, parent ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( t, parent, n ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( t,  parent ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( t, n ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^ns = createNameInformation ( parent, n, t ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName jsName = getName ( ns.name.name, true ) ;^466^^^^^458^470^JsName jsName = getName ( ns.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName jsName = getName ( ns, true ) ;^466^^^^^458^470^JsName jsName = getName ( ns.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName jsName = getName (  true ) ;^466^^^^^458^470^JsName jsName = getName ( ns.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^externalNames.add ( ns.name.name ) ;^468^^^^^458^470^externalNames.add ( ns.name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^externalNames.add ( ns ) ;^468^^^^^458^470^externalNames.add ( ns.name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  child  containingNode  currDecl  earlyDecls  gramps  n  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( n != nsull && ns.onlyAffectsClassDef )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( nss != null && n.onlyAffectsClassDef )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDefs != null && n )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( ns, n ) ;^517^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope (  ns ) ;^517^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( n ) ;^517^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( callNode, nameNode, t ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, callNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, callNode, nameNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  callNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, nameNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, callNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n.getFirstChild (  ) , n ) ;^510^^^^^495^520^NameInformation ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n.getFirstChild (  ) , n ) ;^510^^^^^495^520^NameInformation ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t.getFirstChild (  ) , n ) ;^510^^^^^495^520^NameInformation ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( ns, n ) ;^511^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope (  ns ) ;^511^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( n ) ;^511^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDef != null && ns )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n, parent ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n, parent ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation parents = createNameInformation ( t, n, n ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  parent ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, n ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( parent, n, t ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( ns, n ) ;^508^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope (  ns ) ;^508^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( n ) ;^508^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( ns, parent ) ;^504^^^^^495^520^recordDepScope ( parent, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope (  ns ) ;^504^^^^^495^520^recordDepScope ( parent, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordDepScope ( parent ) ;^504^^^^^495^520^recordDepScope ( parent, ns ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^scopes.put ( name, node ) ;^526^^^^^525^527^scopes.put ( node, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] recordDepScope [RETURN_TYPE] void   Node node NameInformation name [VARIABLES] AbstractCompiler  compiler  NameInformation  name  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^scopes.put (  name ) ;^526^^^^^525^527^scopes.put ( node, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] recordDepScope [RETURN_TYPE] void   Node node NameInformation name [VARIABLES] AbstractCompiler  compiler  NameInformation  name  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^scopes.put ( node ) ;^526^^^^^525^527^scopes.put ( node, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] recordDepScope [RETURN_TYPE] void   Node node NameInformation name [VARIABLES] AbstractCompiler  compiler  NameInformation  name  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( parent, n, t ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n, parent ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation parents = createNameInformation ( t, n, n ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  parent ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, n ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^createName ( ns.name.name ) ;^543^^^^^539^550^createName ( ns.name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^createName ( ns ) ;^543^^^^^539^550^createName ( ns.name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n, parent ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameInfo.name.name, nameNode ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameNode.name, nameInfo ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameInfo.name ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameNode, nameInfo.name ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet (  nameNode ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameInfo, nameNode ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n, parent ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n, parent ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  parent ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation parents = createNameInformation ( t, n, n ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, n ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( parent, n, t ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( n.name, ns ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.names.name, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.name ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet (  n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nss.name, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.name.name, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( nameame != null )  {^602^^^^^587^617^if  ( name != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode ( parent, n, name, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode (  n, parent, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( parentew ClassDefiningFunctionNode ( name, n, n, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode ( name,  parent, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode ( name, n,  parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( nameew ClassDefiningFunctionNode ( n, n, parent, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName name = getName ( ns.name.name, false ) ;^601^^^^^586^616^JsName name = getName ( ns.name, false ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName name = getName ( ns, false ) ;^601^^^^^586^616^JsName name = getName ( ns.name, false ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName name = getName (  false ) ;^601^^^^^586^616^JsName name = getName ( ns.name, false ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( n != nameull )  {^602^^^^^587^617^if  ( name != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDefs != null && n )  {^600^^^^^585^615^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.name.name, nameNode ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameNode, ns.name ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.name ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet (  nameNode ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( nameew PrototypeSetNode ( n, n )  ) ;^591^^^^^576^606^refNodes.add ( new PrototypeSetNode ( name, n )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new PrototypeSetNode (  n )  ) ;^591^^^^^576^606^refNodes.add ( new PrototypeSetNode ( name, n )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new PrototypeSetNode ( name )  ) ;^591^^^^^576^606^refNodes.add ( new PrototypeSetNode ( name, n )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name.prototypeNames.add ( ns.prototypeProperty.prototypeProperty ) ;^590^^^^^575^605^name.prototypeNames.add ( ns.prototypeProperty ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name.prototypeNames.add ( ns ) ;^590^^^^^575^605^name.prototypeNames.add ( ns.prototypeProperty ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName name = getName ( ns.prototypeClass.prototypeClass, false ) ;^588^^^^^573^603^JsName name = getName ( ns.prototypeClass, false ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName name = getName ( ns, false ) ;^588^^^^^573^603^JsName name = getName ( ns.prototypeClass, false ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName name = getName (  false ) ;^588^^^^^573^603^JsName name = getName ( ns.prototypeClass, false ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameNode.name, ns ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameNode, ns.name ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.name ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns, nameNode ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet (  nameNode ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( nameNode.name, ns ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns, nameNode ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( n != nameull )  {^589^^^^^574^604^if  ( name != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordSet ( ns.name.name, nameNode ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( ns.isPrototype.isPrototype )  {^587^^^^^572^602^if  ( ns.isPrototype )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( nameame != null )  {^589^^^^^574^604^if  ( name != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDef != null && ns )  {^600^^^^^585^615^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsNameRefNode nameRefNode = new JsNameRefNode ( node, jsn ) ;^618^^^^^616^620^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn, node ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] recordSet [RETURN_TYPE] void   String name Node node [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  JsNameRefNode  nameRefNode  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsNameRefNode nameRefNode = new JsNameRefNode (  node ) ;^618^^^^^616^620^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn, node ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] recordSet [RETURN_TYPE] void   String name Node node [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  JsNameRefNode  nameRefNode  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn ) ;^618^^^^^616^620^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn, node ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] recordSet [RETURN_TYPE] void   String name Node node [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  JsNameRefNode  nameRefNode  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^for  ( Node n = child.getFirstChild (  ) ;^639^^^^^637^644^for  ( Node child = n.getFirstChild (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] addAllChildren [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( n, compiler, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^647^648^649^650^^646^651^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] addSimplifiedChildren [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^647^648^649^650^^646^651^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] addSimplifiedChildren [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^647^648^649^650^^646^651^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] addSimplifiedChildren [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^} else if  ( parent.getType (  )  == Token.ASSIGN && ( n.getType (  )  == Token.EXPR_RESULT || parent.getType (  )  == Token.FOR || parent.getType (  )  == Token.RETURN )  )  {^659^660^661^662^^653^672^} else if  ( n.getType (  )  == Token.ASSIGN && ( parent.getType (  )  == Token.EXPR_RESULT || parent.getType (  )  == Token.FOR || parent.getType (  )  == Token.RETURN )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] addSimplifiedExpression [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^} else if  ( parent.getType (  )  == Token.CALL && n.getType (  )  == Token.EXPR_RESULT )  {^666^667^^^^653^672^} else if  ( n.getType (  )  == Token.CALL && parent.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] addSimplifiedExpression [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  Node  callNode  child  containingNode  currDecl  earlyDecls  gramps  n  nameNode  node  parent  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( n, decl ) ;^688^^^^^673^703^addSimplifiedExpression ( decl, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression (  n ) ;^688^^^^^673^703^addSimplifiedExpression ( decl, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( decl ) ;^688^^^^^673^703^addSimplifiedExpression ( decl, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( n, pred ) ;^689^^^^^674^704^addSimplifiedExpression ( pred, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression (  n ) ;^689^^^^^674^704^addSimplifiedExpression ( pred, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( pred ) ;^689^^^^^674^704^addSimplifiedExpression ( pred, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( n, step ) ;^690^^^^^675^705^addSimplifiedExpression ( step, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression (  n ) ;^690^^^^^675^705^addSimplifiedExpression ( step, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( step ) ;^690^^^^^675^705^addSimplifiedExpression ( step, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( parent, n ) ;^702^^^^^699^703^addSimplifiedExpression ( n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression (  parent ) ;^702^^^^^699^703^addSimplifiedExpression ( n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( n ) ;^702^^^^^699^703^addSimplifiedExpression ( n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( parent, n ) ;^702^^^^^687^717^addSimplifiedExpression ( n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression (  parent ) ;^702^^^^^687^717^addSimplifiedExpression ( n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^addSimplifiedExpression ( n ) ;^702^^^^^687^717^addSimplifiedExpression ( n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.DO && parent.getLastChild (  )  == parent )  {^714^^^^^699^729^if  ( parent.getType (  )  == Token.DO && parent.getLastChild (  )  == n )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  jsName  jsn  name  nameInfo  rhs  NodeTraversal  t  Node  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  prototypeClass  prototypeProperty  superclass  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( ! ( NodeUtil.isName ( parent )  || NodeUtil.isGet ( n )  && !NodeUtil.isGetProp ( n )  )  )  {^722^723^^^^707^737^if  ( ! ( NodeUtil.isName ( n )  || NodeUtil.isGet ( n )  && !NodeUtil.isGetProp ( parent )  )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation tameInfo = createNameInformation ( n, n, parent ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation (  n, parent ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation ( t,  parent ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation parentameInfo = createNameInformation ( t, n, n ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation ( t, n ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nodeName.name, nameInfo ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nodeName, nameInfo.name ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.name ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  nodeName ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.superclass.name, nameInfo ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.name.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.superclass, nameInfo.name ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  nameInfo.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.name ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.name.name, nodeName ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( nameInfo.name.name, nameInfo.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.INSTANCEOF && parent.getLastChild (  )  == parent )  {^748^749^^^^733^763^if  ( parent.getType (  )  == Token.INSTANCEOF && parent.getLastChild (  )  == n )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( n, checkedClass, parent, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, parent, n, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo.name.name, true ) ;^750^^^^^748^756^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo, true ) ;^750^^^^^748^756^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName checkedClass = getName (  true ) ;^750^^^^^748^756^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( parent, n, checkedClass, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( parentew InstanceOfCheckNode ( checkedClass, n, n, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( parent, n, checkedClass, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, parent, n, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo.name.name, true ) ;^750^^^^^735^765^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo, true ) ;^750^^^^^735^765^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName checkedClass = getName (  true ) ;^750^^^^^735^765^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( parent, n, checkedClass, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( parentew InstanceOfCheckNode ( checkedClass, n, n, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^referringName = referring.isPrototype.isPrototype ? referring.prototypeClass : referring.name;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^referringName = referring ? referring.isPrototype.prototypeClass : referring.name;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^referringName = referring.isPrototype ? referring.name : referring.prototypeClass;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^referringName = referring.name ? referring.prototypeClass : referring.isPrototype;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^referringName = referring.prototypeClass.isPrototype ? referring : referring.name;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^String name = nameInfo.name.name;^772^^^^^757^787^String name = nameInfo.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^String name = nameInfo;^772^^^^^757^787^String name = nameInfo.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( nameInfo.isExternallyReferenceableInfo.isExternallyReferenceable )  {^773^^^^^758^788^if  ( nameInfo.isExternallyReferenceable )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( nameInfo )  {^773^^^^^758^788^if  ( nameInfo.isExternallyReferenceable )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^774^^^^^759^789^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^774^^^^^759^789^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^774^^^^^759^789^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( NodeUtil.isLhs (  parent )  )  {^780^^^^^765^795^if  ( NodeUtil.isLhs ( n, parent )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( NodeUtil.isLhs ( n )  )  {^780^^^^^765^795^if  ( NodeUtil.isLhs ( n, parent )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, referringName ) ;^782^^^^^767^797^recordReference ( referringName, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^782^^^^^767^797^recordReference ( referringName, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( referringName ) ;^782^^^^^767^797^recordReference ( referringName, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( NodeUtil.isLhs ( parent, n )  )  {^780^^^^^765^795^if  ( NodeUtil.isLhs ( n, parent )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^804^^^^^794^808^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^804^^^^^794^808^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^804^^^^^794^808^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, referringName ) ;^795^^^^^780^810^recordReference ( referringName, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^795^^^^^780^810^recordReference ( referringName, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( referringName ) ;^795^^^^^780^810^recordReference ( referringName, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^804^^^^^802^806^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^804^^^^^802^806^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^804^^^^^802^806^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^804^^^^^789^819^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^804^^^^^789^819^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^804^^^^^789^819^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^792^^^^^789^793^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^792^^^^^789^793^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^792^^^^^789^793^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( functionScope.name.name, name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, functionScope.name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( functionScope. name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^792^^^^^777^807^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^792^^^^^777^807^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference (  name ) ;^792^^^^^777^807^recordReference ( WINDOW, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^recordReference ( name.name, functionScope ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( nodesToKeepodesToKeep.contains ( n )  )  {^787^^^^^772^802^if  ( nodesToKeep.contains ( n )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( n.contains ( nodesToKeep )  )  {^787^^^^^772^802^if  ( nodesToKeep.contains ( n )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  containingNode  currDecl  decl  earlyDecls  gramps  iter  n  nameNode  node  parent  pred  step  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AbstractCompiler  compiler  boolean  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  JsName  checkedClass  jsName  jsn  name  nameInfo  rhs  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( externs, compiler, new ProcessExternals (  )  ) ;^893^^^^^892^905^NodeTraversal.traverse ( compiler, externs, new ProcessExternals (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new ProcessExternals (  )  ) ;^893^^^^^892^905^NodeTraversal.traverse ( compiler, externs, new ProcessExternals (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  externs, new ProcessExternals (  )  ) ;^893^^^^^892^905^NodeTraversal.traverse ( compiler, externs, new ProcessExternals (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new FindDependencyScopes (  )  ) ;^894^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindDependencyScopes (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new FindDependencyScopes (  )  ) ;^894^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindDependencyScopes (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new FindDependencyScopes (  )  ) ;^894^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindDependencyScopes (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new HoistVariableAndFunctionDeclarations (  )  ) ;^895^896^^^^892^905^NodeTraversal.traverse ( compiler, root, new HoistVariableAndFunctionDeclarations (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new HoistVariableAndFunctionDeclarations (  )  ) ;^895^896^^^^892^905^NodeTraversal.traverse ( compiler, root, new HoistVariableAndFunctionDeclarations (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new HoistVariableAndFunctionDeclarations (  )  ) ;^895^896^^^^892^905^NodeTraversal.traverse ( compiler, root, new HoistVariableAndFunctionDeclarations (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new FindDeclarationsAndSetters (  )  ) ;^897^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindDeclarationsAndSetters (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new FindDeclarationsAndSetters (  )  ) ;^897^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindDeclarationsAndSetters (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new FindDeclarationsAndSetters (  )  ) ;^897^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindDeclarationsAndSetters (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new FindReferences (  )  ) ;^898^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindReferences (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new FindReferences (  )  ) ;^898^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindReferences (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new FindReferences (  )  ) ;^898^^^^^892^905^NodeTraversal.traverse ( compiler, root, new FindReferences (  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "TOTAL NAMES: " + countOf ( TriState. TriState.BOTH )  + "\n" ) ;^931^^^^^929^957^sb.append ( "TOTAL NAMES: " + countOf ( TriState.BOTH, TriState.BOTH )  + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "TOTAL CLASSES: " + countOf ( TriState. TriState.BOTH )  + "\n" ) ;^932^^^^^929^957^sb.append ( "TOTAL CLASSES: " + countOf ( TriState.TRUE, TriState.BOTH )  + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "TOTAL STATIC FUNCTIONS: " + countOf ( TriState. TriState.BOTH )  + "\n" ) ;^933^934^^^^929^957^sb.append ( "TOTAL STATIC FUNCTIONS: " + countOf ( TriState.FALSE, TriState.BOTH )  + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^+ countOf ( TriState. TriState.BOTH )  + "\n" ) ;^934^^^^^929^957^+ countOf ( TriState.FALSE, TriState.BOTH )  + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "REFERENCED NAMES: " + countOf ( TriState. TriState.TRUE ) + "\n" ) ;^935^936^^^^929^957^sb.append ( "REFERENCED NAMES: " + countOf ( TriState.BOTH, TriState.TRUE ) + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "REFERENCED CLASSES: " + countOf ( TriState. TriState.TRUE ) + "\n" ) ;^937^938^^^^929^957^sb.append ( "REFERENCED CLASSES: " + countOf ( TriState.TRUE, TriState.TRUE ) + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "REFERENCED STATIC FUNCTIONS: " + countOf ( TriState. TriState.TRUE )  + "\n" ) ;^939^940^^^^929^957^sb.append ( "REFERENCED STATIC FUNCTIONS: " + countOf ( TriState.FALSE, TriState.TRUE )  + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^+ countOf ( TriState. TriState.TRUE )  + "\n" ) ;^940^^^^^929^957^+ countOf ( TriState.FALSE, TriState.TRUE )  + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Set<JsName> gen = i.get ( generations ) ;^944^^^^^929^957^Set<JsName> gen = generations.get ( i ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "GENERATION " + gen + ": " + i.size (  )  + " names\n" ) ;^945^^^^^929^957^sb.append ( "GENERATION " + i + ": " + gen.size (  )  + " names\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( " - " + jsName.name.name + "\n" ) ;^947^^^^^929^957^sb.append ( " - " + jsName.name + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( " - " + jsName + "\n" ) ;^947^^^^^929^957^sb.append ( " - " + jsName.name + "\n" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getStringReport [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  "Total Names: " + countOf ( TriState.BOTH, TriState.BOTH )  ) ;^972^^^^^957^987^appendListItem ( sb, "Total Names: " + countOf ( TriState.BOTH, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, "Total Names: " + countOf ( TriState. TriState.BOTH )  ) ;^972^^^^^957^987^appendListItem ( sb, "Total Names: " + countOf ( TriState.BOTH, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  "Total Classes: " + countOf ( TriState.TRUE, TriState.BOTH )  ) ;^973^974^^^^958^988^appendListItem ( sb, "Total Classes: " + countOf ( TriState.TRUE, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, "Total Classes: " + countOf ( TriState. TriState.BOTH )  ) ;^973^974^^^^958^988^appendListItem ( sb, "Total Classes: " + countOf ( TriState.TRUE, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^+ countOf ( TriState. TriState.BOTH )  ) ;^974^^^^^959^989^+ countOf ( TriState.TRUE, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  "Total Static Functions: " + countOf ( TriState.FALSE, TriState.BOTH )  ) ;^975^976^^^^960^990^appendListItem ( sb, "Total Static Functions: " + countOf ( TriState.FALSE, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, "Total Static Functions: " + countOf ( TriState. TriState.BOTH )  ) ;^975^976^^^^960^990^appendListItem ( sb, "Total Static Functions: " + countOf ( TriState.FALSE, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^+ countOf ( TriState. TriState.BOTH )  ) ;^976^^^^^961^991^+ countOf ( TriState.FALSE, TriState.BOTH )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  "Referenced Names: " + countOf ( TriState.BOTH, TriState.TRUE )  ) ;^977^978^^^^962^992^appendListItem ( sb, "Referenced Names: " + countOf ( TriState.BOTH, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, "Referenced Names: " + countOf ( TriState. TriState.TRUE )  ) ;^977^978^^^^962^992^appendListItem ( sb, "Referenced Names: " + countOf ( TriState.BOTH, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^+ countOf ( TriState. TriState.TRUE )  ) ;^978^^^^^963^993^+ countOf ( TriState.BOTH, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  "Referenced Classes: " + countOf ( TriState.TRUE, TriState.TRUE )  ) ;^979^980^^^^964^994^appendListItem ( sb, "Referenced Classes: " + countOf ( TriState.TRUE, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, "Referenced Classes: " + countOf ( TriState. TriState.TRUE )  ) ;^979^980^^^^964^994^appendListItem ( sb, "Referenced Classes: " + countOf ( TriState.TRUE, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  "Referenced Functions: " + countOf ( TriState.FALSE, TriState.TRUE )  ) ;^981^982^^^^966^996^appendListItem ( sb, "Referenced Functions: " + countOf ( TriState.FALSE, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, "Referenced Functions: " + countOf ( TriState. TriState.TRUE )  ) ;^981^982^^^^966^996^appendListItem ( sb, "Referenced Functions: " + countOf ( TriState.FALSE, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^+ countOf ( TriState. TriState.TRUE )  ) ;^982^^^^^967^997^+ countOf ( TriState.FALSE, TriState.TRUE )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^for  ( generationsnt i = 0; i < i.size (  ) ; i++ )  {^986^^^^^971^1001^for  ( int i = 0; i < generations.size (  ) ; i++ )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Set<JsName> gen = i.get ( generations ) ;^987^^^^^972^1002^Set<JsName> gen = generations.get ( i ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "GENERATION " + gen + ": " + i.size (  )  + " names\n<ul>" ) ;^988^^^^^973^1003^sb.append ( "GENERATION " + i + ": " + gen.size (  )  + " names\n<ul>" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( jsName, nameLink ( sb.name )  ) ;^990^^^^^975^1005^appendListItem ( sb, nameLink ( jsName.name )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem (  nameLink ( jsName.name )  ) ;^990^^^^^975^1005^appendListItem ( sb, nameLink ( jsName.name )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, nameLink ( jsName )  ) ;^990^^^^^975^1005^appendListItem ( sb, nameLink ( jsName.name )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( sb, nameLink ( jsName.name.name )  ) ;^990^^^^^975^1005^appendListItem ( sb, nameLink ( jsName.name )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^appendListItem ( jsName.name, nameLink ( sb )  ) ;^990^^^^^975^1005^appendListItem ( sb, nameLink ( jsName.name )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Iterator<String> protoIter = node.prototypeNames.prototypeNames.iterator (  ) ;^1000^^^^^985^1015^Iterator<String> protoIter = node.prototypeNames.iterator (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Iterator<String> protoIter = node.iterator (  ) ;^1000^^^^^985^1015^Iterator<String> protoIter = node.prototypeNames.iterator (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node.refersTo.refersTo.size (  )  > 0 )  {^1008^^^^^993^1023^if  ( node.refersTo.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Iterator<String> toIter = node.refersTo.refersTo.iterator (  ) ;^1010^^^^^995^1025^Iterator<String> toIter = node.refersTo.iterator (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Iterator<String> toIter = node.iterator (  ) ;^1010^^^^^995^1025^Iterator<String> toIter = node.refersTo.iterator (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node.size (  )  > 0 )  {^1018^^^^^1003^1033^if  ( node.referencedBy.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Iterator<String> fromIter = node.referencedBy.referencedBy.iterator (  ) ;^1020^^^^^1005^1035^Iterator<String> fromIter = node.referencedBy.iterator (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Iterator<String> fromIter = node.iterator (  ) ;^1020^^^^^1005^1035^Iterator<String> fromIter = node.referencedBy.iterator (  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "<li>" + nameAnchor ( node.name.name )  + "<ul>" ) ;^997^^^^^982^1012^sb.append ( "<li>" + nameAnchor ( node.name )  + "<ul>" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^sb.append ( "<li>" + nameAnchor ( node )  + "<ul>" ) ;^997^^^^^982^1012^sb.append ( "<li>" + nameAnchor ( node.name )  + "<ul>" ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node.prototypeNames.prototypeNames.size (  )  > 0 )  {^998^^^^^983^1013^if  ( node.prototypeNames.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node.size (  )  > 0 )  {^998^^^^^983^1013^if  ( node.prototypeNames.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node.size (  )  > 0 )  {^1008^^^^^993^1023^if  ( node.refersTo.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( node.referencedBy.referencedBy.size (  )  > 0 )  {^1018^^^^^1003^1033^if  ( node.referencedBy.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getHtmlReport [RETURN_TYPE] String   [VARIABLES] Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  StringBuilder  sb  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Iterator  fromIter  protoIter  toIter  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return name.get ( allNames ) ;^1062^^^^^1058^1063^return allNames.get ( name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getName [RETURN_TYPE] NameAnalyzer$JsName   String name boolean canCreate [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName jsn = name.get ( allNames ) ;^1072^^^^^1071^1078^JsName jsn = allNames.get ( name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createName [RETURN_TYPE] void   String name [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^allNames.put (  jsn ) ;^1076^^^^^1071^1078^allNames.put ( name, jsn ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createName [RETURN_TYPE] void   String name [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^allNames.put ( name ) ;^1076^^^^^1071^1078^allNames.put ( name, jsn ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createName [RETURN_TYPE] void   String name [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  from  jsName  jsn  name  nameInfo  node  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  fromName  name  nodeName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^String curName = name.name.name;^1090^^^^^1084^1108^String curName = name.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] referenceParentNames [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^String curName = name;^1090^^^^^1084^1108^String curName = name.name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] referenceParentNames [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  root  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = "." + name.getString (  )  + prop;^1129^^^^^1114^1144^name = "." + prop.getString (  )  + name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^SubclassRelationship classes = parent.getCodingConvention (  ) .getClassesDefinedByCall ( compiler ) ;^1141^1142^^^^1126^1156^SubclassRelationship classes = compiler.getCodingConvention (  ) .getClassesDefinedByCall ( parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( !bNameWasShortened && parent.getType (  )  == Token.GETPROP && n.getType (  )  == Token.ASSIGN && "prototype".equals ( n.getLastChild (  ) .getString (  )  )  )  {^1156^1157^1158^1159^^1141^1171^if  ( !bNameWasShortened && n.getType (  )  == Token.GETPROP && parent.getType (  )  == Token.ASSIGN && "prototype".equals ( n.getLastChild (  ) .getString (  )  )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( createNameInformation ( n, t.getFirstChild (  ) , n )  != null )  {^1160^^^^^1156^1169^if  ( createNameInformation ( t, n.getFirstChild (  ) , n )  != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( createNameInformation (  n.getFirstChild (  ) , n )  != null )  {^1160^^^^^1156^1169^if  ( createNameInformation ( t, n.getFirstChild (  ) , n )  != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( createNameInformation ( t.getFirstChild (  ) , n )  != null )  {^1160^^^^^1156^1169^if  ( createNameInformation ( t, n.getFirstChild (  ) , n )  != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = name.getString (  )  + rootNameNode;^1161^^^^^1156^1169^name = rootNameNode.getString (  )  + name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = PROTOTYPE_SUFFIX_LEN.substring ( 0, name.length (  )  - name ) ;^1162^^^^^1156^1169^name = name.substring ( 0, name.length (  )  - PROTOTYPE_SUFFIX_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = name.substring ( 0.length (  )  - PROTOTYPE_SUFFIX_LEN ) ;^1162^^^^^1156^1169^name = name.substring ( 0, name.length (  )  - PROTOTYPE_SUFFIX_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( createNameInformation (  n.getFirstChild (  ) , n )  != null )  {^1160^^^^^1145^1175^if  ( createNameInformation ( t, n.getFirstChild (  ) , n )  != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( createNameInformation ( t.getFirstChild (  ) , n )  != null )  {^1160^^^^^1145^1175^if  ( createNameInformation ( t, n.getFirstChild (  ) , n )  != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = name.getString (  )  + rootNameNode;^1161^^^^^1146^1176^name = rootNameNode.getString (  )  + name;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = PROTOTYPE_SUFFIX_LEN.substring ( 0, name.length (  )  - name ) ;^1162^^^^^1147^1177^name = name.substring ( 0, name.length (  )  - PROTOTYPE_SUFFIX_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^name = name.substring ( 0.length (  )  - PROTOTYPE_SUFFIX_LEN ) ;^1162^^^^^1147^1177^name = name.substring ( 0, name.length (  )  - PROTOTYPE_SUFFIX_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return createNameInformation ( name.getString (  )  + rootNameNode, t.getScope (  ) , rootNameNode ) ;^1170^1171^^^^1155^1185^return createNameInformation ( rootNameNode.getString (  )  + name, t.getScope (  ) , rootNameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return createNameInformation ( rootNameNode.getString (  )  + name, t.getScope (  )  ) ;^1170^1171^^^^1155^1185^return createNameInformation ( rootNameNode.getString (  )  + name, t.getScope (  ) , rootNameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return createNameInformation ( rootNameNode.getString (  )  + t, name.getScope (  ) , rootNameNode ) ;^1170^1171^^^^1155^1185^return createNameInformation ( rootNameNode.getString (  )  + name, t.getScope (  ) , rootNameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return createNameInformation ( rootNameNode.getString (  )  +  t.getScope (  ) , rootNameNode ) ;^1170^1171^^^^1155^1185^return createNameInformation ( rootNameNode.getString (  )  + name, t.getScope (  ) , rootNameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return createNameInformation ( rootNameNode.getString (  )  + name.getScope (  ) , rootNameNode ) ;^1170^1171^^^^1155^1185^return createNameInformation ( rootNameNode.getString (  )  + name, t.getScope (  ) , rootNameNode ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( createNameInformation ( n, t.getFirstChild (  ) , n )  != null )  {^1160^^^^^1145^1175^if  ( createNameInformation ( t, n.getFirstChild (  ) , n )  != null )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Var v = rootName.getVar ( scope ) ;^1203^^^^^1200^1226^Var v = scope.getVar ( rootName ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean isExtern =  ( rootName == null && externalNames.contains ( v )  ) ;^1204^^^^^1200^1226^boolean isExtern =  ( v == null && externalNames.contains ( rootName )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean isExtern =  ( v == null && rootName.contains ( externalNames )  ) ;^1204^^^^^1200^1226^boolean isExtern =  ( v == null && externalNames.contains ( rootName )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean isGlobalRef =  ( WINDOW != null && v.isGlobal (  )  )  || isExtern || rootName.equals ( v ) ;^1205^1206^^^^1200^1226^boolean isGlobalRef =  ( v != null && v.isGlobal (  )  )  || isExtern || rootName.equals ( WINDOW ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean isGlobalRef =  ( v != null && v.isGlobal (  )  )  || rootName || isExtern.equals ( WINDOW ) ;^1205^1206^^^^1200^1226^boolean isGlobalRef =  ( v != null && v.isGlobal (  )  )  || isExtern || rootName.equals ( WINDOW ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean isGlobalRef =  ( v != null && v.isGlobal (  )  )  || isExtern || WINDOW.equals ( rootName ) ;^1205^1206^^^^1200^1226^boolean isGlobalRef =  ( v != null && v.isGlobal (  )  )  || isExtern || rootName.equals ( WINDOW ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^int idx = PROTOTYPE_SUBSTRING.indexOf ( name ) ;^1214^^^^^1200^1226^int idx = name.indexOf ( PROTOTYPE_SUBSTRING ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.prototypeClass = idx.substring ( 0, name ) ;^1217^^^^^1200^1226^nameInfo.prototypeClass = name.substring ( 0, idx ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.prototypeClass = name.substring ( 0 ) ;^1217^^^^^1200^1226^nameInfo.prototypeClass = name.substring ( 0, idx ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.prototypeProperty = idx.substring ( name + PROTOTYPE_SUBSTRING_LEN ) ;^1218^1219^^^^1200^1226^nameInfo.prototypeProperty = name.substring ( idx + PROTOTYPE_SUBSTRING_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.prototypeProperty = name.substring ( PROTOTYPE_SUBSTRING_LEN + idx ) ;^1218^1219^^^^1200^1226^nameInfo.prototypeProperty = name.substring ( idx + PROTOTYPE_SUBSTRING_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.prototypeProperty = PROTOTYPE_SUBSTRING_LEN.substring ( idx + name ) ;^1218^1219^^^^1200^1226^nameInfo.prototypeProperty = name.substring ( idx + PROTOTYPE_SUBSTRING_LEN ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.isExternallyReferenceable = scope || isExternallyReferenceable ( isExtern, name ) ;^1223^1224^^^^1200^1226^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable (  name ) ;^1223^1224^^^^1200^1226^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable ( name, scope ) ;^1223^1224^^^^1200^1226^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable ( scope ) ;^1223^1224^^^^1200^1226^nameInfo.isExternallyReferenceable = isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^isExtern || isExternallyReferenceable ( name, scope ) ;^1224^^^^^1200^1226^isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^isExtern || isExternallyReferenceable (  name ) ;^1224^^^^^1200^1226^isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^isExtern || isExternallyReferenceable ( scope ) ;^1224^^^^^1200^1226^isExtern || isExternallyReferenceable ( scope, name ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation   String name Scope scope Node rootNameNode [VARIABLES] NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  Var  v  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( name.getCodingConvention (  ) .isExported ( compiler )  )  {^1237^^^^^1236^1249^if  ( compiler.getCodingConvention (  ) .isExported ( name )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] isExternallyReferenceable [RETURN_TYPE] boolean   Scope scope String name [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( s.startsWith ( name )  )  {^1244^^^^^1236^1249^if  ( name.startsWith ( s )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] isExternallyReferenceable [RETURN_TYPE] boolean   Scope scope String name [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Scope  scope  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ref = node.get ( scopes ) ;^1256^^^^^1254^1263^NameInformation ref = scopes.get ( node ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getDependencyScope [RETURN_TYPE] NameAnalyzer$NameInformation   Node n [VARIABLES] AbstractCompiler  compiler  NameInformation  ref  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NameInformation ref = function.get ( scopes ) ;^1277^^^^^1271^1299^NameInformation ref = scopes.get ( function ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getEnclosingFunctionDependencyScope [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t [VARIABLES] NameInformation  ref  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return parent.get ( scopes ) ;^1287^^^^^1271^1299^return scopes.get ( parent ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getEnclosingFunctionDependencyScope [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t [VARIABLES] NameInformation  ref  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return gramp.get ( scopes ) ;^1293^^^^^1271^1299^return scopes.get ( gramp ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getEnclosingFunctionDependencyScope [RETURN_TYPE] NameAnalyzer$NameInformation   NodeTraversal t [VARIABLES] NameInformation  ref  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( jsn.refersTo.refersTo.size (  )  > 0 )  {^1321^^^^^1306^1336^if  ( jsn.refersTo.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] calculateReferences [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( jsn.size (  )  > 0 )  {^1321^^^^^1306^1336^if  ( jsn.refersTo.size (  )  > 0 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] calculateReferences [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^while  ( iters.size (  )  > 0 && curGeneration < 100 )  {^1332^^^^^1317^1347^while  ( curGeneration.size (  )  > 0 && iters < 100 )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] calculateReferences [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  nodesToKeep  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^target.generation = src + 1;^1355^^^^^1348^1361^target.generation = src.generation + 1;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] referenceMore [RETURN_TYPE] Set   JsName> lastGen [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^JsName target = s.get ( allNames ) ;^1352^^^^^1348^1361^JsName target = allNames.get ( s ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] referenceMore [RETURN_TYPE] Set   JsName> lastGen [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean nodeIsClass = name.prototypeNames.prototypeNames.size (  )  > 0;^1387^^^^^1383^1402^boolean nodeIsClass = name.prototypeNames.size (  )  > 0;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] countOf [RETURN_TYPE] int   TriState isClass TriState referenced [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean nodeIsClass = name.size (  )  > 0;^1387^^^^^1383^1402^boolean nodeIsClass = name.prototypeNames.size (  )  > 0;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] countOf [RETURN_TYPE] int   TriState isClass TriState referenced [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean classMatch = nodeIsClass == TriState.BOTH ||  ( isClass && isClass == TriState.TRUE ) ||  ( !nodeIsClass && isClass == TriState.FALSE ) ;^1389^1390^1391^^^1383^1402^boolean classMatch = isClass == TriState.BOTH ||  ( nodeIsClass && isClass == TriState.TRUE ) ||  ( !nodeIsClass && isClass == TriState.FALSE ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] countOf [RETURN_TYPE] int   TriState isClass TriState referenced [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^boolean referenceMatch = referenced == TriState.BOTH ||  ( name && referenced == TriState.TRUE ) ||  ( !name.referenced && referenced == TriState.FALSE ) ;^1393^1394^1395^^^1383^1402^boolean referenceMatch = referenced == TriState.BOTH ||  ( name.referenced && referenced == TriState.TRUE ) ||  ( !name.referenced && referenced == TriState.FALSE ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] countOf [RETURN_TYPE] int   TriState isClass TriState referenced [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new GatherSideEffectSubexpressionsCallback ( subexpressions, new CopySideEffectSubexpressions ( compiler, compiler )  )  ) ;^1412^1413^1414^^^1408^1422^new GatherSideEffectSubexpressionsCallback ( compiler, new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new GatherSideEffectSubexpressionsCallback ( compiler, new CopySideEffectSubexpressions ( compiler )  )  ) ;^1412^1413^1414^^^1408^1422^new GatherSideEffectSubexpressionsCallback ( compiler, new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new GatherSideEffectSubexpressionsCallback (  new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^1412^1413^1414^^^1408^1422^new GatherSideEffectSubexpressionsCallback ( compiler, new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new CopySideEffectSubexpressions ( subexpressions, compiler )  )  ) ;^1414^^^^^1408^1422^new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new CopySideEffectSubexpressions ( compiler )  )  ) ;^1414^^^^^1408^1422^new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^new CopySideEffectSubexpressions (  subexpressions )  )  ) ;^1414^^^^^1408^1422^new CopySideEffectSubexpressions ( compiler, subexpressions )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GatherSideEffectSubexpressionsCallback ( compiler,^1410^1411^1412^1413^^1408^1422^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler,^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^NodeTraversal.traverse (  n, new GatherSideEffectSubexpressionsCallback ( compiler,^1410^1411^1412^1413^^1408^1422^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler,^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replacements.add ( new Node ( Token.EXPR_RESULT )  ) ;^1419^^^^^1408^1422^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replacements.add ( new Node ( Token. subexpression )  ) ;^1419^^^^^1408^1422^replacements.add ( new Node ( Token.EXPR_RESULT, subexpression )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getSideEffectNodes [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  root  rootNameNode  step  subexpression  thenBranch  value  List  earlyChildren  generations  lateChildren  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( valueConsumedByParent (  parent )  )  {^1432^^^^^1431^1457^if  ( valueConsumedByParent ( n, parent )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( valueConsumedByParent ( n )  )  {^1432^^^^^1431^1457^if  ( valueConsumedByParent ( n, parent )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^} else if  ( parent.getType (  )  == Token.ASSIGN && n.getType (  )  != Token.FOR )  {^1445^^^^^1431^1457^} else if  ( n.getType (  )  == Token.ASSIGN && parent.getType (  )  != Token.FOR )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceTopLevelExpressionWithRhs ( n, parent ) ;^1455^^^^^1445^1456^replaceTopLevelExpressionWithRhs ( parent, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceTopLevelExpressionWithRhs (  n ) ;^1455^^^^^1445^1456^replaceTopLevelExpressionWithRhs ( parent, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceTopLevelExpressionWithRhs ( parent ) ;^1455^^^^^1445^1456^replaceTopLevelExpressionWithRhs ( parent, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( replacement, n, parent ) ;^1453^^^^^1431^1457^changeProxy.replaceWith ( parent, n, replacement ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith (  n, replacement ) ;^1453^^^^^1431^1457^changeProxy.replaceWith ( parent, n, replacement ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( n, parent, replacement ) ;^1453^^^^^1431^1457^changeProxy.replaceWith ( parent, n, replacement ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent,  replacement ) ;^1453^^^^^1431^1457^changeProxy.replaceWith ( parent, n, replacement ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, replacement, n ) ;^1453^^^^^1431^1457^changeProxy.replaceWith ( parent, n, replacement ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, n ) ;^1453^^^^^1431^1457^changeProxy.replaceWith ( parent, n, replacement ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceTopLevelExpressionWithRhs ( n, parent ) ;^1455^^^^^1431^1457^replaceTopLevelExpressionWithRhs ( parent, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceTopLevelExpressionWithRhs (  n ) ;^1455^^^^^1431^1457^replaceTopLevelExpressionWithRhs ( parent, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^replaceTopLevelExpressionWithRhs ( parent ) ;^1455^^^^^1431^1457^replaceTopLevelExpressionWithRhs ( parent, n ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^for  ( replacementsnt i = 0; i < i.size (  )  - 1; i++ )  {^1437^^^^^1431^1457^for  ( int i = 0; i < replacements.size (  )  - 1; i++ )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^newReplacements.addAll ( getSideEffectNodes ( i.get ( replacements )  )  ) ;^1438^^^^^1431^1457^newReplacements.addAll ( getSideEffectNodes ( replacements.get ( i )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( n, parent, collapseReplacements ( newReplacements )  ) ;^1443^1444^^^^1431^1457^changeProxy.replaceWith ( parent, n, collapseReplacements ( newReplacements )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith (  n, collapseReplacements ( newReplacements )  ) ;^1443^1444^^^^1431^1457^changeProxy.replaceWith ( parent, n, collapseReplacements ( newReplacements )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent,  collapseReplacements ( newReplacements )  ) ;^1443^1444^^^^1431^1457^changeProxy.replaceWith ( parent, n, collapseReplacements ( newReplacements )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( newReplacements, n, collapseReplacements ( parent )  ) ;^1443^1444^^^^1431^1457^changeProxy.replaceWith ( parent, n, collapseReplacements ( newReplacements )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^if  ( valueConsumedByParent ( parent, n )  )  {^1432^^^^^1431^1457^if  ( valueConsumedByParent ( n, parent )  )  {^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, newReplacements, collapseReplacements ( n )  ) ;^1443^1444^^^^1431^1457^changeProxy.replaceWith ( parent, n, collapseReplacements ( newReplacements )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^Preconditions.checkArgument ( parent.getType (  )  == Token. "Unsupported assignment in replaceWithRhs. parent: " + Token.name ( parent.getType (  )  )  ) ;^1483^1484^1485^1486^^1468^1498^Preconditions.checkArgument ( parent.getType (  )  == Token.FOR, "Unsupported assignment in replaceWithRhs. parent: " + Token.name ( parent.getType (  )  )  ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceTopLevelExpressionWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith (  n, replacements ) ;^1511^^^^^1496^1526^changeProxy.replaceWith ( parent, n, replacements ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceTopLevelExpressionWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( n, parent, replacements ) ;^1511^^^^^1496^1526^changeProxy.replaceWith ( parent, n, replacements ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceTopLevelExpressionWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent,  replacements ) ;^1511^^^^^1496^1526^changeProxy.replaceWith ( parent, n, replacements ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceTopLevelExpressionWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, n ) ;^1511^^^^^1496^1526^changeProxy.replaceWith ( parent, n, replacements ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] replaceTopLevelExpressionWithRhs [RETURN_TYPE] void   Node parent Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return n.getLastChild (  )  == parent;^1531^^^^^1529^1552^return parent.getLastChild (  )  == n;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] valueConsumedByParent [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return n.getFirstChild (  )  == parent;^1541^^^^^1529^1552^return parent.getFirstChild (  )  == n;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] valueConsumedByParent [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return n.getFirstChild (  ) .getNext (  )  == parent;^1543^^^^^1529^1552^return parent.getFirstChild (  ) .getNext (  )  == n;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] valueConsumedByParent [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return n.getFirstChild (  )  == parent;^1546^^^^^1529^1552^return parent.getFirstChild (  )  == n;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] valueConsumedByParent [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return n.getLastChild (  )  == parent;^1548^^^^^1529^1552^return parent.getLastChild (  )  == n;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] valueConsumedByParent [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^expr = new Node ( Token.COMMA,  rep ) ;^1569^^^^^1558^1574^expr = new Node ( Token.COMMA, expr, rep ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] collapseReplacements [RETURN_TYPE] Node   Node> replacements [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^expr = new Node ( Token.COMMA, rep, expr ) ;^1569^^^^^1558^1574^expr = new Node ( Token.COMMA, expr, rep ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] collapseReplacements [RETURN_TYPE] Node   Node> replacements [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^expr = new Node ( Token.COMMA, expr ) ;^1569^^^^^1558^1574^expr = new Node ( Token.COMMA, expr, rep ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] collapseReplacements [RETURN_TYPE] Node   Node> replacements [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^expr = new Node ( Token. expr, rep ) ;^1569^^^^^1558^1574^expr = new Node ( Token.COMMA, expr, rep ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] collapseReplacements [RETURN_TYPE] Node   Node> replacements [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return Lists.newArrayList ( rhs, lhs ) ;^1602^^^^^1587^1617^return Lists.newArrayList ( lhs, rhs ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getRhsSubexpressions [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  lhs  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  nodes  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return Lists.newArrayList (  rhs ) ;^1602^^^^^1587^1617^return Lists.newArrayList ( lhs, rhs ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getRhsSubexpressions [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  lhs  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  nodes  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return Lists.newArrayList ( lhs ) ;^1602^^^^^1587^1617^return Lists.newArrayList ( lhs, rhs ) ;^[CLASS] NameAnalyzer NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters FindReferences NodeAccumulator RemoveListener TriState  [METHOD] getRhsSubexpressions [RETURN_TYPE] List   Node n [VARIABLES] AbstractCompiler  compiler  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  curGeneration  externalNames  gen  globalNames  lastGen  nodesToKeep  referenced  referencedBy  refersTo  boolean  bNameWasShortened  canCreate  classMatch  elseHasSideEffects  externallyDefined  isExtern  isExternallyReferenceable  isGlobalRef  isPrototype  nodeIsClass  onlyAffectsClassDef  referenceMatch  referenced  removeUnreferenced  seen  thenHasSideEffects  JsName  checkedClass  curJsName  from  function  jsName  jsn  name  nameInfo  node  parentJsName  rhs  src  target  to  window  Node  ancestor  callNode  child  condition  containingNode  currDecl  decl  earlyDecls  elseBranch  expr  externs  function  gramp  gramps  hook  iter  lhs  n  nameNode  node  original  parent  pred  prop  rep  replacement  rhs  root  rootNameNode  step  subexpression  thenBranch  value  valueExpr  List  earlyChildren  generations  lateChildren  newReplacements  nodes  prototypeNames  refNodes  replacements  subexpressions  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  curName  fromName  name  nodeName  parentName  prototypeClass  prototypeProperty  referringName  rootName  s  superclass  text  toName  TriState  BOTH  FALSE  TRUE  isClass  referenced  Map  allNames  scopes  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  count  generation  i  idx  iters  AstChangeProxy  changeProxy  
[buglab_swap_variables]^return this.name.compareTo ( rhs.name.name ) ;^215^^^^^214^216^return this.name.compareTo ( rhs.name ) ;^[CLASS] JsName  [METHOD] compareTo [RETURN_TYPE] int   JsName rhs [VARIABLES] List  prototypeNames  Set  referencedBy  refersTo  boolean  externallyDefined  referenced  String  name  JsName  rhs  int  generation  
[buglab_swap_variables]^return rhs.compareTo ( this.name.name ) ;^215^^^^^214^216^return this.name.compareTo ( rhs.name ) ;^[CLASS] JsName  [METHOD] compareTo [RETURN_TYPE] int   JsName rhs [VARIABLES] List  prototypeNames  Set  referencedBy  refersTo  boolean  externallyDefined  referenced  String  name  JsName  rhs  int  generation  
[buglab_swap_variables]^return this.name.compareTo ( rhs ) ;^215^^^^^214^216^return this.name.compareTo ( rhs.name ) ;^[CLASS] JsName  [METHOD] compareTo [RETURN_TYPE] int   JsName rhs [VARIABLES] List  prototypeNames  Set  referencedBy  refersTo  boolean  externallyDefined  referenced  String  name  JsName  rhs  int  generation  
[buglab_swap_variables]^return rhs.name.compareTo ( this.name ) ;^215^^^^^214^216^return this.name.compareTo ( rhs.name ) ;^[CLASS] JsName  [METHOD] compareTo [RETURN_TYPE] int   JsName rhs [VARIABLES] List  prototypeNames  Set  referencedBy  refersTo  boolean  externallyDefined  referenced  String  name  JsName  rhs  int  generation  
[buglab_swap_variables]^if  ( node == child )  {^283^^^^^268^298^if  ( child == node )  {^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildBefore ( parent, earlyDecls ) ;^301^^^^^286^316^containingNode.addChildBefore ( earlyDecls, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildBefore (  parent ) ;^301^^^^^286^316^containingNode.addChildBefore ( earlyDecls, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildBefore ( earlyDecls ) ;^301^^^^^286^316^containingNode.addChildBefore ( earlyDecls, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildAfter ( parent, currDecl ) ;^310^^^^^307^311^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildAfter (  parent ) ;^310^^^^^307^311^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildAfter ( currDecl ) ;^310^^^^^307^311^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildBefore ( parent, currDecl ) ;^308^^^^^293^323^containingNode.addChildBefore ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildBefore (  parent ) ;^308^^^^^293^323^containingNode.addChildBefore ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildBefore ( currDecl ) ;^308^^^^^293^323^containingNode.addChildBefore ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildAfter ( parent, currDecl ) ;^310^^^^^295^325^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildAfter (  parent ) ;^310^^^^^295^325^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^containingNode.addChildAfter ( currDecl ) ;^310^^^^^295^325^containingNode.addChildAfter ( currDecl, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( currDecl, containingNode ) ;^312^^^^^297^327^replaceWithRhs ( containingNode, currDecl ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs (  currDecl ) ;^312^^^^^297^327^replaceWithRhs ( containingNode, currDecl ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^312^^^^^297^327^replaceWithRhs ( containingNode, currDecl ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^271^^^^^256^286^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^271^^^^^256^286^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^271^^^^^256^286^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^322^^^^^319^323^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^322^^^^^319^323^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^322^^^^^319^323^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^316^^^^^301^331^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^316^^^^^301^331^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^316^^^^^301^331^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( parent, containingNode ) ;^322^^^^^307^337^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs (  parent ) ;^322^^^^^307^337^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^replaceWithRhs ( containingNode ) ;^322^^^^^307^337^replaceWithRhs ( containingNode, parent ) ;^[CLASS] JsNameRefNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] List  earlyChildren  lateChildren  boolean  seen  JsName  name  Node  child  containingNode  currDecl  earlyDecls  node  parent  
[buglab_swap_variables]^super ( parent, name.getFirstChild (  )  ) ;^341^^^^^340^344^super ( name, parent.getFirstChild (  )  ) ;^[CLASS] PrototypeSetNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node parent [VARIABLES] boolean  JsName  name  Node  parent  
[buglab_swap_variables]^super (  parent.getFirstChild (  )  ) ;^341^^^^^340^344^super ( name, parent.getFirstChild (  )  ) ;^[CLASS] PrototypeSetNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node parent [VARIABLES] boolean  JsName  name  Node  parent  
[buglab_swap_variables]^super ( name.getFirstChild (  )  ) ;^341^^^^^340^344^super ( name, parent.getFirstChild (  )  ) ;^[CLASS] PrototypeSetNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node parent [VARIABLES] boolean  JsName  name  Node  parent  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, gramps, parent.getLastChild (  ) .cloneTree (  )  ) ;^353^354^^^^346^356^changeProxy.replaceWith ( gramps, parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^[CLASS] PrototypeSetNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  Node  gramps  
[buglab_swap_variables]^changeProxy.replaceWith (  parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^353^354^^^^346^356^changeProxy.replaceWith ( gramps, parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^[CLASS] PrototypeSetNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  Node  gramps  
[buglab_swap_variables]^changeProxy.replaceWith ( gramps,  parent.getLastChild (  ) .cloneTree (  )  ) ;^353^354^^^^346^356^changeProxy.replaceWith ( gramps, parent, parent.getLastChild (  ) .cloneTree (  )  ) ;^[CLASS] PrototypeSetNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  Node  gramps  
[buglab_swap_variables]^changeProxy.removeChild ( gramps.getParent (  )  ) ;^350^^^^^346^356^changeProxy.removeChild ( gramps.getParent (  ) , gramps ) ;^[CLASS] PrototypeSetNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  Node  gramps  
[buglab_swap_variables]^super ( parent, node, name, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super (  node, parent, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, parent, node, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name,  parent, gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, node, gramps, parent ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, node,  gramps ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, node, parent ) ;^413^^^^^411^415^super ( name, node, parent, gramps ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^changeProxy.replaceWith ( node, parent, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.replaceWith (  node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.replaceWith ( parent,  new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, node, new Node ( Token. Node.newNumber ( 0 )  )  ) ;^422^423^^^^417^425^changeProxy.replaceWith ( parent, node, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.removeChild ( parent, gramps ) ;^420^^^^^417^425^changeProxy.removeChild ( gramps, parent ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.removeChild (  parent ) ;^420^^^^^417^425^changeProxy.removeChild ( gramps, parent ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.removeChild ( gramps ) ;^420^^^^^417^425^changeProxy.removeChild ( gramps, parent ) ;^[CLASS] ClassDefiningFunctionNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^super ( gramps, node, parent, name ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super (  node, parent, gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, gramps, parent, node ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name,  parent, gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, parent, node, gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, node,  gramps ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^super ( name, node, parent ) ;^444^^^^^443^447^super ( name, node, parent, gramps ) ;^[CLASS] InstanceOfCheckNode  [METHOD] <init> [RETURN_TYPE] Node)   JsName name Node node Node parent Node gramps [VARIABLES] boolean  JsName  name  Node  gramps  node  parent  
[buglab_swap_variables]^changeProxy.replaceWith ( parent, gramps, new Node ( Token.FALSE )  ) ;^450^^^^^449^451^changeProxy.replaceWith ( gramps, parent, new Node ( Token.FALSE )  ) ;^[CLASS] InstanceOfCheckNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.replaceWith (  parent, new Node ( Token.FALSE )  ) ;^450^^^^^449^451^changeProxy.replaceWith ( gramps, parent, new Node ( Token.FALSE )  ) ;^[CLASS] InstanceOfCheckNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^changeProxy.replaceWith ( gramps,  new Node ( Token.FALSE )  ) ;^450^^^^^449^451^changeProxy.replaceWith ( gramps, parent, new Node ( Token.FALSE )  ) ;^[CLASS] InstanceOfCheckNode  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^ns = createNameInformation ( n, t.getFirstChild (  ) , n ) ;^463^^^^^458^470^ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation (  n.getFirstChild (  ) , n ) ;^463^^^^^458^470^ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation ( t.getFirstChild (  ) , n ) ;^463^^^^^458^470^ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation ( parent, n, t ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation (  n, parent ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation ( t, parent, n ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation ( t,  parent ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation ( t, n ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^ns = createNameInformation ( n, t, parent ) ;^461^^^^^458^470^ns = createNameInformation ( t, n, parent ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^JsName jsName = getName ( ns.name.name, true ) ;^466^^^^^458^470^JsName jsName = getName ( ns.name, true ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^JsName jsName = getName ( ns, true ) ;^466^^^^^458^470^JsName jsName = getName ( ns.name, true ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^JsName jsName = getName (  true ) ;^466^^^^^458^470^JsName jsName = getName ( ns.name, true ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^externalNames.add ( ns.name.name ) ;^468^^^^^458^470^externalNames.add ( ns.name ) ;^[CLASS] ProcessExternals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  jsName  NodeTraversal  t  Node  n  parent  
[buglab_swap_variables]^if  ( n != nsull && ns.onlyAffectsClassDef )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDefs != null && n )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDef != null && ns )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( ns, n ) ;^517^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope (  ns ) ;^517^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( n ) ;^517^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( callNode, nameNode, t ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, callNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, callNode, nameNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  callNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, nameNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, callNode ) ;^515^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, callNode ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^if  ( nss != null && n.onlyAffectsClassDef )  {^516^^^^^495^520^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n.getFirstChild (  ) , n ) ;^510^^^^^495^520^NameInformation ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n.getFirstChild (  ) , n ) ;^510^^^^^495^520^NameInformation ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t.getFirstChild (  ) , n ) ;^510^^^^^495^520^NameInformation ns = createNameInformation ( t, n.getFirstChild (  ) , n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( ns, n ) ;^511^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope (  ns ) ;^511^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( n ) ;^511^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( parent, n, t ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n, parent ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation parents = createNameInformation ( t, n, n ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  parent ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, n ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n, parent ) ;^507^^^^^495^520^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( ns, n ) ;^508^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope (  ns ) ;^508^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( n ) ;^508^^^^^495^520^recordDepScope ( n, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( ns, parent ) ;^504^^^^^495^520^recordDepScope ( parent, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope (  ns ) ;^504^^^^^495^520^recordDepScope ( parent, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^recordDepScope ( parent ) ;^504^^^^^495^520^recordDepScope ( parent, ns ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^502^^^^^495^520^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDependencyScopes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  callNode  n  nameNode  parent  
[buglab_swap_variables]^scopes.put ( name, node ) ;^526^^^^^525^527^scopes.put ( node, name ) ;^[CLASS] FindDependencyScopes  [METHOD] recordDepScope [RETURN_TYPE] void   Node node NameInformation name [VARIABLES] NameInformation  name  boolean  Node  node  
[buglab_swap_variables]^scopes.put (  name ) ;^526^^^^^525^527^scopes.put ( node, name ) ;^[CLASS] FindDependencyScopes  [METHOD] recordDepScope [RETURN_TYPE] void   Node node NameInformation name [VARIABLES] NameInformation  name  boolean  Node  node  
[buglab_swap_variables]^scopes.put ( node ) ;^526^^^^^525^527^scopes.put ( node, name ) ;^[CLASS] FindDependencyScopes  [METHOD] recordDepScope [RETURN_TYPE] void   Node node NameInformation name [VARIABLES] NameInformation  name  boolean  Node  node  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^546^^^^^539^550^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n, parent ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n, parent ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation parents = createNameInformation ( t, n, n ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  parent ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, n ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^createName ( ns.name.name ) ;^543^^^^^539^550^createName ( ns.name ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^createName ( ns ) ;^543^^^^^539^550^createName ( ns.name ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( parent, n, t ) ;^541^^^^^539^550^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] HoistVariableAndFunctionDeclarations  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameNode.name, nameInfo ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameInfo.name ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameNode, nameInfo.name ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet (  nameNode ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^573^^^^^558^588^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameInfo.name.name, nameNode ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameInfo, nameNode ) ;^576^^^^^561^591^recordSet ( nameInfo.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, n, parent ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  n, parent ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation parents = createNameInformation ( t, n, n ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  parent ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t, n ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( parent, n, t ) ;^568^^^^^553^583^NameInformation ns = createNameInformation ( t, n, parent ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.name.name, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.names.name, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.name ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet (  n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( n.name, ns ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nss.name, n ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( n, ns.name ) ;^570^^^^^555^585^recordSet ( ns.name, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^if  ( n != nsull && ns.onlyAffectsClassDef )  {^600^^^^^585^615^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( nameew ClassDefiningFunctionNode ( n, n, parent, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode (  n, parent, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( parentew ClassDefiningFunctionNode ( name, n, n, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode ( name,  parent, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode ( name, n,  parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsName name = getName ( ns.name.name, false ) ;^601^^^^^586^616^JsName name = getName ( ns.name, false ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsName name = getName ( ns, false ) ;^601^^^^^586^616^JsName name = getName ( ns.name, false ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsName name = getName (  false ) ;^601^^^^^586^616^JsName name = getName ( ns.name, false ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( new ClassDefiningFunctionNode ( parent, n, name, parent.getParent (  )  )  ) ;^603^604^^^^588^618^refNodes.add ( new ClassDefiningFunctionNode ( name, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^599^^^^^584^614^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDef != null && ns )  {^600^^^^^585^615^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.name.name, nameNode ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameNode.name, ns ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.name ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns, nameNode ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet (  nameNode ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( nameew PrototypeSetNode ( n, n )  ) ;^591^^^^^576^606^refNodes.add ( new PrototypeSetNode ( name, n )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( new PrototypeSetNode (  n )  ) ;^591^^^^^576^606^refNodes.add ( new PrototypeSetNode ( name, n )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^refNodes.add ( new PrototypeSetNode ( name )  ) ;^591^^^^^576^606^refNodes.add ( new PrototypeSetNode ( name, n )  ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^name.prototypeNames.add ( ns ) ;^590^^^^^575^605^name.prototypeNames.add ( ns.prototypeProperty ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsName name = getName ( ns.prototypeClass.prototypeClass, false ) ;^588^^^^^573^603^JsName name = getName ( ns.prototypeClass, false ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsName name = getName ( ns, false ) ;^588^^^^^573^603^JsName name = getName ( ns.prototypeClass, false ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsName name = getName (  false ) ;^588^^^^^573^603^JsName name = getName ( ns.prototypeClass, false ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^name.prototypeNames.add ( ns.prototypeProperty.prototypeProperty ) ;^590^^^^^575^605^name.prototypeNames.add ( ns.prototypeProperty ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameNode.name, ns ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameNode, ns.name ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.name ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet (  nameNode ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( nameNode, ns.name ) ;^594^^^^^587^595^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^if  ( n != nameull )  {^589^^^^^574^604^if  ( name != null )  {^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( nameNode, t, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation (  nameNode, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation nameNodes = createNameInformation ( t, n, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( t,  n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ns = createNameInformation ( tameNode, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^NameInformation ts = createNameInformation ( n, nameNode, n ) ;^585^^^^^570^600^NameInformation ns = createNameInformation ( t, nameNode, n ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns.name.name, nameNode ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^if  ( ns.isPrototype.isPrototype )  {^587^^^^^572^602^if  ( ns.isPrototype )  {^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^recordSet ( ns, nameNode ) ;^594^^^^^579^609^recordSet ( ns.name, nameNode ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^if  ( ns.onlyAffectsClassDefs != null && n )  {^600^^^^^585^615^if  ( ns != null && ns.onlyAffectsClassDef )  {^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^if  ( n != nameull )  {^602^^^^^587^617^if  ( name != null )  {^[CLASS] FindDeclarationsAndSetters  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  ns  boolean  JsName  name  nameInfo  NodeTraversal  t  Node  n  nameNode  parent  
[buglab_swap_variables]^JsNameRefNode nameRefNode = new JsNameRefNode ( node, jsn ) ;^618^^^^^616^620^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn, node ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] recordSet [RETURN_TYPE] void   String name Node node [VARIABLES] boolean  JsName  jsn  JsNameRefNode  nameRefNode  Node  node  String  name  
[buglab_swap_variables]^JsNameRefNode nameRefNode = new JsNameRefNode (  node ) ;^618^^^^^616^620^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn, node ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] recordSet [RETURN_TYPE] void   String name Node node [VARIABLES] boolean  JsName  jsn  JsNameRefNode  nameRefNode  Node  node  String  name  
[buglab_swap_variables]^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn ) ;^618^^^^^616^620^JsNameRefNode nameRefNode = new JsNameRefNode ( jsn, node ) ;^[CLASS] FindDeclarationsAndSetters  [METHOD] recordSet [RETURN_TYPE] void   String name Node node [VARIABLES] boolean  JsName  jsn  JsNameRefNode  nameRefNode  Node  node  String  name  
[buglab_swap_variables]^for  ( Node n = child.getFirstChild (  ) ;^639^^^^^637^644^for  ( Node child = n.getFirstChild (  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] addAllChildren [RETURN_TYPE] void   Node n [VARIABLES] Set  nodesToKeep  Node  child  n  boolean  
[buglab_swap_variables]^NodeTraversal.traverse ( n, compiler, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^647^648^649^650^^646^651^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] addSimplifiedChildren [RETURN_TYPE] void   Node n [VARIABLES] Set  nodesToKeep  Node  n  boolean  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^647^648^649^650^^646^651^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] addSimplifiedChildren [RETURN_TYPE] void   Node n [VARIABLES] Set  nodesToKeep  Node  n  boolean  
[buglab_swap_variables]^NodeTraversal.traverse (  n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^647^648^649^650^^646^651^NodeTraversal.traverse ( compiler, n, new GatherSideEffectSubexpressionsCallback ( compiler, new NodeAccumulator (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] addSimplifiedChildren [RETURN_TYPE] void   Node n [VARIABLES] Set  nodesToKeep  Node  n  boolean  
[buglab_swap_variables]^} else if  ( parent.getType (  )  == Token.CALL && n.getType (  )  == Token.EXPR_RESULT )  {^666^667^^^^653^672^} else if  ( n.getType (  )  == Token.CALL && parent.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] addSimplifiedExpression [RETURN_TYPE] void   Node n Node parent [VARIABLES] Set  nodesToKeep  Node  child  n  parent  value  boolean  
[buglab_swap_variables]^} else if  ( parent.getType (  )  == Token.ASSIGN && ( n.getType (  )  == Token.EXPR_RESULT || parent.getType (  )  == Token.FOR || parent.getType (  )  == Token.RETURN )  )  {^659^660^661^662^^653^672^} else if  ( n.getType (  )  == Token.ASSIGN && ( parent.getType (  )  == Token.EXPR_RESULT || parent.getType (  )  == Token.FOR || parent.getType (  )  == Token.RETURN )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] addSimplifiedExpression [RETURN_TYPE] void   Node n Node parent [VARIABLES] Set  nodesToKeep  Node  child  n  parent  value  boolean  
[buglab_swap_variables]^addSimplifiedExpression ( n, decl ) ;^688^^^^^673^703^addSimplifiedExpression ( decl, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression (  n ) ;^688^^^^^673^703^addSimplifiedExpression ( decl, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( decl ) ;^688^^^^^673^703^addSimplifiedExpression ( decl, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( n, pred ) ;^689^^^^^674^704^addSimplifiedExpression ( pred, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression (  n ) ;^689^^^^^674^704^addSimplifiedExpression ( pred, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( pred ) ;^689^^^^^674^704^addSimplifiedExpression ( pred, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( n, step ) ;^690^^^^^675^705^addSimplifiedExpression ( step, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression (  n ) ;^690^^^^^675^705^addSimplifiedExpression ( step, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( step ) ;^690^^^^^675^705^addSimplifiedExpression ( step, n ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( parent, n ) ;^702^^^^^699^703^addSimplifiedExpression ( n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression (  parent ) ;^702^^^^^699^703^addSimplifiedExpression ( n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( n ) ;^702^^^^^699^703^addSimplifiedExpression ( n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( parent, n ) ;^702^^^^^687^717^addSimplifiedExpression ( n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression (  parent ) ;^702^^^^^687^717^addSimplifiedExpression ( n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^addSimplifiedExpression ( n ) ;^702^^^^^687^717^addSimplifiedExpression ( n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.DO && parent.getLastChild (  )  == parent )  {^714^^^^^699^729^if  ( parent.getType (  )  == Token.DO && parent.getLastChild (  )  == n )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] Set  nodesToKeep  boolean  NodeTraversal  t  Node  decl  iter  n  parent  pred  step  
[buglab_swap_variables]^if  ( ! ( NodeUtil.isName ( parent )  || NodeUtil.isGet ( n )  && !NodeUtil.isGetProp ( n )  )  )  {^722^723^^^^707^737^if  ( ! ( NodeUtil.isName ( n )  || NodeUtil.isGet ( n )  && !NodeUtil.isGetProp ( parent )  )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation ( parent, n, t ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation (  n, parent ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^NameInformation parentameInfo = createNameInformation ( t, n, n ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation ( t,  parent ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^NameInformation nameInfo = createNameInformation ( t, n ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^NameInformation tameInfo = createNameInformation ( n, n, parent ) ;^728^^^^^713^743^NameInformation nameInfo = createNameInformation ( t, n, parent ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( nameInfo.onlyAffectsClassDef.onlyAffectsClassDef )  {^734^^^^^719^749^if  ( nameInfo.onlyAffectsClassDef )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( n )  {^734^^^^^719^749^if  ( nameInfo.onlyAffectsClassDef )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nodeName.name, nameInfo ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nodeName, nameInfo.name ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.name ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo, nodeName ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  nodeName ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.name.name, nameInfo.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.name.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.superclass, nameInfo.name ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  nameInfo.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.name ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.name.name, nodeName ) ;^742^^^^^727^757^recordReference ( nameInfo.name, nodeName ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo, nameInfo.name.superclass ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( nameInfo.superclass.name, nameInfo ) ;^735^^^^^720^750^recordReference ( nameInfo.name, nameInfo.superclass ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.INSTANCEOF && parent.getLastChild (  )  == parent )  {^748^749^^^^733^763^if  ( parent.getType (  )  == Token.INSTANCEOF && parent.getLastChild (  )  == n )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( parent, n, checkedClass, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, parent, n, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^752^753^^^^748^756^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo.name.name, true ) ;^750^^^^^748^756^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo, true ) ;^750^^^^^748^756^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^JsName checkedClass = getName (  true ) ;^750^^^^^748^756^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( checkedClassew InstanceOfCheckNode ( n, n, parent, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( parent, n, checkedClass, parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^751^752^753^^^748^756^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( parent, n, checkedClass, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, parent, n, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^752^753^^^^737^767^new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo.name.name, true ) ;^750^^^^^735^765^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^JsName checkedClass = getName ( nameInfo, true ) ;^750^^^^^735^765^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^JsName checkedClass = getName (  true ) ;^750^^^^^735^765^JsName checkedClass = getName ( nameInfo.name, true ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode (  n, parent, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( parentew InstanceOfCheckNode ( checkedClass, n, n, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass,  parent, parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n,  parent.getParent (  )  )  ) ;^751^752^753^^^736^766^refNodes.add ( new InstanceOfCheckNode ( checkedClass, n, parent, parent.getParent (  )  )  ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^referringName = referring.name.isPrototype ? referring.prototypeClass : referring;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^referringName = referring.prototypeClass ? referring.isPrototype : referring.name;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^referringName = referring.prototypeClass.isPrototype ? referring : referring.name;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^referringName = referring.isPrototype ? referring.name : referring.prototypeClass;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^referringName = referring ? referring.isPrototype.prototypeClass : referring.name;^765^766^767^^^750^780^referringName = referring.isPrototype ? referring.prototypeClass : referring.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^String name = nameInfo.name.name;^772^^^^^757^787^String name = nameInfo.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^String name = nameInfo;^772^^^^^757^787^String name = nameInfo.name;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( name )  {^773^^^^^758^788^if  ( nameInfo.isExternallyReferenceable )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^774^^^^^759^789^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^774^^^^^759^789^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^774^^^^^759^789^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( NodeUtil.isLhs ( parent, n )  )  {^780^^^^^765^795^if  ( NodeUtil.isLhs ( n, parent )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( NodeUtil.isLhs (  parent )  )  {^780^^^^^765^795^if  ( NodeUtil.isLhs ( n, parent )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( NodeUtil.isLhs ( n )  )  {^780^^^^^765^795^if  ( NodeUtil.isLhs ( n, parent )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, referringName ) ;^782^^^^^767^797^recordReference ( referringName, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^782^^^^^767^797^recordReference ( referringName, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( referringName ) ;^782^^^^^767^797^recordReference ( referringName, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^804^^^^^794^808^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^804^^^^^794^808^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^804^^^^^794^808^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, referringName ) ;^795^^^^^780^810^recordReference ( referringName, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^795^^^^^780^810^recordReference ( referringName, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( referringName ) ;^795^^^^^780^810^recordReference ( referringName, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^804^^^^^802^806^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^804^^^^^802^806^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^804^^^^^802^806^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^804^^^^^789^819^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^804^^^^^789^819^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^804^^^^^789^819^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^792^^^^^789^793^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^792^^^^^789^793^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^792^^^^^789^793^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( functionScope.name.name, name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name.name, functionScope ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( functionScope. name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, functionScope.name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^790^^^^^775^805^recordReference ( functionScope.name, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( name, WINDOW ) ;^792^^^^^777^807^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference ( WINDOW ) ;^792^^^^^777^807^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^recordReference (  name ) ;^792^^^^^777^807^recordReference ( WINDOW, name ) ;^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( nodesToKeepodesToKeep.contains ( n )  )  {^787^^^^^772^802^if  ( nodesToKeep.contains ( n )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
[buglab_swap_variables]^if  ( n.contains ( nodesToKeep )  )  {^787^^^^^772^802^if  ( nodesToKeep.contains ( n )  )  {^[CLASS] FindReferences NodeAccumulator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] NameInformation  functionScope  nameInfo  referring  Set  nodesToKeep  boolean  JsName  checkedClass  NodeTraversal  t  Node  ancestor  n  parent  String  name  nodeName  referringName  
