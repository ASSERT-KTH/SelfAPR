[BugLab_Variable_Misuse]^if  ( sourceFile != propNodeull )  {^53^^^^^38^68^if  ( sourceFile != null )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Argument_Swapping]^if  ( n != sourceFileull )  {^53^^^^^38^68^if  ( sourceFile != null )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Wrong_Operator]^if  ( sourceFile == null )  {^53^^^^^38^68^if  ( sourceFile != null )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^61^^^^^46^76^if  ( propNode.getType (  )  == Token.STRING )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Wrong_Operator]^if  ( propNode.getType (  )  >= Token.STRING )  {^61^^^^^46^76^if  ( propNode.getType (  )  == Token.STRING )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^n.putProp ( Node.ORIGINALNAME_PROP, parent.getString (  )  ) ;^62^^^^^47^77^n.putProp ( Node.ORIGINALNAME_PROP, propNode.getString (  )  ) ;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^if  ( propNode.getType (  )  == Token.STRING )  {^76^^^^^61^91^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  != Token.STRING )  {^76^^^^^61^91^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^key.putProp ( Node.ORIGINALNAME_PROP, propNode.getString (  )  ) ;^78^^^^^63^93^key.putProp ( Node.ORIGINALNAME_PROP, key.getString (  )  ) ;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^for  ( Node key = propNode.getFirstChild (  ) ; key != null;^72^^^^^57^87^for  ( Node key = n.getFirstChild (  ) ; key != null;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^for  ( Node propNode = n.getFirstChild (  ) ; key != null;^72^^^^^57^87^for  ( Node key = n.getFirstChild (  ) ; key != null;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Argument_Swapping]^for  ( Node n = key.getFirstChild (  ) ; key != null;^72^^^^^57^87^for  ( Node key = n.getFirstChild (  ) ; key != null;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Wrong_Operator]^for  ( Node key = n.getFirstChild (  ) ; key == null;^72^^^^^57^87^for  ( Node key = n.getFirstChild (  ) ; key != null;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  > Token.STRING )  {^76^^^^^72^81^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^key.putProp ( Node.ORIGINALNAME_PROP, propNode.getString (  )  ) ;^78^^^^^72^81^key.putProp ( Node.ORIGINALNAME_PROP, key.getString (  )  ) ;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^if  ( propNode.getType (  )  == Token.STRING )  {^76^^^^^72^81^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^key = propNode.getNext (  ) .getNext (  )  )  {^73^^^^^58^88^key = key.getNext (  ) .getNext (  )  )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^Node propNode = parent.getFirstChild (  ) .getNext (  ) ;^60^^^^^45^75^Node propNode = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^switch  ( propNode.getType (  )  )  {^58^^^^^43^73^switch  ( n.getType (  )  )  {^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^Node propNode = propNode.getFirstChild (  ) .getNext (  ) ;^60^^^^^45^75^Node propNode = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
[BugLab_Variable_Misuse]^n.putProp ( Node.ORIGINALNAME_PROP, propNode.getString (  )  ) ;^68^^^^^53^83^n.putProp ( Node.ORIGINALNAME_PROP, n.getString (  )  ) ;^[CLASS] SourceInformationAnnotator  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  sourceFile  boolean  NodeTraversal  t  Node  key  n  parent  propNode  
