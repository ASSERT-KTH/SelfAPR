[BugLab_Wrong_Literal]^private int nextId = 1;^128^^^^^123^133^private int nextId = 0;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer   [VARIABLES] 
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, parent, functionListExtractor ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, functionListExtractor ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( functionListExtractor, root, compiler ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, parent, namingCallback ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( compiler, namingCallback, root ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( namingCallback, root, compiler ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^FunctionRecord record = rootunctionMap.get ( f ) ;^76^^^^^75^82^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^FunctionRecord record = functionMapunctionMap.get ( f ) ;^76^^^^^75^82^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^FunctionRecord record = f.get ( functionMap ) ;^76^^^^^75^82^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^if  ( record == null )  {^77^^^^^75^82^if  ( record != null )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Literal]^return -nextId;^80^^^^^75^82^return -1;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^return nextId;^78^^^^^75^82^return record.id;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^return record.id.id;^78^^^^^75^82^return record.id;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^return record;^78^^^^^75^82^return record.id;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^FunctionRecord record = rootunctionMap.get ( f ) ;^85^^^^^84^110^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^FunctionRecord record = functionMapunctionMap.get ( f ) ;^85^^^^^84^110^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^FunctionRecord record = f.get ( functionMap ) ;^85^^^^^84^110^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^if  ( record != null )  {^86^^^^^84^110^if  ( record == null )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^String str = name;^91^^^^^84^110^String str = record.name;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^String str = record.name.name;^91^^^^^84^110^String str = record.name;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^String str = record;^91^^^^^84^110^String str = record.name;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^if  ( name.isEmpty (  )  )  {^92^^^^^84^110^if  ( str.isEmpty (  )  )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^Node parent = root;^96^^^^^84^110^Node parent = record.parent;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^Node parent = record.parent.parent;^96^^^^^84^110^Node parent = record.parent;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^Node parent = record;^96^^^^^84^110^Node parent = record.parent;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^if  ( root != null )  {^97^^^^^84^110^if  ( parent != null )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^97^^^^^84^110^if  ( parent != null )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^str = getFunctionName ( root )  + "::" + str;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^str = getFunctionName ( str )  + "::" + parent;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^str = getFunctionName ( parent )  >=  + "::" + str;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^str = getFunctionName ( parent )   &  "::" + str;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^str = getFunctionName ( parent )  + "::" + name;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^str = getFunctionName ( parent )  |  + "::" + str;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^str = name.replaceAll ( "::this\\.", "." ) ;^102^^^^^84^110^str = str.replaceAll ( "::this\\.", "." ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^str = name.replaceAll ( "\\.\\.", "." ) ;^106^^^^^84^110^str = str.replaceAll ( "\\.\\.", "." ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^str = name.replaceFirst ( "^ ( <anonymous>:: ) *", "" ) ;^108^^^^^84^110^str = str.replaceFirst ( "^ ( <anonymous>:: ) *", "" ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^return name;^109^^^^^84^110^return str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^if  ( root.getType (  )  == Token.FUNCTION )  {^135^^^^^134^145^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.functionListExtractor )  {^135^^^^^134^145^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.FUNCTION )  {^135^^^^^134^145^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^new FunctionRecord ( nextId, root, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^new FunctionRecord ( nextId, enclosingFunction, str )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^new FunctionRecord ( enclosingFunction, nextId, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^new FunctionRecord ( nextId, functionName, enclosingFunction )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^Node functionNameNode = root.getFirstChild (  ) ;^136^^^^^134^145^Node functionNameNode = n.getFirstChild (  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^String functionName = parent.getString (  ) ;^137^^^^^134^145^String functionName = functionNameNode.getString (  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^Node functionNameNode = parent.getFirstChild (  ) ;^136^^^^^134^145^Node functionNameNode = n.getFirstChild (  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^String functionName = root.getString (  ) ;^137^^^^^134^145^String functionName = functionNameNode.getString (  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^functionMap.put ( root, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^functionMap.put ( n, new FunctionRecord ( nextId, n, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, str )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^functionMap.put ( n, new FunctionRecord ( id, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^functionMap.put ( enclosingFunction, new FunctionRecord ( nextId, n, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^functionMap.put ( n, new FunctionRecord ( nextId, functionName, enclosingFunction )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^functionMap.put ( nextId, new FunctionRecord ( n, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^new FunctionRecord ( nextId, parent, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^new FunctionRecord ( id, enclosingFunction, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^if  ( functionNameNode.getType (  )  == Token.FUNCTION )  {^135^^^^^134^145^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^functionMap.put ( functionNameNode, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^functionMap.put ( n, new FunctionRecord ( nextId, root, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^functionMap.put ( n, new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^return extractor.getName ( root ) ;^161^^^^^160^162^return extractor.getName ( node ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^return node.getName ( extractor ) ;^161^^^^^160^162^return extractor.getName ( node ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^return extractor.getName ( n ) ;^161^^^^^160^162^return extractor.getName ( node ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^FunctionRecord record = functionMap.get ( n ) ;^166^^^^^165^170^FunctionRecord record = functionMap.get ( fnNode ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^FunctionRecord record = fnNode.get ( functionMap ) ;^166^^^^^165^170^FunctionRecord record = functionMap.get ( fnNode ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^assert ( name.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^assert ( record.name.name.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^assert ( record.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^record.name = str;^169^^^^^165^170^record.name = name;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^return str + DELIMITER + rhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Variable_Misuse]^return lhs + DELIMITER + name;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^return rhs + DELIMITER + lhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Argument_Swapping]^return lhs + rhs + DELIMITER;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Operator]^return lhs  |  DELIMITER + rhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[BugLab_Wrong_Literal]^private int nextId = id;^128^^^^^123^133^private int nextId = 0;^[CLASS] FunctionListExtractor  [METHOD] <init> [RETURN_TYPE] String)   int id Node parent String name [VARIABLES] String  name  boolean  long  serialVersionUID  int  id  Node  parent  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.FUNCTION )  {^135^^^^^134^145^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.FUNCTION )  {^135^^^^^134^145^if  ( n.getType (  )  == Token.FUNCTION )  {^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Variable_Misuse]^new FunctionRecord ( nextId, parent, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^new FunctionRecord ( enclosingFunction, nextId, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Variable_Misuse]^Node functionNameNode = parent.getFirstChild (  ) ;^136^^^^^134^145^Node functionNameNode = n.getFirstChild (  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Variable_Misuse]^String functionName = parent.getString (  ) ;^137^^^^^134^145^String functionName = functionNameNode.getString (  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Variable_Misuse]^functionMap.put ( parent, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Variable_Misuse]^functionMap.put ( n, new FunctionRecord ( nextId, parent, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^functionMap.put ( enclosingFunction, new FunctionRecord ( nextId, n, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^functionMap.put ( functionName, new FunctionRecord ( nextId, enclosingFunction, n )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^functionMap.put ( n, new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^new FunctionRecord ( nextId, functionName, enclosingFunction )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^functionMap.put ( n, new FunctionRecord ( enclosingFunction, nextId, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[BugLab_Argument_Swapping]^return node.getName ( extractor ) ;^161^^^^^160^162^return extractor.getName ( node ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  boolean  Map  functionMap  Node  node  
[BugLab_Argument_Swapping]^FunctionRecord record = fnNode.get ( functionMap ) ;^166^^^^^165^170^FunctionRecord record = functionMap.get ( fnNode ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[BugLab_Variable_Misuse]^assert ( name.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[BugLab_Argument_Swapping]^assert ( record.name.name.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[BugLab_Argument_Swapping]^assert ( record.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[BugLab_Argument_Swapping]^return DELIMITER + lhs + rhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  String  lhs  rhs  boolean  Map  functionMap  
[BugLab_Argument_Swapping]^return rhs + DELIMITER + lhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  String  lhs  rhs  boolean  Map  functionMap  
[BugLab_Wrong_Operator]^return lhs  <=  DELIMITER + rhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  String  lhs  rhs  boolean  Map  functionMap  
