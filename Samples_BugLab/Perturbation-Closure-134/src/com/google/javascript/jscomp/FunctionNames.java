[buglab_swap_variables]^NodeTraversal.traverse ( compiler, functionListExtractor, root ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  functionListExtractor ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( functionListExtractor, root, compiler ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse (  root, functionListExtractor ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, root ) ;^64^^^^^63^69^NodeTraversal.traverse ( compiler, root, functionListExtractor ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, namingCallback ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  namingCallback ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, namingCallback, root ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, root ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse ( namingCallback, root, compiler ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^NodeTraversal.traverse (  root, namingCallback ) ;^68^^^^^63^69^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  parent  root  char  DELIMITER  String  name  NodeNameExtractor  extractor  AnonymousFunctionNamer  namer  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^FunctionRecord record = functionMapunctionMap.get ( f ) ;^76^^^^^75^82^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^FunctionRecord record = f.get ( functionMap ) ;^76^^^^^75^82^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^return record.id.id;^78^^^^^75^82^return record.id;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^return record;^78^^^^^75^82^return record.id;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionId [RETURN_TYPE] int   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^FunctionRecord record = functionMapunctionMap.get ( f ) ;^85^^^^^84^110^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^FunctionRecord record = f.get ( functionMap ) ;^85^^^^^84^110^FunctionRecord record = functionMap.get ( f ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^String str = record.name.name;^91^^^^^84^110^String str = record.name;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^String str = record;^91^^^^^84^110^String str = record.name;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^Node parent = record.parent.parent;^96^^^^^84^110^Node parent = record.parent;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^Node parent = record;^96^^^^^84^110^Node parent = record.parent;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^str = getFunctionName ( str )  + "::" + parent;^98^^^^^84^110^str = getFunctionName ( parent )  + "::" + str;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getFunctionName [RETURN_TYPE] String   Node f [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  externs  f  parent  root  char  DELIMITER  FunctionRecord  record  String  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord ( enclosingFunction, nextId, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord ( nextId,  functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord ( nextId, enclosingFunction )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord (  enclosingFunction, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put (  new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( enclosingFunction, new FunctionRecord ( nextId, n, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( nextId,  functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( nextId, functionName, enclosingFunction )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( enclosingFunction, nextId, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord (  enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord ( nextId, functionName, enclosingFunction )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  NodeTraversal  t  Node  enclosingFunction  externs  f  functionNameNode  n  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^return node.getName ( extractor ) ;^161^^^^^160^162^return extractor.getName ( node ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^FunctionRecord record = fnNode.get ( functionMap ) ;^166^^^^^165^170^FunctionRecord record = functionMap.get ( fnNode ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^assert ( record.name.name.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^assert ( record.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  FunctionRecord  record  String  functionName  name  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^return rhs + DELIMITER + lhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^return DELIMITER + lhs + rhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] FunctionNames FunctionRecord FunctionListExtractor AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  FunctionListExtractor  functionListExtractor  boolean  Node  enclosingFunction  externs  f  fnNode  functionNameNode  n  node  parent  root  char  DELIMITER  String  functionName  lhs  name  rhs  str  NodeNameExtractor  extractor  Map  functionMap  long  serialVersionUID  int  id  nextId  
[buglab_swap_variables]^new FunctionRecord ( enclosingFunction, nextId, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^new FunctionRecord ( nextId,  functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^new FunctionRecord ( nextId, enclosingFunction )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^new FunctionRecord (  enclosingFunction, functionName )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put ( functionName, new FunctionRecord ( nextId, enclosingFunction, n )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put (  new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put ( enclosingFunction, new FunctionRecord ( nextId, n, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( nextId,  functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( functionName, enclosingFunction, nextId )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^functionMap.put ( n, new FunctionRecord (  enclosingFunction, functionName )  ) ;^141^142^^^^134^145^functionMap.put ( n, new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^new FunctionRecord ( nextId, functionName, enclosingFunction )  ) ;^142^^^^^134^145^new FunctionRecord ( nextId, enclosingFunction, functionName )  ) ;^[CLASS] FunctionListExtractor  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] String  functionName  boolean  Map  functionMap  NodeTraversal  t  int  nextId  Node  enclosingFunction  functionNameNode  n  parent  
[buglab_swap_variables]^return node.getName ( extractor ) ;^161^^^^^160^162^return extractor.getName ( node ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  boolean  Map  functionMap  Node  node  
[buglab_swap_variables]^FunctionRecord record = fnNode.get ( functionMap ) ;^166^^^^^165^170^FunctionRecord record = functionMap.get ( fnNode ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[buglab_swap_variables]^assert ( record.name.name.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[buglab_swap_variables]^assert ( record.isEmpty (  )  ) ;^168^^^^^165^170^assert ( record.name.isEmpty (  )  ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] boolean  Node  fnNode  char  DELIMITER  FunctionRecord  record  NodeNameExtractor  extractor  String  name  Map  functionMap  
[buglab_swap_variables]^return rhs + DELIMITER + lhs;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  String  lhs  rhs  boolean  Map  functionMap  
[buglab_swap_variables]^return lhs + rhs + DELIMITER;^174^^^^^173^175^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  NodeNameExtractor  extractor  String  lhs  rhs  boolean  Map  functionMap  
