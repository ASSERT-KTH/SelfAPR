[buglab_swap_variables]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( var && preserveAnonymousFunctionNames != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( !okToRenameVar ( local, name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( !okToRenameVar (  local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( !okToRenameVar ( name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String tempName = var + LOCAL_VAR_PREFIX.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^Assignment s = name.get ( assignments ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^s = new Assignment ( input, name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^s = new Assignment (  input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^s = new Assignment ( name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignments.put ( s, name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignments.put (  s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignments.put ( name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( a1.count.count != a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( a2 != a1.count.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( a2.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a1.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a1 - a2.count.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a2 - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a1.count.count - a2;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare (  a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a1.compare ( ORDER_OF_OCCURRENCE_COMPARATOR, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a2.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a2 - a1.orderOfOccurrence.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a1.orderOfOccurrence - a2;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( externs, compiler, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^NodeTraversal.traverse (  externs, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( n != newNameull )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( newNameewName != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^n.setString ( newNameewName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^n.setString ( n ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( n != newNameull )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( newNameewName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^n.setString ( newNameewName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^n.setString ( n ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String countewName = getNewLocalName ( n, n ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String newName = getNewLocalName (  count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String newName = getNewLocalName ( n ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^Assignment a = oldName.get ( assignments ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( oldName.newName != null && !a.newName.equals ( a )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( oldName != null && !a.newName.equals ( a.newName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( a != null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a.newName.newName;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String oldTempName = index.get ( localTempNames ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^Assignment a = oldTempName.get ( assignments ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a.newName.newName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return a;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( reservedNames == null || prevNewName.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( LOCAL_VAR_PREFIX.startsWith ( a.oldName )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( a.oldName.startsWith ( prefix )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( LOCAL_VAR_PREFIX )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( prevNewName, a ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment (  prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( a ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String prevNewName = a.lookupNewName ( prevUsedRenameMap.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String prevNewName = a.oldName.lookupNewName ( prevUsedRenameMap ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^String prevNewName = prevUsedRenameMap.lookupNewName ( a ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( a.oldName.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^if  ( LOCAL_VAR_PREFIX.oldName.startsWith ( a )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^( !externNames.contains ( a.oldName.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^( !externNames.contains ( a )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^new NameGenerator ( reservedCharacters, prefix, reservedNames ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^new NameGenerator (  prefix, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^new NameGenerator ( reservedNames, reservedCharacters, prefix ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^new NameGenerator ( reservedNames,  reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^new NameGenerator ( reservedNames, prefix ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator globalNameGenerator = new NameGenerator ( prefix, reservedNames, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator globalNameGenerator = new NameGenerator (  prefix, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, reservedCharacters, prefix ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames,  reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator globalNameGenerator = new NameGenerator ( reservedCharacters, prefix, reservedNames ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^globalNameGenerator : new NameGenerator ( reservedCharacters, "", reservedNames ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^globalNameGenerator : new NameGenerator (  "", reservedCharacters ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^globalNameGenerator : new NameGenerator ( reservedNames, "" ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? reservedNames : new NameGenerator ( globalNameGenerator, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator localNameGenerator = reservedNames.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( prefix, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedCharacters, "", reservedNames ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator (  "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? reservedCharacters : new NameGenerator ( reservedNames, "", globalNameGenerator ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "" ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( a.newName.newName != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( a != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( a.contains ( externNames.oldName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( a.oldName.contains ( externNames )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( externNames.contains ( a )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( a.oldName.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( LOCAL_VAR_PREFIX.startsWith ( a.oldName )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( newName, a ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment (  newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( a ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^if  ( LOCAL_VAR_PREFIX.oldName.startsWith ( a )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^varsByOrderOfOccurrence.add ( j.get ( pendingAssignments )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^int len = i.get ( generatedNamesForAssignments ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^varsByOrderOfOccurrence.add ( j.get ( pendingAssignments )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( i, generatedNamesForAssignments.get ( a )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment (  generatedNamesForAssignments.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( a, i.get ( generatedNamesForAssignments )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( a.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^for  ( jnt i = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^finalizeNameAssignment ( generatedNamesForAssignments, a.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[buglab_swap_variables]^renameMap.put ( newName, a.oldName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^renameMap.put ( a.oldName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^renameMap.put (  newName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignmentLog.append ( a.oldName.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignmentLog.append ( newName ) .append ( " => " ) .append ( a.oldName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignmentLog.append ( newName.oldName ) .append ( " => " ) .append ( a ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^assignmentLog.append ( a ) .append ( " => " ) .append ( newName ) . a.oldNameppend ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return !compiler.getCodingConvention (  ) .isExported (  isLocal ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^return !compiler.getCodingConvention (  ) .isExported ( name ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[buglab_swap_variables]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^if  ( !local && localRenamingOnlyRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^if  ( var && preserveAnonymousFunctionNames != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^if  ( !okToRenameVar ( local, name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^if  ( !okToRenameVar (  local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^if  ( !okToRenameVar ( name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^String tempName = var + LOCAL_VAR_PREFIX.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[buglab_swap_variables]^Assignment s = name.get ( assignments ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^s = new Assignment ( input, name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^s = new Assignment (  input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^s = new Assignment ( name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^assignments.put ( s, name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^assignments.put (  s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^assignments.put ( name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[buglab_swap_variables]^if  ( a2.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^if  ( a1.count != a2 )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a1.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a2.count - a1.count.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a1 - a2.count.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a2 - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare (  a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a2.compare ( a1, ORDER_OF_OCCURRENCE_COMPARATOR ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a1.compare ( ORDER_OF_OCCURRENCE_COMPARATOR, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a2.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[buglab_swap_variables]^return a1.orderOfOccurrence - a2;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
