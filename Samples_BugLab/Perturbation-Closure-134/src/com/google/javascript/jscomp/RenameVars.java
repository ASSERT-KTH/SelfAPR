[BugLab_Wrong_Literal]^private int assignmentCount = ;^64^^^^^59^69^private int assignmentCount = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[BugLab_Variable_Misuse]^this.oldName = prefix;^78^^^^^76^84^this.oldName = name;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^this.prefix = oldName == null ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^this.prefix = prefix != null ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^this.prefix = prefix != null ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^this.localRenamingOnly = preserveAnonymousFunctionNames;^128^^^^^118^138^this.localRenamingOnly = localRenamingOnly;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^this.preserveAnonymousFunctionNames = localRenamingOnly;^129^^^^^118^138^this.preserveAnonymousFunctionNames = preserveAnonymousFunctionNames;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^this.generatePseudoNames = preserveAnonymousFunctionNames;^130^^^^^118^138^this.generatePseudoNames = generatePseudoNames;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( reservedNames != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( reservedNames != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^isExternsPass_ = localRenamingOnly;^167^^^^^166^168^isExternsPass_ = isExterns;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] RenameVars$ProcessVars(boolean)   boolean isExterns [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( this.newName != null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^this.newName = prefix;^91^^^^^89^92^this.newName = newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  == Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  != Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^String parentame = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( tempName.length (  )  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( name.length (  )  != 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^if  ( name.length (  )  == 1 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( tempName ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^boolean local =  ( 2 != null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^boolean local =  ( var != null )  || var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^boolean local =  ( var == null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^boolean local =  ( this != null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !local && preserveAnonymousFunctionNamesRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !local && preserveAnonymousFunctionNames )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( !local && localRenamingOnlyRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( !local && local )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( !local || localRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^reservedNames.add ( tempName ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( localRenamingOnly && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( var && preserveAnonymousFunctionNames != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( preserveAnonymousFunctionNames || var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( preserveAnonymousFunctionNames && var == null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^reservedNames.add ( tempName ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^&& NodeUtil.isAnonymousFunction ( this.getParentNode (  )  )  )  {^196^^^^^181^211^&& NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^reservedNames.add ( tempName ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !okToRenameVar ( tempName, local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !okToRenameVar ( name, preserveAnonymousFunctionNames )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( !okToRenameVar ( local, name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !okToRenameVar ( name, localRenamingOnly )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( preserveAnonymousFunctionNames )  {^206^^^^^191^221^if  ( isExternsPass_ )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !preserveAnonymousFunctionNames )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^externNames.add ( tempName ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !localRenamingOnly )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^} else if  ( var == null )  {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^globalNameNodes.add ( parent ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^String tempName = prefix + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String tempName = var + LOCAL_VAR_PREFIX.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  <<  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^incCount ( prefix, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^localNameNodes.add ( parent ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (   instanceof   ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^incCount ( oldName, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^Assignment s = assignments.get ( tempName ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^Assignment s = name.get ( assignments ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( s != null )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^s = new Assignment ( input, name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^assignments.put ( tempName, s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^assignments.put ( s, name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^s = new Assignment ( tempName, input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^s = new Assignment ( prefix, input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a2.count != a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( orderOfOccurrence != a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a1.count != count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a2.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a2 != a1.count.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a2.count.count != a1 )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( a1.count >= a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return orderOfOccurrence - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return a2.count - orderOfOccurrence;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a1.count.count - a2;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a1.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^return a2.count  !=  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return count - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return a2.count - count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a2.count - a1;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a1.compare ( ORDER_OF_OCCURRENCE_COMPARATOR, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a2.compare ( a1, ORDER_OF_OCCURRENCE_COMPARATOR ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return a1.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return count - a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return a1.orderOfOccurrence - count;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a2.orderOfOccurrence.orderOfOccurrence - a1;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a2.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^return a1.orderOfOccurrence  ||  a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( false )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, root, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( externs, compiler, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^NodeTraversal.traverse ( compiler, root, new ProcessVars ( true )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, n, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^SortedSet<Assignment> varsByFrequency = new TreeSet<Assignment> ( 3 ) ;^280^281^^^^265^295^SortedSet<Assignment> varsByFrequency = new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( prevUsedRenameMap == null )  {^285^^^^^270^300^if  ( prevUsedRenameMap != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^boolean changed = true;^292^^^^^277^307^boolean changed = false;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( prefix != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( rootewName != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( n != newNameull )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( newNameewName != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( newName == null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^changed = false;^300^^^^^285^315^changed = true;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^n.setString ( rootewName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^n.setString ( tempName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^n.setString ( newNameewName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^n.setString ( n ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^String rootewName = getNewGlobalName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^int count = orderOfOccurrence;^305^^^^^290^320^int count = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( tempName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( rootewName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( n != newNameull )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( newNameewName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( newName == null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Literal]^changed = false;^310^^^^^295^325^changed = true;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^n.setString ( rootewName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^n.setString ( tempName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^n.setString ( newNameewName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^n.setString ( n ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^String rootewName = getNewLocalName ( n, count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^String newName = getNewLocalName ( n, orderOfOccurrence ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String countewName = getNewLocalName ( n, n ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^n.setString ( prefix ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( local )  {^315^^^^^300^330^if  ( changed )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^compiler.addToDebugLog ( "JS var assignments:\n"  &  assignmentLog ) ;^320^^^^^305^335^compiler.addToDebugLog ( "JS var assignments:\n" + assignmentLog ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^Assignment a = this.get ( oldName ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^Assignment a = oldName.get ( assignments ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^Assignment a = assignments.get ( prefix ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a.newName != null && !a.newName.equals ( prefix )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( tempName != null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.newName.newName != null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( oldName != null && !a.newName.equals ( a.newName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( a.newName != null || !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( a.newName == null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( preserveAnonymousFunctionNames )  {^328^^^^^324^335^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return getPseudoName ( tempName ) ;^329^^^^^324^335^return getPseudoName ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return getPseudoName ( prefix ) ;^329^^^^^324^335^return getPseudoName ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return oldName;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a.newName.newName;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( localRenamingOnly )  {^328^^^^^324^335^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return prefix;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^String oldTempName = localTempNames.get ( orderOfOccurrence ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String oldTempName = index.get ( localTempNames ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^Assignment a = assignments.get ( tempName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^Assignment a = oldTempName.get ( assignments ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^Assignment a = assignments.get ( oldName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !a.newName.equals ( tempName )  )  {^340^^^^^337^347^if  ( !a.newName.equals ( oldTempName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( local )  {^341^^^^^337^347^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return oldTempName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a.newName.newName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return a;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return tempName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( !a.newName.equals ( oldName )  )  {^340^^^^^337^347^if  ( !a.newName.equals ( oldTempName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return '$' + prefix + "$$";^353^^^^^349^354^return '$' + s + "$$";^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^return '$'  >  s + "$$";^353^^^^^349^354^return '$' + s + "$$";^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( tempName == null || reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( reservedNames == null || prevNewName.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( prevNewName == null && reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( prevNewName != null || reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && tempName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( s.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a.oldName.startsWith ( s )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( s )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( prefix.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( a )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prefix.startsWith ( prevNewName )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( LOCAL_VAR_PREFIX.startsWith ( a.oldName )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.oldName.startsWith ( prefix )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( LOCAL_VAR_PREFIX )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  && ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  || prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^reservedNames.add ( s ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^finalizeNameAssignment ( a, prefix ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^finalizeNameAssignment ( prevNewName, a ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String prevNewName = a.oldName.lookupNewName ( prevUsedRenameMap ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String prevNewName = prevUsedRenameMap.lookupNewName ( a ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^String prevNewName = a.lookupNewName ( prevUsedRenameMap.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( prevNewName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a.oldName.startsWith ( prefix )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.oldName.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^( !externNames.contains ( prefix )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^( !externNames.contains ( a.oldName.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^( !externNames.contains ( a )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^prevNewName.startsWith ( s )  )  )  {^370^^^^^361^375^prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^finalizeNameAssignment ( a, oldTempName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^new NameGenerator ( reservedNames, s, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^new NameGenerator ( prefix, reservedNames, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^new NameGenerator ( reservedNames, reservedCharacters, prefix ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^NameGenerator globalNameGenerator = new NameGenerator ( 1, prefix, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, oldTempName, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^NameGenerator globalNameGenerator = new NameGenerator ( reservedCharacters, prefix, reservedNames ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^NameGenerator globalNameGenerator = new NameGenerator ( prefix, reservedNames, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^globalNameGenerator : new NameGenerator ( reservedCharacters, "", reservedNames ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^NameGenerator localNameGenerator = s.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^NameGenerator localNameGenerator = globalNameGenerator.isEmpty (  )  ? prefix : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedCharacters, "", reservedNames ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^NameGenerator localNameGenerator = oldTempName.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( oldTempName != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.newName.newName != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Wrong_Operator]^if  ( a.newName == null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( externNames.contains ( s )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( externNames.contains ( a.oldName.oldName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.contains ( externNames.oldName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( a.oldName.contains ( externNames )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( s.startsWith ( LOCAL_VAR_PREFIX )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( a.oldName.startsWith ( tempName )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( LOCAL_VAR_PREFIX.startsWith ( a.oldName )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^newName = localNameGenerator.generateNextName (  ) ;^410^^^^^403^413^newName = globalNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^generatedNamesForAssignments.add ( prevNewName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^newName = globalNameGenerator.generateNextName (  ) ;^405^^^^^390^420^newName = localNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^finalizeNameAssignment ( a, tempName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^finalizeNameAssignment ( newName, a ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( externNames.contains ( prevNewName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^if  ( prevNewName.startsWith ( LOCAL_VAR_PREFIX )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^if  ( LOCAL_VAR_PREFIX.oldName.startsWith ( a )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^finalizeNameAssignment ( a, prefix ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^newName = localNameGenerator.generateNextName (  ) ;^410^^^^^395^425^newName = globalNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^generatedNamesForAssignments.add ( prevNewName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^reservedNames.add ( prefix ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^for  ( lennt i = 0; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < len; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^for  ( numPendingAssignmentsnt i = 0; i < i; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Wrong_Literal]^for  ( int i = count; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^for  ( orderOfOccurrencent j = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^for  ( int numPendingAssignments = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^for  ( jnt i = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( orderOfOccurrence )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^varsByOrderOfOccurrence.add ( j.get ( pendingAssignments )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^int len = generatedNamesForAssignments.get ( numPendingAssignments ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^int len = i.get ( generatedNamesForAssignments ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^for  ( numPendingAssignmentsnt j = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^int len = generatedNamesForAssignments.get ( orderOfOccurrence ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^generatedNamesForAssignments.get ( len ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^generatedNamesForAssignments.get ( orderOfOccurrence ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( orderOfOccurrence )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^varsByOrderOfOccurrence.add ( j.get ( pendingAssignments )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( orderOfOccurrence )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^finalizeNameAssignment ( generatedNamesForAssignments, a.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Argument_Swapping]^finalizeNameAssignment ( a, i.get ( generatedNamesForAssignments )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( len )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^varsByOrderOfOccurrence.add ( null.get ( j )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( this ) ;^433^434^^^^418^448^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^int len = 4.get ( i ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^int len = generatedNamesForAssignments.get ( len ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^generatedNamesForAssignments.get ( numPendingAssignments ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( numPendingAssignments )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^varsByOrderOfOccurrence.add ( null.get ( j )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( len )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[BugLab_Variable_Misuse]^a.setNewName ( prevNewName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^renameMap.put ( a.oldName, s ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^renameMap.put ( a.oldName.oldName, newName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^renameMap.put ( newName, a.oldName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^assignmentLog.append ( s ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^assignmentLog.append ( a.oldName.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^assignmentLog.append ( newName.oldName ) .append ( " => " ) .append ( a ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^assignmentLog.append ( a ) .append ( " => " ) .append ( newName ) . a.oldNameppend ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( tempName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^assignmentLog.append ( newName ) .append ( " => " ) .append ( a.oldName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^assignmentLog.append ( oldTempName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^assignmentLog.append ( prevNewName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return new VariableMap ( this ) ;^472^^^^^471^473^return new VariableMap ( renameMap ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getVariableMap [RETURN_TYPE] VariableMap   [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return !compiler.getCodingConvention (  ) .isExported ( prefix, isLocal ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return !compiler.getCodingConvention (  ) .isExported ( name, local ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Argument_Swapping]^return !compiler.getCodingConvention (  ) .isExported ( isLocal, name ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^return !compiler.getCodingConvention (  ) .isExported ( name, localRenamingOnly ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[BugLab_Variable_Misuse]^this.oldName = oldName;^78^^^^^76^84^this.oldName = name;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[BugLab_Wrong_Literal]^this.count = -1;^80^^^^^76^84^this.count = 0;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[BugLab_Variable_Misuse]^Preconditions.checkState ( oldName == null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[BugLab_Wrong_Operator]^Preconditions.checkState ( this.newName != null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[BugLab_Variable_Misuse]^this.newName = oldName;^91^^^^^89^92^this.newName = newName;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[BugLab_Variable_Misuse]^isExternsPass_ = isExternsPass_;^167^^^^^166^168^isExternsPass_ = isExterns;^[CLASS] ProcessVars  [METHOD] <init> [RETURN_TYPE] RenameVars$ProcessVars(boolean)   boolean isExterns [VARIABLES] boolean  isExterns  isExternsPass_  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  != Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^String parentame = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( tempName.length (  )  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( name.length (  )  >= 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Literal]^if  ( name.length (  )  == -1 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( tempName ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Argument_Swapping]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^boolean local =  ( var != null )  || var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^boolean local =  ( var == null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^boolean local =  ( this != null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !local && isExternsPass_RenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !local && local )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( !local || localRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^reservedNames.add ( tempName ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( local && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( var && preserveAnonymousFunctionNames != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( preserveAnonymousFunctionNames || var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( preserveAnonymousFunctionNames && var == null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^reservedNames.add ( tempName ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^reservedNames.add ( tempName ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !okToRenameVar ( tempName, local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !okToRenameVar ( name, isExternsPass_ )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( !okToRenameVar ( local, name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( local )  {^206^^^^^191^221^if  ( isExternsPass_ )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !isExternsPass_ )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^externNames.add ( tempName ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( var == null )  {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^globalNameNodes.add ( parent ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^String tempName = name + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Argument_Swapping]^String tempName = var + LOCAL_VAR_PREFIX.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  <=  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^incCount ( name, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^localNameNodes.add ( parent ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Variable_Misuse]^localTempNames.add ( name ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Wrong_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  >=  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[BugLab_Argument_Swapping]^Assignment s = name.get ( assignments ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[BugLab_Wrong_Operator]^if  ( s != null )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[BugLab_Argument_Swapping]^s = new Assignment ( input, name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[BugLab_Argument_Swapping]^assignments.put ( s, name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[BugLab_Variable_Misuse]^if  ( a1.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^if  ( a2.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Wrong_Operator]^if  ( a1.count == a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return a2.count.count - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return a1 - a2.count.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return a1.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Wrong_Operator]^return a2.count  >>  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Variable_Misuse]^return 2 - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return a2.count - a1;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Wrong_Operator]^return a2.count  <  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return a1.compare ( ORDER_OF_OCCURRENCE_COMPARATOR, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Variable_Misuse]^return a2.orderOfOccurrence - a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Argument_Swapping]^return a2.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[BugLab_Wrong_Operator]^return a1.orderOfOccurrence  <  a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
