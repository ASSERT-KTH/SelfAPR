[BugLab_Variable_Misuse]^this.collapsePropertiesOnExternTypes = inlineAliases;^113^^^^^110^115^this.collapsePropertiesOnExternTypes = collapsePropertiesOnExternTypes;^[CLASS] CollapseProperties 1  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean collapsePropertiesOnExternTypes boolean inlineAliases [VARIABLES] AbstractCompiler  compiler  List  globalNames  boolean  collapsePropertiesOnExternTypes  inlineAliases  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Variable_Misuse]^this.inlineAliases = collapsePropertiesOnExternTypes;^114^^^^^110^115^this.inlineAliases = inlineAliases;^[CLASS] CollapseProperties 1  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean collapsePropertiesOnExternTypes boolean inlineAliases [VARIABLES] AbstractCompiler  compiler  List  globalNames  boolean  collapsePropertiesOnExternTypes  inlineAliases  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Variable_Misuse]^if  ( inlineAliases )  {^122^^^^^120^149^if  ( collapsePropertiesOnExternTypes )  {^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Variable_Misuse]^namespace = new GlobalNamespace ( compiler, externs ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( root, compiler ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( compiler, root, externs ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( root, externs, compiler ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( externs, compiler, root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Variable_Misuse]^namespace = new GlobalNamespace ( compiler, root, root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Variable_Misuse]^namespace = new GlobalNamespace ( compiler, externs ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Argument_Swapping]^namespace = new GlobalNamespace ( root, compiler ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Variable_Misuse]^if  ( collapsePropertiesOnExternTypes )  {^128^^^^^120^149^if  ( inlineAliases )  {^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Wrong_Literal]^new Normalize.PropogateConstantAnnotations ( compiler, true ) ;^148^^^^^120^149^new Normalize.PropogateConstantAnnotations ( compiler, false ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[BugLab_Wrong_Operator]^if  ( name.globalSets == 1 || name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( name.globalSets != 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( name.globalSets == 1 && name.localSets != 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets >= 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Literal]^if  ( name.globalSets == 1 && name.localSets == 1 && name.aliasingGets > 1 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type == Type.ALIASING_GET || ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type > Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( name, refspace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( ref, name )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( namespace, ref )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type == Type.ALIASING_GET || ref.scope.isLocal (  )  )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type != Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( name, refspace )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( ref, name )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( namespace, ref )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  || name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT && name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  (  ( name.type != Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets != 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props == null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Literal]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == -1 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( name.globalSets >= 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( name.globalSets == 1 && name.localSets >= 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets == 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Literal]^if  ( name.globalSets == 2 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type != Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Argument_Swapping]^if  ( inlineAliasIfPossible ( ref, namespacespace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[BugLab_Wrong_Operator]^if  ( aliasParent.getType (  )  < Token.NAME )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^if  ( aliasRefs.isWellDefined (  ) || aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^for  ( int i = i; i < size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , aliasParent ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^aliasRef.getParent (  ) .replaceChild ( newNode.getNameNode (  ) , aliasRef ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^newNodes.add ( aliasParent ) ;^229^^^^^217^240^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^return false;^239^^^^^217^240^return true;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( i - 1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ||  1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - size ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  |  1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^aliasRef.getParent (  ) .replaceChild ( null.getNameNode (  ) , newNode ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^for  ( int i = i; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , aliasParent ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^aliasRef.getParent (  ) .replaceChild ( newNode.getNameNode (  ) , aliasRef ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^newNodes.add ( aliasParent ) ;^229^^^^^214^244^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^return false;^239^^^^^224^254^return true;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^new ReferenceCollectingCallback ( aliasVar, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( compiler )  ) ;^210^211^212^^^195^225^new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^( new NodeTraversal ( collector, compiler )  ) .traverseAtScope ( scope ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^Var aliasVar = scope.getVar ( newNode.getString (  )  ) ;^208^^^^^193^223^Var aliasVar = scope.getVar ( aliasParent.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^Var aliasVar = aliasParent.getVar ( scope.getString (  )  ) ;^208^^^^^193^223^Var aliasVar = scope.getVar ( aliasParent.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( aliasVar, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( compiler )  ) ;^209^210^211^212^^194^224^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^ReferenceCollection aliasRefs = aliasVar.getReferenceCollection ( collector ) ;^215^216^^^^200^230^ReferenceCollection aliasRefs = collector.getReferenceCollection ( aliasVar ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( i - 1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ||  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^( new NodeTraversal ( compiler, scope )  ) .traverseAtScope ( collector ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Argument_Swapping]^( new NodeTraversal ( scope, collector )  ) .traverseAtScope ( compiler ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  <  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^for  ( int i = 1; i == size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size   instanceof   1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^for  ( int i = size; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ==  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - i ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^for  ( int i = 2; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Variable_Misuse]^if  ( newNode.getType (  )  == Token.NAME )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - size ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Literal]^return true;^243^^^^^228^258^return false;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[BugLab_Wrong_Operator]^if  ( name.isNamespace (  )  || name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( name.isNamespace (  )  && name.refs == null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 && name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets >= 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets == 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets  >=  name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Literal]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 1 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL && ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type != Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^} else if  ( ref.type >= Ref.Type.ALIASING_GET )  {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Argument_Swapping]^warnAboutNamespaceAliasing ( ref, name ) ;^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Variable_Misuse]^if  ( inlineAliases )  {^258^^^^^250^269^if  ( initialized )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Argument_Swapping]^warnAboutNamespaceRedefinition ( ref, name ) ;^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Literal]^initialized = false;^262^^^^^250^269^initialized = true;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^} else if  ( ref.type != Ref.Type.ALIASING_GET )  {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^boolean initialized = name.declaration == null;^254^^^^^250^269^boolean initialized = name.declaration != null;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( ref.type < Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( n.props != null )  return;^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^if  ( n.canCollapse (  )  )  {^309^^^^^302^315^if  ( p.canCollapse (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^flattenReferencesTo ( n, propAlias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Argument_Swapping]^flattenReferencesTo ( propAlias, p ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^flattenReferencesTo ( p, alias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^flattenReferencesToCollapsibleDescendantNames ( n, propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^flattenReferencesToCollapsibleDescendantNames ( p, alias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Argument_Swapping]^flattenReferencesToCollapsibleDescendantNames ( propAlias, p ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.refs == null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  || ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null && r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  != null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^String originalName = p.fullName (  ) ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.props == null )  {^345^^^^^324^350^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^flattenPrefixes ( originalName, p, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^flattenPrefixes ( alias, n, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Argument_Swapping]^flattenPrefixes ( p, alias, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Wrong_Literal]^flattenPrefixes ( alias, p, 2 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Wrong_Literal]^flattenPrefixes ( alias, p, 0 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^String originalName = p.fullName (  ) ;^364^^^^^361^386^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.declaration != null || n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.declaration == null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.declaration != null && n.declaration.node == null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  != Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.refs == null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( r.getTwin (  )  == null && r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( r.getTwin (  )  != null || r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.props == null )  {^381^^^^^361^386^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Variable_Misuse]^flattenPrefixes ( originalName, p, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Variable_Misuse]^flattenPrefixes ( alias, n, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Argument_Swapping]^flattenPrefixes ( p, alias, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Argument_Swapping]^flattenPrefixes ( alias, depth, p + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^flattenPrefixes ( alias, p, depth  >>  1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Literal]^flattenPrefixes ( alias, p, depth + depth ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Wrong_Operator]^flattenPrefixes ( alias, p, depth  |  1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[BugLab_Variable_Misuse]^for  ( depthnt i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Argument_Swapping]^for  ( depthnt i = 1; i < i && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Argument_Swapping]^for  ( int i = 1; i < n && depth.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i < depth || n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i == depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Argument_Swapping]^flattenNameRef ( n, alias.getFirstChild (  ) , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Argument_Swapping]^flattenNameRef ( alias, originalName.getFirstChild (  ) , n, n ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Argument_Swapping]^flattenNameRef ( originalName, n.getFirstChild (  ) , n, alias ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[BugLab_Variable_Misuse]^Node ref = NodeUtil.newName ( originalName, n, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^Node ref = NodeUtil.newName ( alias, parent, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^Node ref = NodeUtil.newName ( alias, n, alias ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Argument_Swapping]^Node ref = NodeUtil.newName ( originalName, n, alias ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Argument_Swapping]^Node ref = NodeUtil.newName ( alias, originalName, n ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^Node ref = NodeUtil.newName ( alias, ref, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Argument_Swapping]^Node ref = NodeUtil.newName ( n, alias, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^NodeUtil.copyNameAnnotations ( parent.getLastChild (  ) , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , parent ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Argument_Swapping]^NodeUtil.copyNameAnnotations ( ref.getLastChild (  ) , n ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^NodeUtil.copyNameAnnotations ( ref.getLastChild (  ) , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^parent.replaceChild ( ref, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^parent.replaceChild ( n, n ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Argument_Swapping]^parent.replaceChild ( ref, n ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[BugLab_Variable_Misuse]^boolean canCollapseChildNames = p.canCollapseUnannotatedChildNames (  ) ;^443^^^^^442^465^boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames (  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^if  ( p.canCollapse (  )  && canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^if  ( n.canCollapse (  )  && inlineAliases )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Argument_Swapping]^if  ( canCollapseChildNames.canCollapse (  )  && n )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.canCollapse (  )  || canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^updateObjLitOrFunctionDeclaration ( p, alias ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Argument_Swapping]^updateObjLitOrFunctionDeclaration ( alias, n ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.props == null )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !p.inExterns || canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration == null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node == null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  == null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Wrong_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  != Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[BugLab_Variable_Misuse]^Node gramps = stubVar.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node gramps = nameNode.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node greatGramps = varNode.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node greatGramps = stubVar.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node greatGreatGramps = rvalue.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node greatGreatGramps = varNode.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node nameNode = NodeUtil.newName ( alias, rvalue.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Argument_Swapping]^Node nameNode = NodeUtil.newName ( refName, gramps.getFirstChild (  ) , alias.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Argument_Swapping]^Node nameNode = NodeUtil.newName ( alias, refName.getFirstChild (  ) , gramps.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node nameNode = NodeUtil.newName ( alias, varNode.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Argument_Swapping]^Node nameNode = NodeUtil.newName ( gramps, alias.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node nameNode = NodeUtil.newName ( alias, parent.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Wrong_Operator]^if  ( gramps.getType (  )  <= Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^for  ( ; varNode.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Wrong_Operator]^for  ( ; currentParent.getType (  )  != Token.SCRIPT || currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Wrong_Operator]^for  ( ; currentParent.getType (  )  >= Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Wrong_Operator]^for  ( ; currentParent.getType (  )  == Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^current = parent, currentParent = currentParent.getParent (  )  )  {}^526^527^^^^511^541^current = currentParent, currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^currentParent = varNode.getParent (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node stubVar = new Node ( Token.VAR, rvalue.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node current = rvalue;^522^^^^^507^537^Node current = gramps;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node currentParent = stubVar.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node stubVar = new Node ( Token.VAR, varNode.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node currentParent = varNode.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^for  ( ; parent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^currentParent = parent.getParent (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^currentParent.addChildBefore ( rvalue, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^currentParent.addChildBefore ( stubVar, varNode ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node varNode = new Node ( Token.VAR, parent ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node varNode = new Node ( Token.VAR, stubVar ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^parent.removeChild ( varNode ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^nameNode.addChildToFront ( parent ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^greatGramps.replaceChild ( stubVar, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^greatGramps.replaceChild ( gramps, stubVar ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Argument_Swapping]^greatGramps.replaceChild ( varNode, gramps ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^current = rvalue, currentParent = currentParent.getParent (  )  )  {}^526^527^^^^511^541^current = currentParent, currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^currentParent = stubVar.getParent (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node stubVar = new Node ( Token.VAR, parent.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^Node current = stubVar;^522^^^^^507^537^Node current = gramps;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^if  ( varNode.getType (  )  == Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^greatGramps.replaceChild ( gramps, parent ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^for  ( ; rvalue.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Variable_Misuse]^currentParent.addChildBefore ( varNode, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Argument_Swapping]^currentParent.addChildBefore ( current, stubVar ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[BugLab_Argument_Swapping]^updateObjLitOrFunctionDeclarationAtAssignNode ( alias, n ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^Node varParent = ref.node.getAncestor ( 4 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^Node gramps = ref.node.getAncestor ( 1 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^boolean isObjLit = varParent.getType (  )  == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^boolean isObjLit = rvalue.getType (  )  <= Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^boolean isObjLit = varNode.getType (  )  == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^if  ( isObjLit || n.canEliminate (  )  )  {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^if  ( rvalue.getType (  )  != Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^601^^^^^585^610^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^ref.node = varNode;^609^^^^^585^610^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 1 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^if  ( varParent.getType (  )  == Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^alias, ref.node.getAncestor ( 1 ) , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varNode.addChildToBack ( varParent ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^nameNode.addChildToFront ( varParent ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.replaceChild ( varParent, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.replaceChild ( gramps, varParent ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^varParent.replaceChild ( varNode, gramps ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.replaceChild ( gramps, varParent ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^varParent.replaceChild ( varNode, gramps ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^if  ( rvalue.getType (  )  != Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^ref.node = varParent;^609^^^^^594^624^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 3 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.replaceChild ( varParent, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^if  ( varParent.getType (  )  == Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^alias, ref.node.getAncestor ( 3 ) , n.fullName (  )  ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varNode.addChildToBack ( varParent ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^nameNode.addChildToFront ( varParent ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.replaceChild ( varNode, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.replaceChild ( gramps, varParent ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^varParent.replaceChild ( varNode, gramps ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^boolean discardKeys = n.aliasingGets >= 0;^613^^^^^598^628^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^declareVarsForObjLitValues ( n, alias, varParent, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^declareVarsForObjLitValues ( n, alias, rvalue, rvalue, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, rvalue.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, isObjLit ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( varParent, alias, rvalue, varNode, n.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( n, discardKeys, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, alias ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( n, alias, varParent, varNode, rvalue.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( n, alias, varNode, rvalue, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( n, varParent, rvalue, varNode, alias.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( n, alias, discardKeys, varNode, varParent.getChildBefore ( varNode ) , varParent, rvalue ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varNode, rvalue.getChildBefore ( varNode ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varNode, varParent.getChildBefore ( rvalue ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^varNode, varNode.getChildBefore ( varParent ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^boolean discardKeys = n.aliasingGets > 0;^613^^^^^598^628^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^boolean discardKeys = n.aliasingGets == -1;^613^^^^^598^628^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( alias, n, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, discardKeys.getChildBefore ( varNode ) , varParent, varParent ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^addStubsForUndeclaredProperties ( n, alias, rvalue, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^addStubsForUndeclaredProperties ( n, alias, varParent, varParent ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^addStubsForUndeclaredProperties ( varParent, alias, n, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^addStubsForUndeclaredProperties ( alias, n, varParent, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Argument_Swapping]^addStubsForUndeclaredProperties ( n, alias, varNode, varParent ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Variable_Misuse]^varParent.removeChild ( rvalue ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[BugLab_Wrong_Operator]^if  ( docInfo == null && ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( docInfo != null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( docInfo == null || ( !docInfo.isConstructor (  )  || !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, parent.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[BugLab_Variable_Misuse]^Node gramps = rvalue.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^boolean isObjLit = varNode.getType (  )  == Token.OBJECTLIT;^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Operator]^boolean isObjLit = rvalue.getType (  )  < Token.OBJECTLIT;^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Literal]^int numChanges = -1;^667^^^^^652^682^int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, gramps, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, rvalue, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, rvalue.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, isObjLit ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( discardKeys, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, n ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( name, n, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, name, varNode, rvalue, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, gramps, varNode.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, discardKeys.getChildBefore ( varNode ) , gramps, gramps ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Operator]^boolean discardKeys = n.aliasingGets != 0;^670^^^^^655^685^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, gramps, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, varNode.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( rvalue, name, n, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, varNode, rvalue, name, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, name, discardKeys, varNode, gramps.getChildBefore ( varNode ) , gramps, rvalue ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, name, gramps, varNode, rvalue.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, discardKeys, gramps.getChildBefore ( varNode ) , gramps, varNode ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^n, name, rvalue, varNode, rvalue.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^n, name, rvalue, rvalue, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^n, name, rvalue, gramps, varNode.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, inlineAliases ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( varNode, name, rvalue, n, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, gramps, rvalue, varNode, name.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Operator]^boolean discardKeys = n.aliasingGets >= 0;^670^^^^^655^685^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Literal]^boolean discardKeys = n.aliasingGets == numChanges;^670^^^^^655^685^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += declareVarsForObjLitValues ( n, rvalue, name, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += addStubsForUndeclaredProperties ( n, name, rvalue, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, rvalue ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += addStubsForUndeclaredProperties ( name, n, gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += addStubsForUndeclaredProperties ( n, gramps, name, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += addStubsForUndeclaredProperties ( n, name, varNode, gramps ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += addStubsForUndeclaredProperties ( n, varNode, gramps, name ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Argument_Swapping]^numChanges += addStubsForUndeclaredProperties ( gramps, name, n, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Operator]^if  ( isObjLit || n.canEliminate (  )  )  {^678^^^^^663^693^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Variable_Misuse]^gramps.removeChild ( rvalue ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Operator]^if  ( numChanges == 0 )  {^690^^^^^675^705^if  ( numChanges > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Literal]^if  ( numChanges > -1 )  {^690^^^^^675^705^if  ( numChanges > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[BugLab_Wrong_Literal]^n, fnName, ref.node.getAncestor ( 1 ) , ref.node.getParent (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[BugLab_Wrong_Literal]^int numVars = -1;^727^^^^^712^742^int numVars = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( inlineAliases )  {^748^^^^^733^763^if  ( discardKeys )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varParent.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Literal]^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^refNode = Node.newString ( Token.NAME, qName ) ;^753^^^^^748^758^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varNode.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.replaceChildAfter ( value, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.removeChild ( varParent ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.removeChild ( varParent ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varParent.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Literal]^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varParent.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varParent != null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^if  ( nameToAddAfter == null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( refNode, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( newVar, value ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^varParent.addChildBefore ( varNode, newVar ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildAfter ( value, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildAfter ( newVar, refNode ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^varParent.addChildAfter ( nameToAddAfter, newVar ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^if  ( p == null )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^newAlias.node = value;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varParent.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  >= Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^checkForHosedThisReferences ( varNode, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , objlitName ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^checkForHosedThisReferences ( p, value.getJSDocInfo (  ) , value ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^checkForHosedThisReferences ( objlit, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( objlit.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^checkForHosedThisReferences ( refNode, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^newAlias.node = varParent;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Name p = nameMap.get ( propName ) ;^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Name p = 4.get ( qName ) ;^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^Name p = qName.get ( nameMap ) ;^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^checkForHosedThisReferences ( varParent, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^newAlias.node = objlit;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.0 )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  < Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^newAlias.node = varNode;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key == null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( isJsIdentifier )  {^748^^^^^733^763^if  ( discardKeys )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.replaceChildAfter ( varParent, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.replaceChildAfter ( key, varParent ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^objlit.replaceChildAfter ( refNode, key ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.removeChild ( value ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.removeChild ( refNode ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( value.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( value != null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( varNode, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( newVar, varParent ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildAfter ( newVar, varParent ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( refNode.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.null )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  > Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^nextKey = varParent.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^refNode = Node.newString ( Token.NAME, qName ) ;^753^^^^^738^768^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^nameToAddAfter = varNode;^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Node newVar = new Node ( Token.VAR, varParent ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^boolean isJsIdentifier = varParent.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^boolean isJsIdentifier = key.getType (  )  != Token.4 && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER || TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^boolean isJsIdentifier = key.getType (  )  >= Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String propName = inlineAliases ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String propName = isJsIdentifier ? refNode.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^String propName = key ? isJsIdentifier.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String propAlias = appendPropForAlias ( qName, propName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String propAlias = appendPropForAlias ( alias, qName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^String propAlias = appendPropForAlias ( propName, alias ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String qName = p.fullName (  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String qName = objlitName.fullName (  )  + '.' + propAlias;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^String qName = propName.fullName (  )  + '.' + objlitName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^String qName = objlitName.fullName (  >>  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^String qName = objlitName.fullName (  )    instanceof   '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Node nameNode = Node.newString ( Token.NAME, qName ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Node newVar = new Node ( Token.VAR, value ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^nextKey = objlit.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^boolean isJsIdentifier = varNode.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^TokenStream.isJSIdentifier ( value.getString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.removeChild ( varNode ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.replaceChildAfter ( value, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.replaceChildAfter ( key, varParent ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^objlit.replaceChildAfter ( refNode, key ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^nameNode.addChildToFront ( refNode ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildAfter ( varParent, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( refNode, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( newVar, value ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Argument_Swapping]^varParent.addChildBefore ( varNode, newVar ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^key = value )  {^731^^^^^716^746^key = nextKey )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^nameToAddAfter = value;^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^for  ( Node key = varParent.getFirstChild (  ) , nextKey; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Node value = varNode.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^boolean isJsIdentifier = key.getType (  )  != Token.2 && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^boolean isJsIdentifier = key.getType (  )  == Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String propName = isObjLit ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^String propName = isJsIdentifier ? varParent.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^String qName = objlitName.fullName (  >=  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Wrong_Operator]^String qName = objlitName.fullName (  )   &&  '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Node value = varParent.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^boolean isJsIdentifier = refNode.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^TokenStream.isJSIdentifier ( varNode.getString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.removeChild ( varNode ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^objlit.replaceChildAfter ( key, value ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^nameNode.addChildToFront ( varParent ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^if  ( varNode.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( varParent, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^varParent.addChildBefore ( newVar, objlit ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^return arbitraryNameCounter;^798^^^^^783^813^return numVars;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( newVar )  ) ;^816^^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Operator]^if  ( n.props == null )  {^818^^^^^815^843^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^if  ( newVar == null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Operator]^if  ( addAfter != null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^addAfter = parent;^828^^^^^824^829^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( nameNode, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( newVar, parent ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildToFront ( nameNode ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Literal]^if  ( p.refs.get ( -1 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^addAfter = parent;^828^^^^^815^843^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^Node newVar = new Node ( Token.VAR, parent ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^Node nameNode = Node.newString ( Token.NAME, alias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( parent, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Argument_Swapping]^parent.addChildAfter ( addAfter, newVar ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Literal]^if  ( p.refs.get ( 1 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Literal]^if  ( p.refs.get ( numStubs ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^if  ( parent == null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Argument_Swapping]^parent.addChildAfter ( addAfter, newVar ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Wrong_Literal]^if  ( p.refs.get (  ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^if  ( n.needsToBeStubbed (  )  )  {^820^^^^^815^843^if  ( p.needsToBeStubbed (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( nameNode, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( newVar, parent ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( parent, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( newVar, newVar ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^parent.addChildAfter ( newVar, newVar ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[BugLab_Variable_Misuse]^if  ( root.indexOf ( '$' )  != -1 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Wrong_Operator]^if  ( prop.indexOf ( '$' )  == -1 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Variable_Misuse]^prop = root.replaceAll ( "\\$", "\\$0" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Argument_Swapping]^return prop + '$' + root;^852^^^^^845^853^return root + '$' + prop;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Wrong_Operator]^return root  ||  '$' + prop;^852^^^^^845^853^return root + '$' + prop;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
