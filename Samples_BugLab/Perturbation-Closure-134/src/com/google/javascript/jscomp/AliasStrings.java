[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^NodeTraversal.traverse (  root, this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey (  parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( str != null && blacklist.reset ( blacklist ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn (  info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^varParent = module.getNodeForCodeInsertion ( compiler ) ;^195^^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^moduleVarParentMap.put (  varParent ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^moduleVarParentMap.put ( varParent, module ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^moduleVarParentMap.put ( module ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = info.moduleToContainDeclGraph.getDeepestCommonDependency ( module, module ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency (  info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = info.getDeepestCommonDependency ( module, moduleGraph.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^Node varParent = moduleVarParentMapVarParentMap.get ( module ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^Node varParent = module.get ( moduleVarParentMap ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = module.getDeepestCommonDependency ( moduleGraph, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^varParent = module.getNodeForCodeInsertion ( compiler ) ;^195^^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^moduleVarParentMap.put ( varParent, module ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^moduleVarParentMap.put (  varParent ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^moduleVarParentMap.put ( module ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = infoGraph.getDeepestCommonDependency ( module, module.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency (  info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = info.getDeepestCommonDependency ( module, moduleGraph.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module, info ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^Node varParent = moduleVarParentMapVarParentMap.get ( module ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^Node varParent = module.get ( moduleVarParentMap ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn ( info, module.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn (  info.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn ( module.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn ( info.moduleToContainDecl, module )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn ( module )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = info.moduleToContainDeclGraph.getDeepestCommonDependency ( module, module ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = info.moduleToContainDecl.getDeepestCommonDependency ( module, moduleGraph ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( info.moduleToContainDecl != null && module != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = info.moduleToContainDecl.getDeepestCommonDependency ( module, moduleGraph ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = infoGraph.getDeepestCommonDependency ( module, module.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringOccurrence occurrence = parentew StringOccurrence ( n, n ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringOccurrence occurrence = new StringOccurrence (  parent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringOccurrence occurrence = new StringOccurrence ( n ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( n.inGlobalScope (  )  || isInThrowExpression ( t )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( info == 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraphGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = module.getDeepestCommonDependency ( moduleGraph, info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraph.getDeepestCommonDependency ( module, info ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( str == null || aliasableStrings.contains ( aliasableStrings )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^module = moduleGraphGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn ( module, info )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( module != null && info != null && module != info.moduleToContainDecl.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!moduleGraph.dependsOn ( module, info.moduleToContainDecl.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( info != null && module.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( module != null && info.moduleToContainDecl.moduleToContainDecl != null && module != info && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!NodeUtil.isObjectLitKey ( parent, n )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!NodeUtil.isObjectLitKey (  parent )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^!NodeUtil.isObjectLitKey ( n )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringInfo info = stringInfoMapInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringInfo info = string.get ( stringInfoMap ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^stringInfoMap.put ( info, string ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^stringInfoMap.put (  info ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^stringInfoMap.put ( string ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( shouldReplaceWithAlias ( info, literal )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( shouldReplaceWithAlias (  info )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( shouldReplaceWithAlias ( literal )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^replaceStringWithAliasName ( info, occurrence.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^replaceStringWithAliasName (  info.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^replaceStringWithAliasName ( occurrence.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^replaceStringWithAliasName ( occurrence, literal.getVariableName ( info ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^occurrence, literal.getVariableName ( info ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^occurrence.getVariableName ( literal ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^replaceStringWithAliasName ( literal, info.getVariableName ( occurrence ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^info.parentForNewVarDecl.addChildBefore ( var.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^info.parentForNewVarDecl.addChildBefore ( info, var.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^info.parentForNewVarDecl.addChildBefore (  info.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^info.parentForNewVarDecl.addChildBefore ( var ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^String alias = entry.getVariableName ( info.getKey (  )  ) ;^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^info.parentForNewVarDecl.addChildBefore ( var, info ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( info.numOccurrences.numOccurrences > infoInfrequentlyExecuted )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( info.numOccurrencesInfrequentlyExecuted > info.numOccurrences )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( info.numOccurrencesInfrequentlyExecuted.numOccurrences > info )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^int sizeOfStrings = sizeOfLiteral.numOccurrences * info;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^int sizeOfStrings = sizeOfLiteral * info.numOccurrences;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^int sizeOfAliases = 6 + sizeOfLiteral + sizeOfVariable + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^int sizeOfAliases = 6 + sizeOfVariable + info.numOccurrences + sizeOfLiteral * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^int sizeOfAliases = 6 + info + sizeOfLiteral + sizeOfVariable.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^return sizeOfStrings < sizeOfAliases;^324^^^^^298^325^return sizeOfAliases < sizeOfStrings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^occurrence.parent.replaceChild (  Node.newString ( Token.NAME, name )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^sb.append ( info.numOccurrences.numOccurrences ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^sb.append ( info ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringInfo info = stringInfoMapingInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^StringInfo info = str.get ( stringInfoMap ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^aliasName = encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^aliasName = encodeStringAsIdentifier (  stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^encodeStringAsIdentifier (  stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^final int limit = Math.min ( MAX_LIMIT, length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^final int limit = Math.min (  MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^final int limit = Math.min ( length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^for  ( limitnt i = 0; i < i; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^char ch = i.charAt ( s ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^if  ( limit == length )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^long hash = unitTestHashReductionMask.getValue (  )  & crc32;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[buglab_swap_variables]^aliasName = encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[buglab_swap_variables]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[buglab_swap_variables]^aliasName = encodeStringAsIdentifier (  stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[buglab_swap_variables]^encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[buglab_swap_variables]^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[buglab_swap_variables]^encodeStringAsIdentifier (  stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[buglab_swap_variables]^final int limit = Math.min ( MAX_LIMIT, length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[buglab_swap_variables]^final int limit = Math.min (  MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[buglab_swap_variables]^final int limit = Math.min ( length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[buglab_swap_variables]^for  ( limitnt i = 0; i < i; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[buglab_swap_variables]^char ch = i.charAt ( s ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[buglab_swap_variables]^if  ( limit == length )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[buglab_swap_variables]^long hash = unitTestHashReductionMask.getValue (  )  & crc32;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
