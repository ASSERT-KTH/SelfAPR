[buglab_swap_variables]^String name = parent.getName ( namer ) ;^92^^^^^77^107^String name = namer.getName ( parent ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName (  n ) ;^93^^^^^78^108^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName ( name ) ;^93^^^^^78^108^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^String name = lhs.getName ( namer ) ;^87^^^^^72^102^String name = namer.getName ( lhs ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName (  n ) ;^88^^^^^73^103^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName ( nameame, n ) ;^88^^^^^73^103^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName ( name ) ;^88^^^^^73^103^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName ( n, name ) ;^93^^^^^78^108^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName ( nameame, n ) ;^93^^^^^78^108^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^namer.setFunctionName ( n, name ) ;^88^^^^^73^103^namer.setFunctionName ( name, n ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^nameObjectLiteralMethods ( lhs, namer.getName ( rhs )  ) ;^106^^^^^91^121^nameObjectLiteralMethods ( rhs, namer.getName ( lhs )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^nameObjectLiteralMethods (  namer.getName ( lhs )  ) ;^106^^^^^91^121^nameObjectLiteralMethods ( rhs, namer.getName ( lhs )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^nameObjectLiteralMethods ( namer, rhs.getName ( lhs )  ) ;^106^^^^^91^121^nameObjectLiteralMethods ( rhs, namer.getName ( lhs )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^nameObjectLiteralMethods ( rhs.getName ( lhs )  ) ;^106^^^^^91^121^nameObjectLiteralMethods ( rhs, namer.getName ( lhs )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^nameObjectLiteralMethods ( rhs, lhs.getName ( namer )  ) ;^106^^^^^91^121^nameObjectLiteralMethods ( rhs, namer.getName ( lhs )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] FunctionNamer  namer  String  functionName  name  boolean  NodeTraversal  t  Node  functionNameNode  lhs  n  parent  rhs  
[buglab_swap_variables]^nameObjectLiteralMethods ( name, valueNode ) ;^139^^^^^124^154^nameObjectLiteralMethods ( valueNode, name ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^nameObjectLiteralMethods (  name ) ;^139^^^^^124^154^nameObjectLiteralMethods ( valueNode, name ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^nameObjectLiteralMethods ( valueNode ) ;^139^^^^^124^154^nameObjectLiteralMethods ( valueNode, name ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^namer.setFunctionName ( valueNode, name ) ;^135^^^^^120^150^namer.setFunctionName ( name, valueNode ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^namer.setFunctionName (  valueNode ) ;^135^^^^^120^150^namer.setFunctionName ( name, valueNode ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^namer.setFunctionName ( name ) ;^135^^^^^120^150^namer.setFunctionName ( name, valueNode ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = namer.getCombinedName ( keyNode, namer.getName ( context )  ) ;^127^^^^^112^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = namer.getCombinedName (  namer.getName ( keyNode )  ) ;^127^^^^^112^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = keyNode.getCombinedName ( context, namer.getName ( namer )  ) ;^127^^^^^112^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = namer.getCombinedName ( context.getName ( keyNode )  ) ;^127^^^^^112^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = context.getCombinedName ( namer, namer.getName ( keyNode )  ) ;^127^^^^^112^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^for  ( Node objectLiteral = keyNode.getFirstChild (  ) ;^117^^^^^102^132^for  ( Node keyNode = objectLiteral.getFirstChild (  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^nameObjectLiteralMethods ( name, valueNode ) ;^139^^^^^117^142^nameObjectLiteralMethods ( valueNode, name ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^nameObjectLiteralMethods (  name ) ;^139^^^^^117^142^nameObjectLiteralMethods ( valueNode, name ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^nameObjectLiteralMethods ( valueNode ) ;^139^^^^^117^142^nameObjectLiteralMethods ( valueNode, name ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^namer.setFunctionName ( valueNode, name ) ;^135^^^^^117^142^namer.setFunctionName ( name, valueNode ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^namer.setFunctionName (  valueNode ) ;^135^^^^^117^142^namer.setFunctionName ( name, valueNode ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^namer.setFunctionName ( name ) ;^135^^^^^117^142^namer.setFunctionName ( name, valueNode ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = context.getCombinedName ( namer, namer.getName ( keyNode )  ) ;^127^^^^^117^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = namer.getCombinedName (  namer.getName ( keyNode )  ) ;^127^^^^^117^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = namer.getCombinedName ( keyNode, namer.getName ( context )  ) ;^127^^^^^117^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = keyNode.getCombinedName ( context, namer.getName ( namer )  ) ;^127^^^^^117^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
[buglab_swap_variables]^String name = namer.getCombinedName ( context.getName ( keyNode )  ) ;^127^^^^^117^142^String name = namer.getCombinedName ( context, namer.getName ( keyNode )  ) ;^[CLASS] AnonymousFunctionNamingCallback  [METHOD] nameObjectLiteralMethods [RETURN_TYPE] void   Node objectLiteral String context [VARIABLES] FunctionNamer  namer  String  context  functionName  name  boolean  int  type  Node  functionNameNode  keyNode  objectLiteral  valueNode  
