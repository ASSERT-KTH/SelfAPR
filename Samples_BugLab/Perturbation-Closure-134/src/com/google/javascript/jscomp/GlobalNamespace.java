[buglab_swap_variables]^this ( root, null, compiler ) ;^65^^^^^64^66^this ( compiler, null, root ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] Node)   AbstractCompiler compiler Node root [VARIABLES] Set  newNodes  Node  externsRoot  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this (  null, root ) ;^65^^^^^64^66^this ( compiler, null, root ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] Node)   AbstractCompiler compiler Node root [VARIABLES] Set  newNodes  Node  externsRoot  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this ( compiler, null ) ;^65^^^^^64^66^this ( compiler, null, root ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] Node)   AbstractCompiler compiler Node root [VARIABLES] Set  newNodes  Node  externsRoot  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.node = original.node.node;^1025^^^^^1024^1030^this.node = original.node;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.node = original;^1025^^^^^1024^1030^this.node = original.node;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.sourceName = original.sourceName.sourceName;^1026^^^^^1024^1030^this.sourceName = original.sourceName;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.sourceName = original;^1026^^^^^1024^1030^this.sourceName = original.sourceName;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.scope = original.scope.scope;^1028^^^^^1024^1030^this.scope = original.scope;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.scope = original;^1028^^^^^1024^1030^this.scope = original.scope;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.module = original.module.module;^1029^^^^^1024^1030^this.module = original.module;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^this.module = original;^1029^^^^^1024^1030^this.module = original.module;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Set  newNodes  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal t = new NodeTraversal ( newNodes, new BuildGlobalNamespace ( new NodeFilter ( compiler )  )  ) ;^114^115^^^^113^117^NodeTraversal t = new NodeTraversal ( compiler, new BuildGlobalNamespace ( new NodeFilter ( newNodes )  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] scanNewNodes [RETURN_TYPE] void   Scope scope Node> newNodes [VARIABLES] Set  newNodes  NodeTraversal  t  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal t = new NodeTraversal (  new BuildGlobalNamespace ( new NodeFilter ( newNodes )  )  ) ;^114^115^^^^113^117^NodeTraversal t = new NodeTraversal ( compiler, new BuildGlobalNamespace ( new NodeFilter ( newNodes )  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] scanNewNodes [RETURN_TYPE] void   Scope scope Node> newNodes [VARIABLES] Set  newNodes  NodeTraversal  t  Node  externsRoot  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( current.contains ( newNodes )  )  {^139^^^^^130^145^if  ( newNodes.contains ( current )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^for  ( n = current;^136^^^^^130^145^for  ( current = n;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return newNodes.getType (  )  == Token.NAME && current.contains ( current ) ;^144^^^^^130^145^return current.getType (  )  == Token.NAME && newNodes.contains ( current ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( externsRoot, compiler, new BuildGlobalNamespace (  )  ) ;^154^^^^^151^160^NodeTraversal.traverse ( compiler, externsRoot, new BuildGlobalNamespace (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] process [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal.traverse (  externsRoot, new BuildGlobalNamespace (  )  ) ;^154^^^^^151^160^NodeTraversal.traverse ( compiler, externsRoot, new BuildGlobalNamespace (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] process [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new BuildGlobalNamespace (  )  ) ;^154^^^^^151^160^NodeTraversal.traverse ( compiler, externsRoot, new BuildGlobalNamespace (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] process [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new BuildGlobalNamespace (  )  ) ;^158^^^^^151^160^NodeTraversal.traverse ( compiler, root, new BuildGlobalNamespace (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] process [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new BuildGlobalNamespace (  )  ) ;^158^^^^^151^160^NodeTraversal.traverse ( compiler, root, new BuildGlobalNamespace (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] process [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new BuildGlobalNamespace (  )  ) ;^158^^^^^151^160^NodeTraversal.traverse ( compiler, root, new BuildGlobalNamespace (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] process [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return isGlobalVarReference ( s, topVarName ) ;^172^^^^^170^173^return isGlobalVarReference ( topVarName, s ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isGlobalNameReference [RETURN_TYPE] boolean   String name Scope s [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return isGlobalVarReference (  s ) ;^172^^^^^170^173^return isGlobalVarReference ( topVarName, s ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isGlobalNameReference [RETURN_TYPE] boolean   String name Scope s [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return isGlobalVarReference ( topVarName ) ;^172^^^^^170^173^return isGlobalVarReference ( topVarName, s ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isGlobalNameReference [RETURN_TYPE] boolean   String name Scope s [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return name == -1 ? firstDotIndex : name.substring ( 0, firstDotIndex ) ;^183^^^^^181^184^return firstDotIndex == -1 ? name : name.substring ( 0, firstDotIndex ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getTopVarName [RETURN_TYPE] String   String name [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return firstDotIndex == -1 ? name : name.substring ( 0 ) ;^183^^^^^181^184^return firstDotIndex == -1 ? name : name.substring ( 0, firstDotIndex ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getTopVarName [RETURN_TYPE] String   String name [VARIABLES] Set  newNodes  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Scope.Var v = name.getVar ( s ) ;^195^^^^^194^200^Scope.Var v = s.getVar ( name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isGlobalVarReference [RETURN_TYPE] boolean   String name Scope s [VARIABLES] Set  newNodes  Var  v  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( externsScope == null && v != null )  {^196^^^^^194^200^if  ( v == null && externsScope != null )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isGlobalVarReference [RETURN_TYPE] boolean   String name Scope s [VARIABLES] Set  newNodes  Var  v  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^v = name.getVar ( externsScope ) ;^197^^^^^194^200^v = externsScope.getVar ( name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isGlobalVarReference [RETURN_TYPE] boolean   String name Scope s [VARIABLES] Set  newNodes  Var  v  Node  current  externsRoot  n  name  node  root  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( nodeFilterodeFilter != null && !nodeFilter.apply ( n )  )  {^235^^^^^220^250^if  ( nodeFilter != null && !nodeFilter.apply ( n )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != nodeFilterull && !nodeFilter.apply ( n )  )  {^235^^^^^220^250^if  ( nodeFilter != null && !nodeFilter.apply ( n )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != externsRootull && n == externsRoot )  {^241^^^^^226^256^if  ( externsRoot != null && n == externsRoot )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != parentull && parent.getType (  )  == Token.OBJECTLIT )  {^254^^^^^239^269^if  ( parent != null && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != parentull )  {^263^^^^^248^278^if  ( parent != null )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n.getFirstChild (  )  == parent )  {^271^^^^^256^286^if  ( parent.getFirstChild (  )  == n )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( parent == null || NodeUtil.isFunctionAnonymous ( gramps )  )  return;^280^281^^^^265^295^if  ( gramps == null || NodeUtil.isFunctionAnonymous ( parent )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != parentull )  {^291^^^^^276^306^if  ( parent != null )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n.getFirstChild (  )  == parent )  {^294^^^^^279^309^if  ( parent.getFirstChild (  )  == n )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( !isGlobalNameReference ( scope, name )  )  {^313^^^^^298^328^if  ( !isGlobalNameReference ( name, scope )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( !isGlobalNameReference (  scope )  )  {^313^^^^^298^328^if  ( !isGlobalNameReference ( name, scope )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( !isGlobalNameReference ( name )  )  {^313^^^^^298^328^if  ( !isGlobalNameReference ( name, scope )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( n, t, parent, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet (  n, parent, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, parent, n, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t,  parent, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n,  name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, name, parent, n ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, parent ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( parent, n, t, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal (  n, parent, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, parent, n, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t,  parent, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, n, name, parent ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, n,  name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( name, n, parent, t ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, n, parent ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( n, t, parent, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal (  n, parent, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, type, parent, name, isPropAssign, n ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t,  parent, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, parent, n, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n,  name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, isPropAssign, name, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent,  isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, name,  type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, name, isPropAssign ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( isPropAssign, n, parent, name, t, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, isPropAssign, name, parent, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, name, parent, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, type, name, isPropAssign, parent ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( n, t, parent, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal (  n, parent, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, parent, n, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t,  parent, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, n,  name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, n, name, parent ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, n, parent ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, name, parent, n ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( name, n, parent, t, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, isPropAssign, parent, name, n, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( type, n, parent, name, isPropAssign, t ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, name, type, isPropAssign ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( parent, n, t, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( t, name, parent, n ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleSetFromLocal ( name, n, parent, t ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( n, t, parent, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet (  n, parent, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, name, parent, n ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t,  parent, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, parent, n, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n,  name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, parent ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  n  name  node  parent  root  rvalue  String  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^for  ( Node walker = n.getFirstChild (  ) ; walker != parent;^347^^^^^332^362^for  ( Node walker = parent.getFirstChild (  ) ; walker != n;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^for  ( Node parent = walker.getFirstChild (  ) ; walker != n;^347^^^^^332^362^for  ( Node walker = parent.getFirstChild (  ) ; walker != n;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Node key = parent.getChildBefore ( gramps ) ;^385^^^^^370^400^Node key = gramps.getChildBefore ( parent ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != nameull )  {^395^^^^^380^410^if  ( name != null )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return key + '.' + name;^398^^^^^383^413^return name + '.' + key;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] Set  newNodes  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( n, t, parent, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix (  n, parent, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, parent, n, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t,  parent, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n,  name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, name, parent )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, parent )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( name, n, parent, t )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, name, parent, n )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref set = new Ref (  n, Ref.Type.SET_FROM_GLOBAL ) ;^453^^^^^446^465^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_GLOBAL ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref set = new Ref ( t,  Ref.Type.SET_FROM_GLOBAL ) ;^453^^^^^446^465^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_GLOBAL ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^} else if  ( isConstructorOrEnumDeclaration ( parent, n )  )  {^461^^^^^446^465^} else if  ( isConstructorOrEnumDeclaration ( n, parent )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^} else if  ( isConstructorOrEnumDeclaration (  parent )  )  {^461^^^^^446^465^} else if  ( isConstructorOrEnumDeclaration ( n, parent )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^} else if  ( isConstructorOrEnumDeclaration ( n )  )  {^461^^^^^446^465^} else if  ( isConstructorOrEnumDeclaration ( n, parent )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref get = tew Ref ( n, n, Ref.Type.ALIASING_GET ) ;^458^^^^^446^465^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref get = new Ref (  n, Ref.Type.ALIASING_GET ) ;^458^^^^^446^465^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref get = new Ref ( t,  Ref.Type.ALIASING_GET ) ;^458^^^^^446^465^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref.markTwins ( get, set ) ;^460^^^^^446^465^Ref.markTwins ( set, get ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref.markTwins (  get ) ;^460^^^^^446^465^Ref.markTwins ( set, get ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref.markTwins ( set ) ;^460^^^^^446^465^Ref.markTwins ( set, get ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  Predicate  nodeFilter  Name  nameObj  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( parent, n, t, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix (  n, parent, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( n, t, parent, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t,  parent, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, name, parent )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n,  name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, parent )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, parent, n, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( name, n, parent, t )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref set = new Ref (  n, Ref.Type.SET_FROM_LOCAL ) ;^516^^^^^511^525^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_LOCAL ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref set = tew Ref ( n, n, Ref.Type.SET_FROM_LOCAL ) ;^516^^^^^511^525^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_LOCAL ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref set = new Ref ( t,  Ref.Type.SET_FROM_LOCAL ) ;^516^^^^^511^525^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_LOCAL ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref get = tew Ref ( n, n, Ref.Type.ALIASING_GET ) ;^521^^^^^511^525^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref get = new Ref (  n, Ref.Type.ALIASING_GET ) ;^521^^^^^511^525^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref get = new Ref ( t,  Ref.Type.ALIASING_GET ) ;^521^^^^^511^525^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref.markTwins ( get, set ) ;^523^^^^^511^525^Ref.markTwins ( set, get ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref.markTwins (  get ) ;^523^^^^^511^525^Ref.markTwins ( set, get ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Ref.markTwins ( set ) ;^523^^^^^511^525^Ref.markTwins ( set, get ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( parent, n, t, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix (  n, parent, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, parent, n, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t,  parent, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n,  name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( name, n, parent, t )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, parent )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( n, t, parent, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, name, parent, n )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( parent != n.getFirstChild (  )  )  {^569^^^^^554^584^if  ( n != parent.getFirstChild (  )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( parent, t, name ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr (  parent, name ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, name, parent ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t,  name ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, parent ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( name, parent, t ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = parent == n.getFirstChild (  ) ? Ref.Type.CALL_GET : Ref.Type.ALIASING_GET;^551^552^553^^^536^566^type = n == parent.getFirstChild (  ) ? Ref.Type.CALL_GET : Ref.Type.ALIASING_GET;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = parent == n.getFirstChild (  ) ? Ref.Type.DIRECT_GET : Ref.Type.ALIASING_GET;^556^557^558^^^541^571^type = n == parent.getFirstChild (  ) ? Ref.Type.DIRECT_GET : Ref.Type.ALIASING_GET;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( name, parent, t ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr (  parent, name ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( parent, t, name ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t,  name ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, name, parent ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, parent ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( n, t, parent, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet (  n, parent, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, parent, n, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t,  parent, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n,  name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, parent, type, name ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, parent,  type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, type, name, parent ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, parent, name ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( prev.getFirstChild (  )  == anc )  {^615^^^^^600^630^if  ( anc.getFirstChild (  )  == prev )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] determineGetTypeForHookOrBooleanExpr [RETURN_TYPE] GlobalNamespace$Ref$Type   NodeTraversal t Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( prev.getFirstChild (  )  != anc )  {^630^^^^^615^645^if  ( anc.getFirstChild (  )  != prev )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] determineGetTypeForHookOrBooleanExpr [RETURN_TYPE] GlobalNamespace$Ref$Type   NodeTraversal t Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node.addRef ( new Ref ( type, n, t )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node.addRef ( new Ref (  n, type )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node.addRef ( tew Ref ( n, n, type )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node.addRef ( new Ref ( t,  type )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node.addRef ( new Ref ( t, n )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  localSets  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 1 ) ;^690^^^^^675^705^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = name.indexOf ( '.' + 1 ) ;^690^^^^^675^705^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 1 ) ;^690^^^^^677^692^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = name.indexOf ( '.' + 1 ) ;^690^^^^^677^692^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^prefix = i.substring ( 0, name ) ;^685^^^^^677^692^prefix = name.substring ( 0, i ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^prefix = name.substring ( 0 ) ;^685^^^^^677^692^prefix = name.substring ( 0, i ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 11 ) ;^687^^^^^677^692^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = name.indexOf ( '.' + 11 ) ;^687^^^^^677^692^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^prefix = i.substring ( 0, name ) ;^685^^^^^670^700^prefix = name.substring ( 0, i ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^prefix = name.substring ( 0 ) ;^685^^^^^670^700^prefix = name.substring ( 0, i ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 11 ) ;^687^^^^^672^702^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^i = name.indexOf ( '.' + 11 ) ;^687^^^^^672^702^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != parentull && NodeUtil.isObjectLitKey ( n, parent )  )  {^694^^^^^679^709^if  ( parent != null && NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( parent != null && NodeUtil.isObjectLitKey ( n )  )  {^694^^^^^679^709^if  ( parent != null && NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( parent != null && NodeUtil.isObjectLitKey (  parent )  )  {^694^^^^^679^709^if  ( parent != null && NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^for  ( nnt i = 0; i < iumLevelsToRemove; i++ )  {^700^^^^^685^715^for  ( int i = 0; i < numLevelsToRemove; i++ )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^for  ( numLevelsToRemovent i = 0; i < i; i++ )  {^700^^^^^685^715^for  ( int i = 0; i < numLevelsToRemove; i++ )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( n, t, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet (  n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, parent, n, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t,  parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n,  prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^handleGet ( t, n, parent,  Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] Set  newNodes  NodeTraversal  t  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Name node = nameMapMap.get ( name ) ;^730^^^^^729^744^Name node = nameMap.get ( name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Name node = name.get ( nameMap ) ;^730^^^^^729^744^Name node = nameMap.get ( name ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = new Name ( inExterns, null, name ) ;^738^^^^^729^744^node = new Name ( name, null, inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = new Name (  null, inExterns ) ;^738^^^^^729^744^node = new Name ( name, null, inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = new Name ( name, null ) ;^738^^^^^729^744^node = new Name ( name, null, inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = name.addProperty ( parent.substring ( i + 1 ) , inExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = parent.addProperty ( inExterns.substring ( i + 1 ) , name ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = parent.addProperty ( name.substring ( inExterns + 1 ) , i ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = parent.addProperty ( name.substring ( i + 1 ) nExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = inExterns.addProperty ( name.substring ( i + 1 ) , parent ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = parent.addProperty ( name.substring ( i + 1 )  ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^String parentName = i.substring ( 0, name ) ;^734^^^^^729^744^String parentName = name.substring ( 0, i ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^String parentName = name.substring ( 0 ) ;^734^^^^^729^744^String parentName = name.substring ( 0, i ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = parent.addProperty ( i.substring ( name + 1 ) , inExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^node = i.addProperty ( name.substring ( parent + 1 ) , inExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^nameMap.put (  node ) ;^741^^^^^729^744^nameMap.put ( name, node ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^nameMap.put ( node, name ) ;^741^^^^^729^744^nameMap.put ( name, node ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^nameMap.put ( name ) ;^741^^^^^729^744^nameMap.put ( name, node ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Name node = new Name ( inExterns, this, name ) ;^790^^^^^786^793^Name node = new Name ( name, this, inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] addProperty [RETURN_TYPE] GlobalNamespace$Name   String name boolean inExterns [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Name node = new Name (  this, inExterns ) ;^790^^^^^786^793^Name node = new Name ( name, this, inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] addProperty [RETURN_TYPE] GlobalNamespace$Name   String name boolean inExterns [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Name node = new Name ( name, this ) ;^790^^^^^786^793^Name node = new Name ( name, this, inExterns ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] addProperty [RETURN_TYPE] GlobalNamespace$Name   String name boolean inExterns [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  original  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( declaration == ref )  {^833^^^^^818^848^if  ( ref == declaration )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( maybeNewDecl.type.type == Ref.Type.SET_FROM_GLOBAL )  {^837^^^^^822^852^if  ( maybeNewDecl.type == Ref.Type.SET_FROM_GLOBAL )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^( refss != null && ref.remove ( ref )  )  )  {^832^^^^^817^847^( refs != null && refs.remove ( ref )  )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^( ref != null && refss.remove ( ref )  )  )  {^832^^^^^817^847^( refs != null && refs.remove ( ref )  )  )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( n != propsull )  {^883^^^^^878^891^if  ( props != null )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] canEliminate [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return !inExterns &&  ( parent || ( isClassOrEnum == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^894^895^896^^^893^897^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] canCollapse [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( localSets > 0 || globalSets > 0 )  ) ;^894^895^896^^^893^897^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] canCollapse [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( globalSets == Type.OTHER || type != 1 || localSets != 0 )  {^900^^^^^899^917^if  ( type == Type.OTHER || globalSets != 1 || localSets != 0 )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] canCollapseUnannotatedChildNames [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return  ( type == Type.FUNCTION || parent == 0 )  && ( aliasingGets == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^915^916^^^^899^917^return  ( type == Type.FUNCTION || aliasingGets == 0 )  && ( parent == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] canCollapseUnannotatedChildNames [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return  ( parent == Type.FUNCTION || aliasingGets == 0 )  && ( type == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^915^916^^^^899^917^return  ( type == Type.FUNCTION || aliasingGets == 0 )  && ( parent == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] canCollapseUnannotatedChildNames [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return localSets == 0 && globalSets > 0;^920^^^^^919^921^return globalSets == 0 && localSets > 0;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] needsToBeStubbed [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^for  ( Name parent = ancestor; ancestor != null;^925^^^^^923^929^for  ( Name ancestor = parent; ancestor != null;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] setIsClassOrEnum [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^ancestor = ancestor.parent.parent )  {^926^^^^^923^929^ancestor = ancestor.parent )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] setIsClassOrEnum [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^ancestor = ancestor )  {^926^^^^^923^929^ancestor = ancestor.parent )  {^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] setIsClassOrEnum [RETURN_TYPE] void   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return type && hasClassOrEnumDescendant == Type.OBJECTLIT;^940^^^^^939^941^return hasClassOrEnumDescendant && type == Type.OBJECTLIT;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] isNamespace [RETURN_TYPE] boolean   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + globalSets + " ) : type=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : localSets=" + globalSets + ", globalSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", aliasingGets=" + localSets + ", totalGets=" + totalGets + ", localSets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + "=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", callGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", totalGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + "=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + "=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", callGets=" + aliasingGets + ", aliasingGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + "=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return name == null ? parent : parent.fullName (  )  + '.' + name;^959^^^^^958^960^return parent == null ? name : parent.fullName (  )  + '.' + name;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] fullName [RETURN_TYPE] String   [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return refParent.node == ref.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^973^974^^^^965^979^return ref.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return refParent == ref.node.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^973^974^^^^965^979^return ref.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return ref == ref.nodeParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^973^974^^^^965^979^return ref.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Node ref.nodeParent = ref.getParent (  ) ;^967^^^^^965^979^Node refParent = ref.node.getParent (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^refParent.getJSDocInfo (  )  : ref.node.node.getJSDocInfo (  ) ;^974^^^^^965^979^refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^refParent.getJSDocInfo (  )  : ref.getJSDocInfo (  ) ;^974^^^^^965^979^refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^return ref.node.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.getJSDocInfo (  ) ;^973^974^^^^965^979^return ref.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Preconditions.checkArgument ( ( b.type == Type.ALIASING_GET || a.type == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^1048^1049^1050^1051^^1047^1054^Preconditions.checkArgument ( ( a.type == Type.ALIASING_GET || b.type == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] markTwins [RETURN_TYPE] void   Ref a Ref b [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  a  b  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^Preconditions.checkArgument ( ( a.type == Type.ALIASING_GET || b == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^1048^1049^1050^1051^^1047^1054^Preconditions.checkArgument ( ( a.type == Type.ALIASING_GET || b.type == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^[CLASS] GlobalNamespace NodeFilter BuildGlobalNamespace Name Type Ref Type  [METHOD] markTwins [RETURN_TYPE] void   Ref a Ref b [VARIABLES] Set  newNodes  Node  anc  current  externsRoot  gramps  greatGramps  key  lvalue  n  name  node  parent  prev  refParent  root  rvalue  second  third  valueNode  walker  String  key  name  parentName  prefix  sourceName  topVarName  JSDocInfo  docInfo  info  int  aliasingGets  callGets  firstDotIndex  globalSets  i  localSets  numLevelsToRemove  totalGets  valueNodeType  Predicate  nodeFilter  Name  ancestor  n  nameObj  node  parent  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DIRECT_GET  FUNCTION  OBJECTLIT  OTHER  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  t  type  Ref  a  b  declaration  get  maybeNewDecl  original  ref  set  twin  boolean  generated  hasClassOrEnumDescendant  inExterns  isClassOrEnum  isPropAssign  isSet  Scope  externsScope  s  scope  JSModule  module  List  globalNames  props  refs  Map  nameMap  
[buglab_swap_variables]^if  ( current.contains ( newNodes )  )  {^139^^^^^130^145^if  ( newNodes.contains ( current )  )  {^[CLASS] NodeFilter  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  newNodes  Node  current  n  boolean  
[buglab_swap_variables]^for  ( n = current;^136^^^^^130^145^for  ( current = n;^[CLASS] NodeFilter  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  newNodes  Node  current  n  boolean  
[buglab_swap_variables]^return newNodes.getType (  )  == Token.NAME && current.contains ( current ) ;^144^^^^^130^145^return current.getType (  )  == Token.NAME && newNodes.contains ( current ) ;^[CLASS] NodeFilter  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  newNodes  Node  current  n  boolean  
[buglab_swap_variables]^if  ( nodeFilterodeFilter != null && !nodeFilter.apply ( n )  )  {^235^^^^^220^250^if  ( nodeFilter != null && !nodeFilter.apply ( n )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( n != nodeFilterull && !nodeFilter.apply ( n )  )  {^235^^^^^220^250^if  ( nodeFilter != null && !nodeFilter.apply ( n )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( n != parentull )  {^263^^^^^248^278^if  ( parent != null )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( n.getFirstChild (  )  == parent )  {^271^^^^^256^286^if  ( parent.getFirstChild (  )  == n )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( parent == null || NodeUtil.isFunctionAnonymous ( gramps )  )  return;^280^281^^^^265^295^if  ( gramps == null || NodeUtil.isFunctionAnonymous ( parent )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( n != parentull )  {^291^^^^^276^306^if  ( parent != null )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( n.getFirstChild (  )  == parent )  {^294^^^^^279^309^if  ( parent.getFirstChild (  )  == n )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( !isGlobalNameReference ( scope, name )  )  {^313^^^^^298^328^if  ( !isGlobalNameReference ( name, scope )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( !isGlobalNameReference (  scope )  )  {^313^^^^^298^328^if  ( !isGlobalNameReference ( name, scope )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^if  ( !isGlobalNameReference ( name )  )  {^313^^^^^298^328^if  ( !isGlobalNameReference ( name, scope )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( name, n, parent, t ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet (  n, parent, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( n, t, parent, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t,  parent, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, parent, n, name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, n,  name ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, n, parent ) ;^324^^^^^317^325^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( n, t, parent, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal (  n, parent, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, name, parent, n ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t,  parent, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, parent, n, name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, n,  name ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( name, n, parent, t ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, n, parent ) ;^321^^^^^318^322^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( name, n, parent, t, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal (  n, parent, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, parent, n, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t,  parent, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( parent, n, t, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n,  name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, type, isPropAssign, name ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent,  isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, isPropAssign, name, parent, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, name,  type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, name, isPropAssign ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( n, t, parent, name, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, name, parent, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, name, parent, n, isPropAssign, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, type, parent, name, isPropAssign, n ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( parent, n, t, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal (  n, parent, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, name, parent, n ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t,  parent, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, parent, n, name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, n,  name ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( name, n, parent, t ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromLocal ( t, n, parent ) ;^321^^^^^306^336^handleSetFromLocal ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( isPropAssign, n, parent, name, t, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, type, name, isPropAssign, parent ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( type, n, parent, name, isPropAssign, t ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, isPropAssign, name, type ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleSetFromGlobal ( t, n, parent, name, type, isPropAssign ) ;^319^^^^^304^334^handleSetFromGlobal ( t, n, parent, name, isPropAssign, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( name, n, parent, t ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet (  n, parent, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, parent, n, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t,  parent, name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, n,  name ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, n, name, parent ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^handleGet ( t, n, parent ) ;^324^^^^^309^339^handleGet ( t, n, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Type  type  boolean  isPropAssign  isSet  Scope  scope  NodeTraversal  t  Node  gramps  n  parent  rvalue  String  name  Predicate  nodeFilter  
[buglab_swap_variables]^for  ( Node walker = n.getFirstChild (  ) ; walker != parent;^347^^^^^332^362^for  ( Node walker = parent.getFirstChild (  ) ; walker != n;^[CLASS] BuildGlobalNamespace  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] String  key  name  boolean  Predicate  nodeFilter  Node  gramps  greatGramps  key  lvalue  n  parent  walker  
[buglab_swap_variables]^for  ( Node parent = walker.getFirstChild (  ) ; walker != n;^347^^^^^332^362^for  ( Node walker = parent.getFirstChild (  ) ; walker != n;^[CLASS] BuildGlobalNamespace  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] String  key  name  boolean  Predicate  nodeFilter  Node  gramps  greatGramps  key  lvalue  n  parent  walker  
[buglab_swap_variables]^for  ( Node n = parent.getFirstChild (  ) ; walker != walker;^347^^^^^332^362^for  ( Node walker = parent.getFirstChild (  ) ; walker != n;^[CLASS] BuildGlobalNamespace  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] String  key  name  boolean  Predicate  nodeFilter  Node  gramps  greatGramps  key  lvalue  n  parent  walker  
[buglab_swap_variables]^Node key = parent.getChildBefore ( gramps ) ;^385^^^^^370^400^Node key = gramps.getChildBefore ( parent ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] String  key  name  boolean  Predicate  nodeFilter  Node  gramps  greatGramps  key  lvalue  n  parent  walker  
[buglab_swap_variables]^return key + '.' + name;^398^^^^^383^413^return name + '.' + key;^[CLASS] BuildGlobalNamespace  [METHOD] getNameForObjLitKey [RETURN_TYPE] String   Node n [VARIABLES] String  key  name  boolean  Predicate  nodeFilter  Node  gramps  greatGramps  key  lvalue  n  parent  walker  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( name, n, parent, t )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix (  n, parent, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, name, parent, n )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t,  parent, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, parent, n, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n,  name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, name, parent )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, parent )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( n, t, parent, name )  )  return;^448^^^^^446^465^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref set = tew Ref ( n, n, Ref.Type.SET_FROM_GLOBAL ) ;^453^^^^^446^465^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_GLOBAL ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref set = new Ref (  n, Ref.Type.SET_FROM_GLOBAL ) ;^453^^^^^446^465^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_GLOBAL ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref set = new Ref ( t,  Ref.Type.SET_FROM_GLOBAL ) ;^453^^^^^446^465^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_GLOBAL ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^} else if  ( isConstructorOrEnumDeclaration ( parent, n )  )  {^461^^^^^446^465^} else if  ( isConstructorOrEnumDeclaration ( n, parent )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^} else if  ( isConstructorOrEnumDeclaration (  parent )  )  {^461^^^^^446^465^} else if  ( isConstructorOrEnumDeclaration ( n, parent )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^} else if  ( isConstructorOrEnumDeclaration ( n )  )  {^461^^^^^446^465^} else if  ( isConstructorOrEnumDeclaration ( n, parent )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref get = tew Ref ( n, n, Ref.Type.ALIASING_GET ) ;^458^^^^^446^465^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref get = new Ref (  n, Ref.Type.ALIASING_GET ) ;^458^^^^^446^465^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref get = new Ref ( t,  Ref.Type.ALIASING_GET ) ;^458^^^^^446^465^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref.markTwins ( get, set ) ;^460^^^^^446^465^Ref.markTwins ( set, get ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref.markTwins (  get ) ;^460^^^^^446^465^Ref.markTwins ( set, get ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^Ref.markTwins ( set ) ;^460^^^^^446^465^Ref.markTwins ( set, get ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromGlobal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name boolean isPropAssign Type type [VARIABLES] Type  type  Ref  get  set  boolean  isPropAssign  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  nameObj  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( name, n, parent, t )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix (  n, parent, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, parent, n, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t,  parent, name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, name, parent )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n,  name )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, parent )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, name, parent, n )  )  return;^513^^^^^511^525^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref set = tew Ref ( n, n, Ref.Type.SET_FROM_LOCAL ) ;^516^^^^^511^525^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_LOCAL ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref set = new Ref (  n, Ref.Type.SET_FROM_LOCAL ) ;^516^^^^^511^525^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_LOCAL ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref set = new Ref ( t,  Ref.Type.SET_FROM_LOCAL ) ;^516^^^^^511^525^Ref set = new Ref ( t, n, Ref.Type.SET_FROM_LOCAL ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref get = tew Ref ( n, n, Ref.Type.ALIASING_GET ) ;^521^^^^^511^525^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref get = new Ref (  n, Ref.Type.ALIASING_GET ) ;^521^^^^^511^525^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref get = new Ref ( t,  Ref.Type.ALIASING_GET ) ;^521^^^^^511^525^Ref get = new Ref ( t, n, Ref.Type.ALIASING_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref.markTwins ( get, set ) ;^523^^^^^511^525^Ref.markTwins ( set, get ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref.markTwins (  get ) ;^523^^^^^511^525^Ref.markTwins ( set, get ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^Ref.markTwins ( set ) ;^523^^^^^511^525^Ref.markTwins ( set, get ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleSetFromLocal [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Ref  get  set  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( parent, n, t, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix (  n, parent, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, parent, n, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t,  parent, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n,  name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, name, parent, n )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( t, n, parent )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( n, t, parent, name )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( maybeHandlePrototypePrefix ( name, n, parent, t )  )  return;^537^^^^^522^552^if  ( maybeHandlePrototypePrefix ( t, n, parent, name )  )  return;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( parent != n.getFirstChild (  )  )  {^569^^^^^554^584^if  ( n != parent.getFirstChild (  )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( parent, t, name ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr (  parent, name ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, name, parent ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t,  name ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, parent ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( name, parent, t ) ;^573^^^^^558^588^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = parent == n.getFirstChild (  ) ? Ref.Type.CALL_GET : Ref.Type.ALIASING_GET;^551^552^553^^^536^566^type = n == parent.getFirstChild (  ) ? Ref.Type.CALL_GET : Ref.Type.ALIASING_GET;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = parent == n.getFirstChild (  ) ? Ref.Type.DIRECT_GET : Ref.Type.ALIASING_GET;^556^557^558^^^541^571^type = n == parent.getFirstChild (  ) ? Ref.Type.DIRECT_GET : Ref.Type.ALIASING_GET;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( name, parent, t ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr (  parent, name ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( parent, t, name ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t,  name ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, name, parent ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^type = determineGetTypeForHookOrBooleanExpr ( t, parent ) ;^566^^^^^551^581^type = determineGetTypeForHookOrBooleanExpr ( t, parent, name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( type, n, parent, name, t ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet (  n, parent, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, parent, n, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t,  parent, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( parent, n, t, name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n,  name, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, name, parent, n, type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n, parent,  type ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n, parent, type, name ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n, parent, name ) ;^582^^^^^567^597^handleGet ( t, n, parent, name, type ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name [VARIABLES] Type  type  String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( prev.getFirstChild (  )  == anc )  {^615^^^^^600^630^if  ( anc.getFirstChild (  )  == prev )  {^[CLASS] BuildGlobalNamespace  [METHOD] determineGetTypeForHookOrBooleanExpr [RETURN_TYPE] GlobalNamespace$Ref$Type   NodeTraversal t Node parent String name [VARIABLES] String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  anc  parent  prev  
[buglab_swap_variables]^if  ( prev.getFirstChild (  )  != anc )  {^630^^^^^615^645^if  ( anc.getFirstChild (  )  != prev )  {^[CLASS] BuildGlobalNamespace  [METHOD] determineGetTypeForHookOrBooleanExpr [RETURN_TYPE] GlobalNamespace$Ref$Type   NodeTraversal t Node parent String name [VARIABLES] String  name  boolean  NodeTraversal  t  Predicate  nodeFilter  Node  anc  parent  prev  
[buglab_swap_variables]^node.addRef ( new Ref ( type, n, t )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Type  type  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^node.addRef ( new Ref (  n, type )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Type  type  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^node.addRef ( tew Ref ( n, n, type )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Type  type  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^node.addRef ( new Ref ( t,  type )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Type  type  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^node.addRef ( new Ref ( t, n )  ) ;^655^^^^^650^656^node.addRef ( new Ref ( t, n, type )  ) ;^[CLASS] BuildGlobalNamespace  [METHOD] handleGet [RETURN_TYPE] void   NodeTraversal t Node n Node parent String name Type type [VARIABLES] Type  type  boolean  NodeTraversal  t  Node  n  parent  String  name  Predicate  nodeFilter  Name  node  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 1 ) ;^690^^^^^675^705^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = name.indexOf ( '.' + 1 ) ;^690^^^^^675^705^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 1 ) ;^690^^^^^677^692^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = name.indexOf ( '.' + 1 ) ;^690^^^^^677^692^i = name.indexOf ( '.', i + 1 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^prefix = i.substring ( 0, name ) ;^685^^^^^677^692^prefix = name.substring ( 0, i ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^prefix = name.substring ( 0 ) ;^685^^^^^677^692^prefix = name.substring ( 0, i ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 11 ) ;^687^^^^^677^692^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = name.indexOf ( '.' + 11 ) ;^687^^^^^677^692^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^prefix = i.substring ( 0, name ) ;^685^^^^^670^700^prefix = name.substring ( 0, i ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^prefix = name.substring ( 0 ) ;^685^^^^^670^700^prefix = name.substring ( 0, i ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = i.indexOf ( '.', name + 11 ) ;^687^^^^^672^702^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^i = name.indexOf ( '.' + 11 ) ;^687^^^^^672^702^i = name.indexOf ( '.', i + 11 ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( n != parentull && NodeUtil.isObjectLitKey ( n, parent )  )  {^694^^^^^679^709^if  ( parent != null && NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( parent != null && NodeUtil.isObjectLitKey ( n )  )  {^694^^^^^679^709^if  ( parent != null && NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^if  ( parent != null && NodeUtil.isObjectLitKey (  parent )  )  {^694^^^^^679^709^if  ( parent != null && NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^for  ( nnt i = 0; i < iumLevelsToRemove; i++ )  {^700^^^^^685^715^for  ( int i = 0; i < numLevelsToRemove; i++ )  {^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^for  ( numLevelsToRemovent i = 0; i < i; i++ )  {^700^^^^^685^715^for  ( int i = 0; i < numLevelsToRemove; i++ )  {^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^for  ( int i = 0; i < numLevelsToRemoveumLevelsToRemove; i++ )  {^700^^^^^685^715^for  ( int i = 0; i < numLevelsToRemove; i++ )  {^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( parent, n, t, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet (  n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( n, t, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t,  parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n, prefix, parent, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n,  prefix, Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^handleGet ( t, n, parent,  Ref.Type.PROTOTYPE_GET ) ;^705^^^^^690^720^handleGet ( t, n, parent, prefix, Ref.Type.PROTOTYPE_GET ) ;^[CLASS] BuildGlobalNamespace  [METHOD] maybeHandlePrototypePrefix [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent String name [VARIABLES] String  name  prefix  boolean  NodeTraversal  t  int  i  numLevelsToRemove  Predicate  nodeFilter  Node  n  parent  
[buglab_swap_variables]^Name node = nameMapMap.get ( name ) ;^730^^^^^729^744^Name node = nameMap.get ( name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^Name node = name.get ( nameMap ) ;^730^^^^^729^744^Name node = nameMap.get ( name ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = new Name ( inExterns, null, name ) ;^738^^^^^729^744^node = new Name ( name, null, inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = new Name (  null, inExterns ) ;^738^^^^^729^744^node = new Name ( name, null, inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = new Name ( name, null ) ;^738^^^^^729^744^node = new Name ( name, null, inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = inExterns.addProperty ( name.substring ( i + 1 ) , parent ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = parent.addProperty ( inExterns.substring ( i + 1 ) , name ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = i.addProperty ( name.substring ( parent + 1 ) , inExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = parent.addProperty ( name.substring ( i + 1 ) nExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = parent.addProperty ( name.substring ( inExterns + 1 ) , i ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = parent.addProperty ( name.substring ( i + 1 )  ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^String parentName = i.substring ( 0, name ) ;^734^^^^^729^744^String parentName = name.substring ( 0, i ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^String parentName = name.substring ( 0 ) ;^734^^^^^729^744^String parentName = name.substring ( 0, i ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = name.addProperty ( parent.substring ( i + 1 ) , inExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^node = parent.addProperty ( i.substring ( name + 1 ) , inExterns ) ;^736^^^^^729^744^node = parent.addProperty ( name.substring ( i + 1 ) , inExterns ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^nameMap.put ( node, name ) ;^741^^^^^729^744^nameMap.put ( name, node ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^nameMap.put (  node ) ;^741^^^^^729^744^nameMap.put ( name, node ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^nameMap.put ( name ) ;^741^^^^^729^744^nameMap.put ( name, node ) ;^[CLASS] BuildGlobalNamespace  [METHOD] getOrCreateName [RETURN_TYPE] GlobalNamespace$Name   String name [VARIABLES] String  name  parentName  boolean  int  i  Predicate  nodeFilter  Name  node  parent  
[buglab_swap_variables]^Name node = new Name ( inExterns, this, name ) ;^790^^^^^786^793^Name node = new Name ( name, this, inExterns ) ;^[CLASS] Name Type  [METHOD] addProperty [RETURN_TYPE] GlobalNamespace$Name   String name boolean inExterns [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^Name node = new Name (  this, inExterns ) ;^790^^^^^786^793^Name node = new Name ( name, this, inExterns ) ;^[CLASS] Name Type  [METHOD] addProperty [RETURN_TYPE] GlobalNamespace$Name   String name boolean inExterns [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^Name node = new Name ( name, this ) ;^790^^^^^786^793^Name node = new Name ( name, this, inExterns ) ;^[CLASS] Name Type  [METHOD] addProperty [RETURN_TYPE] GlobalNamespace$Name   String name boolean inExterns [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^if  ( declaration == ref || ( refs != null && refs.remove ( ref )  )  )  {^831^832^^^^816^846^if  ( ref == declaration || ( refs != null && refs.remove ( ref )  )  )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^if  ( ref == refs || ( declaration != null && refs.remove ( ref )  )  )  {^831^832^^^^816^846^if  ( ref == declaration || ( refs != null && refs.remove ( ref )  )  )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^if  ( declaration == ref )  {^833^^^^^818^848^if  ( ref == declaration )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^if  ( maybeNewDecl.type.type == Ref.Type.SET_FROM_GLOBAL )  {^837^^^^^822^852^if  ( maybeNewDecl.type == Ref.Type.SET_FROM_GLOBAL )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^if  ( maybeNewDecl == Ref.Type.SET_FROM_GLOBAL )  {^837^^^^^822^852^if  ( maybeNewDecl.type == Ref.Type.SET_FROM_GLOBAL )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^( refss != null && ref.remove ( ref )  )  )  {^832^^^^^817^847^( refs != null && refs.remove ( ref )  )  )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^( ref != null && refss.remove ( ref )  )  )  {^832^^^^^817^847^( refs != null && refs.remove ( ref )  )  )  {^[CLASS] Name Type  [METHOD] removeRef [RETURN_TYPE] void   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  node  parent  
[buglab_swap_variables]^if  ( n != propsull )  {^883^^^^^878^891^if  ( props != null )  {^[CLASS] Name Type  [METHOD] canEliminate [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^return !inExterns &&  ( parent || ( isClassOrEnum == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^894^895^896^^^893^897^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^[CLASS] Name Type  [METHOD] canCollapse [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^return !inExterns &&  ( isClassOrEnum || ( globalSets == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( parent > 0 || localSets > 0 )  ) ;^894^895^896^^^893^897^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^[CLASS] Name Type  [METHOD] canCollapse [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( localSets > 0 || globalSets > 0 )  ) ;^894^895^896^^^893^897^return !inExterns &&  ( isClassOrEnum || ( parent == null || parent.canCollapseUnannotatedChildNames (  )  )  && ( globalSets > 0 || localSets > 0 )  ) ;^[CLASS] Name Type  [METHOD] canCollapse [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^if  ( type == Type.OTHER || localSets != 1 || globalSets != 0 )  {^900^^^^^899^917^if  ( type == Type.OTHER || globalSets != 1 || localSets != 0 )  {^[CLASS] Name Type  [METHOD] canCollapseUnannotatedChildNames [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^return  ( aliasingGets == Type.FUNCTION || type == 0 )  && ( parent == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^915^916^^^^899^917^return  ( type == Type.FUNCTION || aliasingGets == 0 )  && ( parent == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^[CLASS] Name Type  [METHOD] canCollapseUnannotatedChildNames [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^return  ( type == Type.FUNCTION || parent == 0 )  && ( aliasingGets == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^915^916^^^^899^917^return  ( type == Type.FUNCTION || aliasingGets == 0 )  && ( parent == null || parent.canCollapseUnannotatedChildNames (  )  ) ;^[CLASS] Name Type  [METHOD] canCollapseUnannotatedChildNames [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^return localSets == 0 && globalSets > 0;^920^^^^^919^921^return globalSets == 0 && localSets > 0;^[CLASS] Name Type  [METHOD] needsToBeStubbed [RETURN_TYPE] boolean   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  n  node  parent  
[buglab_swap_variables]^ancestor = ancestor.parent.parent )  {^926^^^^^923^929^ancestor = ancestor.parent )  {^[CLASS] Name Type  [METHOD] setIsClassOrEnum [RETURN_TYPE] void   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^ancestor = ancestor )  {^926^^^^^923^929^ancestor = ancestor.parent )  {^[CLASS] Name Type  [METHOD] setIsClassOrEnum [RETURN_TYPE] void   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + totalGets + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", type=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : localSets=" + globalSets + ", globalSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", callGets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", localSets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + "=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", callGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", totalGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + "=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", aliasingGets=" + totalGets + ", totalGets=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + "=" + aliasingGets + ", callGets=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + "=" + callGets;^953^954^955^^^952^956^return fullName (  )  + "  ( " + type + " ) : globalSets=" + globalSets + ", localSets=" + localSets + ", totalGets=" + totalGets + ", aliasingGets=" + aliasingGets + ", callGets=" + callGets;^[CLASS] Name Type  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return name == null ? parent : parent.fullName (  )  + '.' + name;^959^^^^^958^960^return parent == null ? name : parent.fullName (  )  + '.' + name;^[CLASS] Name Type  [METHOD] fullName [RETURN_TYPE] String   [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return ref.node.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.getJSDocInfo (  ) ;^973^974^^^^965^979^return ref.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] Name Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Node  refParent  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^return refParent == ref.node.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^973^974^^^^965^979^return ref.node == refParent.getFirstChild (  )  ? refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] Name Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Node  refParent  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^Node ref.nodeParent = ref.getParent (  ) ;^967^^^^^965^979^Node refParent = ref.node.getParent (  ) ;^[CLASS] Name Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Node  refParent  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^refParent.getJSDocInfo (  )  : ref.node.node.getJSDocInfo (  ) ;^974^^^^^965^979^refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] Name Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Node  refParent  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^refParent.getJSDocInfo (  )  : ref.getJSDocInfo (  ) ;^974^^^^^965^979^refParent.getJSDocInfo (  )  : ref.node.getJSDocInfo (  ) ;^[CLASS] Name Type  [METHOD] getDocInfoForDeclaration [RETURN_TYPE] JSDocInfo   Ref ref [VARIABLES] Type  FUNCTION  OBJECTLIT  OTHER  type  Ref  declaration  maybeNewDecl  ref  boolean  hasClassOrEnumDescendant  inExterns  isClassOrEnum  Node  refParent  List  props  refs  String  name  JSDocInfo  docInfo  int  aliasingGets  callGets  globalSets  localSets  totalGets  Name  ancestor  n  node  parent  
[buglab_swap_variables]^this.node = original.node.node;^1025^^^^^1024^1030^this.node = original.node;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.node = original;^1025^^^^^1024^1030^this.node = original.node;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.sourceName = original.sourceName.sourceName;^1026^^^^^1024^1030^this.sourceName = original.sourceName;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.sourceName = original;^1026^^^^^1024^1030^this.sourceName = original.sourceName;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.scope = original.scope.scope;^1028^^^^^1024^1030^this.scope = original.scope;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.scope = original;^1028^^^^^1024^1030^this.scope = original.scope;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.module = original.module.module;^1029^^^^^1024^1030^this.module = original.module;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^this.module = original;^1029^^^^^1024^1030^this.module = original.module;^[CLASS] Ref Type  [METHOD] <init> [RETURN_TYPE] GlobalNamespace$Ref$Type)   Ref original Type type [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^Preconditions.checkArgument ( ( b.type == Type.ALIASING_GET || a.type == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^1048^1049^1050^1051^^1047^1054^Preconditions.checkArgument ( ( a.type == Type.ALIASING_GET || b.type == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^[CLASS] Ref Type  [METHOD] markTwins [RETURN_TYPE] void   Ref a Ref b [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  a  b  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
[buglab_swap_variables]^Preconditions.checkArgument ( ( b.type.type == Type.ALIASING_GET || a == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^1048^1049^1050^1051^^1047^1054^Preconditions.checkArgument ( ( a.type == Type.ALIASING_GET || b.type == Type.ALIASING_GET )  && ( a.type == Type.SET_FROM_GLOBAL || a.type == Type.SET_FROM_LOCAL || b.type == Type.SET_FROM_GLOBAL || b.type == Type.SET_FROM_LOCAL )  ) ;^[CLASS] Ref Type  [METHOD] markTwins [RETURN_TYPE] void   Ref a Ref b [VARIABLES] Type  ALIASING_GET  CALL_GET  DIRECT_GET  PROTOTYPE_GET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  a  b  original  twin  boolean  Scope  scope  Node  name  node  JSModule  module  String  sourceName  
