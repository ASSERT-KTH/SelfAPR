[buglab_swap_variables]^if  ( value == longValue )  {^121^^^^^109^136^if  ( longValue == value )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[buglab_swap_variables]^for  ( Node n = child.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[buglab_swap_variables]^return val.contains ( defines.getQualifiedName (  )  ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[buglab_swap_variables]^return isValidDefineValue ( defines.getFirstChild (  ) , val ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[buglab_swap_variables]^return isValidDefineValue ( val.getFirstChild (  )  ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[buglab_swap_variables]^for  ( Node block = n.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[buglab_swap_variables]^return new Node ( Token.EXPR_RESULT ) ;^326^^^^^325^327^return new Node ( Token.EXPR_RESULT, child ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newExpr [RETURN_TYPE] Node   Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  
[buglab_swap_variables]^return new Node ( Token. child ) ;^326^^^^^325^327^return new Node ( Token.EXPR_RESULT, child ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newExpr [RETURN_TYPE] Node   Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  
[buglab_swap_variables]^if  ( className.contains ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^if  ( checkForStateChangeHelper ( checkForNewObjects.getFirstChild (  ) , n )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^if  ( checkForStateChangeHelper ( n.getFirstChild (  )  )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^checkForStateChangeHelper ( checkForNewObjects.getLastChild (  ) , n )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^checkForStateChangeHelper ( n.getLastChild (  )  )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^if  ( checkForNewObjectsheckForStateChangeHelper ( c, c )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^if  ( checkForStateChangeHelper (  checkForNewObjects )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^if  ( checkForStateChangeHelper ( c )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[buglab_swap_variables]^Preconditions.checkArgument ( NEW.getType (  )  == Token.NEW, "Expected callNode node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[buglab_swap_variables]^Preconditions.checkArgument ( callNode.getType (  )  == Token. "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[buglab_swap_variables]^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.getType (  )  == Token.NAME && nameNode.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[buglab_swap_variables]^Preconditions.checkArgument ( CALL.getType (  )  == Token.CALL, "Expected callNode node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[buglab_swap_variables]^Preconditions.checkArgument ( callNode.getType (  )  == Token. "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[buglab_swap_variables]^return canBeSideEffected ( emptySet, n ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[buglab_swap_variables]^return canBeSideEffected (  emptySet ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[buglab_swap_variables]^return canBeSideEffected ( n ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[buglab_swap_variables]^if  ( knownConstantsanBeSideEffected ( c, c )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[buglab_swap_variables]^if  ( canBeSideEffected (  knownConstants )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[buglab_swap_variables]^if  ( canBeSideEffected ( c )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[buglab_swap_variables]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[buglab_swap_variables]^} else if  ( isAssign ( n )  && parent.getFirstChild (  )  == parent )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return n.getLastChild (  )  == parent;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return n.getFirstChild (  )  == parent;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return n.getFirstChild (  )  != parent;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return n.getFirstChild (  )  == parent || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return n.getLastChild (  )  == parent;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return n.getFirstChild (  )  != parent;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^if  ( parent == n.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^return child.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && parent == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[buglab_swap_variables]^if  ( isStatementBlock ( node ) || isSwitchCase ( parent ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode (  node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^} else if  ( node.getType (  )  == Token.LABEL && parent == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^throw new IllegalStateException ( "Invalid attempt to remove parent: " + node.toString (  )  + " of "+ node.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^parent.replaceChild (  new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^throw new IllegalStateException ( "Invalid attempt to remove parent: " + node.toString (  )  + " of "+ node.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^parent.replaceChild (  new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^|| isTryFinallyNode ( node, parent )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^|| isTryFinallyNode (  node )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^|| isTryFinallyNode ( parent )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[buglab_swap_variables]^parent.addChildAfter ( previous, child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[buglab_swap_variables]^parent.addChildAfter (  previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[buglab_swap_variables]^parent.addChildAfter ( child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[buglab_swap_variables]^} else if  ( block.getType (  )  == Token.LABEL && parent.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[buglab_swap_variables]^parent.replaceChild (  block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[buglab_swap_variables]^return  ( methodName.equals ( propName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[buglab_swap_variables]^return  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[buglab_swap_variables]^for  ( Node parent = current.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[buglab_swap_variables]^if  ( node == current )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[buglab_swap_variables]^return containsType ( type, node, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[buglab_swap_variables]^return containsType (  type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[buglab_swap_variables]^return containsType ( node,  Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[buglab_swap_variables]^return has ( traverseChildrenPred, new MatchNodeType ( type ) , node ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has (  new MatchNodeType ( type ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( type, new MatchNodeType ( node ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( node, new MatchNodeType ( type )  ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( node, new MatchNodeType ( traverseChildrenPred ) , type ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return containsType ( type, node, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[buglab_swap_variables]^return containsType (  type, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[buglab_swap_variables]^return containsType ( node,  Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[buglab_swap_variables]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[buglab_swap_variables]^Node var = new Node ( Token. Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[buglab_swap_variables]^copyNameAnnotations ( var, nameNode.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[buglab_swap_variables]^copyNameAnnotations (  var.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[buglab_swap_variables]^copyNameAnnotations ( nameNode.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[buglab_swap_variables]^Node parameterParen = new Node ( Token.LP, charno, lineno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node parameterParen = new Node ( Token.LP,  charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node parameterParen = new Node ( Token.LP, lineno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node parameterParen = new Node ( Token. lineno, charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^FunctionNode function = new FunctionNode ( charno, lineno, name ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^FunctionNode function = new FunctionNode (  lineno, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^FunctionNode function = new FunctionNode ( name, charno, lineno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^FunctionNode function = new FunctionNode ( name,  charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^FunctionNode function = new FunctionNode ( name, lineno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^FunctionNode function = new FunctionNode ( lineno, name, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^function.addChildrenToBack ( Node.newString ( Token.NAME,  lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, charno, lineno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^function.addChildrenToBack ( Node.newString ( Token.NAME, name,  charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node.newString ( Token.NAME, charno, lineno, name )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node.newString ( Token.NAME,  lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node.newString ( Token.NAME, name, charno, lineno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node.newString ( Token.NAME, name,  charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^Node.newString ( Token.NAME, name, lineno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[buglab_swap_variables]^return Node.newString ( Token.NAME, lineno, name, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^return Node.newString ( Token.NAME,  lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^return Node.newString ( Token.NAME, name,  charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^return Node.newString ( Token.NAME, charno, lineno, name ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^return Node.newString ( Token.NAME, name, lineno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^return Node.newString ( Token.NAME, name, charno, lineno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, lineno.substring ( 0, endPos ) , name, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, name.substring ( 0, charno ) , lineno, endPos ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, name.substring ( 0 ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, name.substring ( 0, lineno ) , endPos, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) ,  charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node node = Node.newString ( Token.NAME, endPos.substring ( 0, name ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^endPos = startPos.indexOf ( '.', name ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^endPos = name.indexOf ( '.' ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP, lineno, Node.newString ( Token.STRING, part, node, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP,  Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, lineno, part, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING,  lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part,  charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, charno, lineno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^node = new Node ( Token. node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^String part =  ( startPos == -1 ? name.substring ( endPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^String part =  ( name == -1 ? endPos.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^String part =  ( endPos == -1 ? startPos.substring ( name ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring (  endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^? startPos.substring ( name ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^? name.substring ( startPos ) : name.substring (  endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^: startPos.substring ( name, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^: name.substring ( endPos, startPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^: name.substring (  endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^: name.substring ( startPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node.newString ( Token.STRING, charno, lineno, part ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node.newString ( Token.STRING,  lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node.newString ( Token.STRING, part, charno, lineno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node.newString ( Token.STRING, part,  charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^Node.newString ( Token.STRING, part, lineno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[buglab_swap_variables]^setDebugInformation ( basisNode, node, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[buglab_swap_variables]^setDebugInformation (  basisNode, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[buglab_swap_variables]^setDebugInformation ( node,  originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[buglab_swap_variables]^setDebugInformation ( node, originalName, basisNode ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[buglab_swap_variables]^setDebugInformation ( node, basisNode ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[buglab_swap_variables]^node.putProp ( Node.ORIGINALNAME_PROP ) ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[buglab_swap_variables]^Node basisNodeNode = newName ( name, name ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[buglab_swap_variables]^Node nameNode = newName (  basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[buglab_swap_variables]^Node nameNode = newName ( name ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[buglab_swap_variables]^nameNode.putProp ( Node.ORIGINALNAME_PROP ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[buglab_swap_variables]^if  ( LARGEST_BASIC_LATIN > c )  {^1609^^^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^for  ( int len = 0; index < index; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^char c = index.charAt ( s ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^if  ( n != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^if  ( !vars.containsKey ( n )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^if  ( !vars.containsKey ( nameame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^vars.put ( n, name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^vars.put (  n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^vars.put ( name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^vars.put ( nameame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[buglab_swap_variables]^visitPreOrder ( collector, root, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^visitPreOrder (  collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^visitPreOrder ( root,  Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^return collector.vars.vars.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^return collector.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[buglab_swap_variables]^return memberIndex.substring ( qNameStr ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[buglab_swap_variables]^Node var = new Node ( Token.VAR ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[buglab_swap_variables]^Node var = new Node ( Token. nodeName ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[buglab_swap_variables]^return name.getType (  )  == Token.NAME && n.getString (  ) .equals ( n ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[buglab_swap_variables]^&& name.getString (  ) .equals ( n ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[buglab_swap_variables]^return type.getType (  )  == n;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[buglab_swap_variables]^return isNodeTypeReferenced ( type, node, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return isNodeTypeReferenced (  type, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return isNodeTypeReferenced ( node,  Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return has ( type, new MatchNodeType ( node ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has (  new MatchNodeType ( type ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( node, new MatchNodeType ( traverseChildrenPred ) , type ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( node, new MatchNodeType ( type )  ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( traverseChildrenPred, new MatchNodeType ( type ) , node ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return getCount ( type, new MatchNodeType ( node )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return getCount (  new MatchNodeType ( type )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return has ( traverseChildrenPred, new MatchNameNode ( name ) , node ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has (  new MatchNameNode ( name ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( node, new MatchNameNode ( traverseChildrenPred ) , name ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( node, new MatchNameNode ( name )  ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return has ( name, new MatchNameNode ( node ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^return isNameReferenced ( name, node, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return isNameReferenced (  name, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return isNameReferenced ( node,  Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return getCount ( name, new MatchNameNode ( node )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^return getCount (  new MatchNameNode ( name )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[buglab_swap_variables]^if  ( node.apply ( pred )  )  {^1809^^^^^1806^1824^if  ( pred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( has ( pred, c, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( has (  pred, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( has ( c,  traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( has ( c, traverseChildrenPred, pred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( has ( c, pred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( has ( traverseChildrenPred, pred, c )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[buglab_swap_variables]^if  ( n.apply ( pred )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[buglab_swap_variables]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[buglab_swap_variables]^total += getCount ( pred, c ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[buglab_swap_variables]^total += getCount (  pred ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[buglab_swap_variables]^total += getCount ( c ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[buglab_swap_variables]^if  ( node.apply ( traverseChildrenPred )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPreOrder ( traverseChildrenPred, vistor, c ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPreOrder (  vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPreOrder ( c, traverseChildrenPred, vistor ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPreOrder ( c,  traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPreOrder ( c, vistor ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPreOrder ( vistor, c, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPostOrder ( traverseChildrenPred, vistor, c ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPostOrder (  vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPostOrder ( vistor, c, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPostOrder ( c,  traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPostOrder ( c, vistor ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^visitPostOrder ( c, traverseChildrenPred, vistor ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^if  ( node.apply ( traverseChildrenPred )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[buglab_swap_variables]^while  ( n == sourceNameull && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[buglab_swap_variables]^if  ( n != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^if  ( !vars.containsKey ( nameame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^vars.put ( n, name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^vars.put (  n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^vars.put ( nameame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^vars.put ( name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^if  ( !vars.containsKey ( n )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[buglab_swap_variables]^return name.getType (  )  == Token.NAME && n.getString (  ) .equals ( n ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[buglab_swap_variables]^&& name.getString (  ) .equals ( n ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[buglab_swap_variables]^return type.getType (  )  == n;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
