[BugLab_Variable_Misuse]^this.name = CONSTANT_MARKER;^1734^^^^^1733^1735^this.name = name;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[BugLab_Variable_Misuse]^if  ( "undefined".equals ( CONSTANT_MARKER ) || "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^if  ( "undefined".equals ( name ) && "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^} else if  ( "Infinity".equals ( CONSTANT_MARKER )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^90^^^^^75^105^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^88^^^^^84^91^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getString (  ) .length (  )  >= 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return n.getString (  ) .length (  )  > type;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getDouble (  )  == 0;^75^^^^^60^90^return n.getDouble (  )  != 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return n.getDouble (  )  != type;^75^^^^^60^90^return n.getDouble (  )  != 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^80^^^^^65^95^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^88^^^^^73^103^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^98^^^^^83^113^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^|| "NaN".equals ( CONSTANT_MARKER )  )  {^85^^^^^70^100^|| "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Argument_Swapping]^if  ( value == longValue )  {^121^^^^^109^136^if  ( longValue == value )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[BugLab_Wrong_Operator]^if  ( longValue != value )  {^121^^^^^109^136^if  ( longValue == value )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[BugLab_Variable_Misuse]^String parentame = n.getFirstChild (  ) .getString (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getString (  ) ;^160^^^^^154^171^return parent.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getFirstChild (  ) .getQualifiedName (  ) ;^165^^^^^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return CONSTANT_MARKER != null && name.length (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return name != null || name.length (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return name == null && name.length (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return name != null && name.length (  )  == 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^switch  ( n.getType (  )  )  {^156^^^^^154^171^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^184^^^^^176^197^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^return "undefined".equals ( CONSTANT_MARKER ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return "undefined".equals ( name ) && "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^196^^^^^176^197^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^if  ( !isLiteralValue ( n )  )  {^214^^^^^205^223^if  ( !isLiteralValue ( child )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Wrong_Literal]^return true;^215^^^^^205^223^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Variable_Misuse]^for  ( Node n = n.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Argument_Swapping]^for  ( Node n = child.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Wrong_Operator]^for  ( Node child = n.getFirstChild (  ) ; child == null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Variable_Misuse]^child = n.getNext (  )  )  {^213^^^^^205^223^child = child.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Wrong_Literal]^return false;^218^^^^^205^223^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Variable_Misuse]^switch  ( child.getType (  )  )  {^207^^^^^205^223^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Variable_Misuse]^for  ( Node child = child.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Variable_Misuse]^return isImmutableValue ( child ) ;^221^^^^^205^223^return isImmutableValue ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[BugLab_Variable_Misuse]^return 4.contains ( val.getQualifiedName (  )  ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[BugLab_Argument_Swapping]^return val.contains ( defines.getQualifiedName (  )  ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[BugLab_Wrong_Literal]^return false;^237^^^^^231^256^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[BugLab_Argument_Swapping]^return isValidDefineValue ( defines.getFirstChild (  ) , val ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[BugLab_Wrong_Literal]^return true;^255^^^^^231^256^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  != Token.BLOCK )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Operator]^if  ( block.getType (  )  == Token.BLOCK )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Literal]^return true;^265^^^^^263^274^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Variable_Misuse]^if  ( block.getType (  )  != Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Literal]^return true;^270^^^^^263^274^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Variable_Misuse]^for  ( Node block = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Operator]^for  ( Node n = block.getFirstChild (  ) ; n == null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  == Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Variable_Misuse]^for  ( Node n = n.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Literal]^return false;^273^^^^^263^274^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[BugLab_Wrong_Literal]^return false;^312^^^^^297^327^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleOperatorType [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^return true;^315^^^^^300^330^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleOperatorType [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^return checkForStateChangeHelper ( n, false ) ;^336^^^^^335^337^return checkForStateChangeHelper ( n, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayEffectMutableState [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return checkForStateChangeHelper ( n, true ) ;^343^^^^^342^344^return checkForStateChangeHelper ( n, false ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^385^^^^^370^400^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( current.getFirstChild (  )  != null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^if  ( n.getFirstChild (  )  == null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^if  ( n.getFirstChild (  )  != null ) return false;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^392^^^^^377^407^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^407^^^^^392^422^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( current.isNoSideEffectsCall (  )  )  {^412^^^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( Token.NAME == n.getType (  )  )  {^418^^^^^403^433^if  ( Token.NAME == constructor.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^if  ( Token.NAME >= constructor.getType (  )  )  {^418^^^^^403^433^if  ( Token.NAME == constructor.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( name )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Argument_Swapping]^if  ( className.contains ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^String className = n.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( this.contains ( className )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( current.isNoSideEffectsCall (  )  )  {^435^^^^^420^450^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( isSimpleOperatorType ( current.getType (  )  )  ) break;^443^444^^^^428^458^if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( isAssignmentOp ( constructor )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( checkForStateChangeHelper ( current.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Argument_Swapping]^if  ( checkForStateChangeHelper ( checkForNewObjects.getFirstChild (  ) , n )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  && checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^455^^^^^451^456^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^current = n.getFirstChild (  )  )  { }^462^^^^^447^477^current = current.getFirstChild (  )  )  { }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^455^^^^^440^470^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^return ! ( isLiteralValue ( n )  || current.getType (  )  == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^return ! ( isLiteralValue ( current )  && current.getType (  )  == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^return ! ( isLiteralValue ( current )  || current.getType (  )  > Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^Node current = constructor.getFirstChild (  ) ;^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^checkForStateChangeHelper ( current.getLastChild (  ) , checkForNewObjects )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Argument_Swapping]^checkForStateChangeHelper ( checkForNewObjects.getLastChild (  ) , n )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^Node current = current.getFirstChild (  ) ;^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^current.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^460^461^^^^445^475^current.getType (  )  == Token.GETPROP || current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^379^^^^^364^394^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^return !isFunctionAnonymous ( current ) ;^402^^^^^387^417^return !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^430^^^^^415^445^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^440^^^^^425^455^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^return ! ( isLiteralValue ( current )  || current.getType (  )  != Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^468^^^^^453^483^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^Node constructor = current.getFirstChild (  ) ;^417^^^^^402^432^Node constructor = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^switch  ( current.getType (  )  )  {^356^^^^^341^371^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( isAssignmentOp ( current )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^if  ( nheckForStateChangeHelper ( c, checkForNewObjects )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Argument_Swapping]^if  ( checkForNewObjectsheckForStateChangeHelper ( c, c )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return false;^473^^^^^458^488^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^for  ( Node c = current.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Argument_Swapping]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Wrong_Literal]^return true;^477^^^^^462^492^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( nameNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Argument_Swapping]^Preconditions.checkArgument ( NEW.getType (  )  == Token.NEW, "Expected callNode node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( callNode.getType (  )  < Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( callNode.getType (  ^  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( nameNode.getType (  )  )  ) ;^487^488^^^^485^501^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^"Expected NEW node, got " + Token.name ( nameNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^490^^^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return true;^491^^^^^485^501^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^Node nameNode = nameNode.getFirstChild (  ) ;^494^^^^^485^501^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( callNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( nameNode.getType (  )  == Token.null && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^if  ( nameNode.getType (  )  == Token.NAME || CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^if  ( nameNode.getType (  )  < Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return true;^497^^^^^485^501^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( callNode.getString (  )  )  )  {^496^^^^^485^501^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return false;^500^^^^^485^501^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( nameNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Argument_Swapping]^Preconditions.checkArgument ( CALL.getType (  )  == Token.CALL, "Expected callNode node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( callNode.getType (  )  != Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( callNode.getType (  !=  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^"Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^513^^^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return true;^514^^^^^508^537^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^Node nameNode = nameNode.getFirstChild (  ) ;^517^^^^^508^537^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( callNode.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( namespaceNameNode.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Argument_Swapping]^if  ( nameNodeNode.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^if  ( nameNode.getType (  )  >= Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( namespaceName.equals ( "String" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return true;^523^^^^^508^537^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^String name = callNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( callNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^if  ( nameNode.getType (  )  == Token.GETPROP || nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^if  ( nameNode.getType (  )  > Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Operator]^if  ( nameNode.getType (  )  != Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return true;^532^^^^^528^534^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^String namespaceName = callNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( name.equals ( "Math" )  )  {^531^^^^^528^534^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^if  ( name.equals ( "Math" )  )  {^531^^^^^508^537^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return true;^532^^^^^508^537^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Variable_Misuse]^String namespaceName = callNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return false;^536^^^^^508^537^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[BugLab_Wrong_Literal]^return false;^548^^^^^546^565^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^558^^^^^546^565^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^563^^^^^546^565^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Argument_Swapping]^return canBeSideEffected ( emptySet, n ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^589^^^^^582^608^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^return !NodeUtil.isConstantName ( c ) && !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Wrong_Operator]^return !NodeUtil.isConstantName ( n ) || !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Wrong_Literal]^return false;^598^^^^^582^608^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^switch  ( c.getType (  )  )  {^583^^^^^582^608^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^&& !knownConstants.contains ( c.getString (  )  ) ;^593^^^^^582^608^&& !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^if  ( nanBeSideEffected ( c, knownConstants )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^if  ( canBeSideEffected ( c, 1 )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Argument_Swapping]^if  ( knownConstantsanBeSideEffected ( c, c )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Wrong_Literal]^return false;^603^^^^^582^608^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Argument_Swapping]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Wrong_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Variable_Misuse]^if  ( canBeSideEffected ( c, null )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Wrong_Literal]^return true;^607^^^^^582^608^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[BugLab_Wrong_Literal]^case Token.COMMA:  return ;^629^^^^^614^644^case Token.COMMA:  return 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.OR:     return type;^643^^^^^628^658^case Token.OR:     return 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.AND:    return 3;^644^^^^^629^659^case Token.AND:    return 4;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.BITOR:  return type;^645^^^^^630^660^case Token.BITOR:  return 5;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.BITXOR: return 5;^646^^^^^631^661^case Token.BITXOR: return 6;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.BITAND: return ;^647^^^^^632^662^case Token.BITAND: return 7;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.SHNE:   return type;^651^^^^^636^666^case Token.SHNE:   return 8;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.IN:     return type;^657^^^^^642^672^case Token.IN:     return 9;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.URSH:   return 9;^660^^^^^645^675^case Token.URSH:   return 10;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^case Token.ADD:    return 12;^662^^^^^647^677^case Token.ADD:    return 11;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^return 16;^696^^^^^681^711^return 15;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  &  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  >=  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  ==  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  ||  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  <  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  <=  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  &&  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^return false;^717^^^^^710^721^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssociative [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^return true;^719^^^^^710^721^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssociative [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[BugLab_Wrong_Literal]^return false;^737^^^^^723^740^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssignmentOp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^739^^^^^723^740^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssignmentOp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.EXPR_RESULT;^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.3 || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.GETPROP && n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.GETPROP || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  <= Token.GETPROP || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  <= Token.GETPROP;^800^^^^^799^801^return n.getType (  )  == Token.GETPROP;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGetProp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  >= Token.NAME;^807^^^^^806^808^return n.getType (  )  == Token.NAME;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.NEW;^814^^^^^813^815^return n.getType (  )  == Token.NEW;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNew [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  >= Token.VAR;^821^^^^^820^822^return n.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVar [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.null && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.NAME || n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  >= Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^Preconditions.checkState ( isName ( parent )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^842^^^^^840^850^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^} else if  ( isAssign ( n )  && parent.getFirstChild (  )  == parent )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( isAssign ( parent )  || parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  >= n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return parent.getNext (  ) ;^846^^^^^840^850^return n.getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( isAssign ( n )  && parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return parent.getFirstChild (  ) ;^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  != n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.STRING;^856^^^^^855^857^return n.getType (  )  == Token.STRING;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isString [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.EXPR_RESULT || n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.ASSIGN;^875^^^^^874^876^return n.getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.EXPR_RESULT || n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  >= Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.2 && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.FOR || n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  <= Token.FOR && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.FOR && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == type;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^906^^^^^901^910^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLoopStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^908^^^^^901^910^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLoopStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return false;^945^^^^^932^949^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Literal]^return true;^947^^^^^932^949^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Argument_Swapping]^return n.getLastChild (  )  == parent;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getLastChild (  )  > n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^return n.getFirstChild (  )  == parent;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getFirstChild (  )  != n;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^return n.getFirstChild (  )  != parent;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getFirstChild (  )  >= n;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^return n.getFirstChild (  )  == parent || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getFirstChild (  )  == n && parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getFirstChild (  )  <= n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getFirstChild (  )  >= n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^return n.getLastChild (  )  == parent;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getLastChild (  )  >= n;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^return n.getFirstChild (  )  != parent;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return parent.getFirstChild (  )  >= n;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^974^^^^^955^979^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return true;^977^^^^^955^979^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^switch  ( n.getType (  )  )  {^956^^^^^955^979^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getLastChild (  )  == n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getFirstChild (  )  == n;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getFirstChild (  )  != n;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getLastChild (  )  == n;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getFirstChild (  )  != n;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^Preconditions.checkState ( isControlStructure ( n )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.null || n.getType (  )  == Token.BLOCK;^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.SCRIPT && n.getType (  )  == Token.BLOCK;^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.SCRIPT || n.getType (  )  == Token.BLOCK;^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^1018^^^^^1017^1032^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^Preconditions.checkState ( n != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent == null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^1028^^^^^1017^1032^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return true;^1030^^^^^1017^1032^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^switch  ( n.getType (  )  )  {^1024^^^^^1017^1032^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.CASE && n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  < Token.CASE || n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.CASE || n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^if  ( n != null || n.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n == null && n.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n != null && n.getType (  )  != Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( parent == n.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n != parent.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^1048^^^^^1040^1053^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^1042^^^^^1040^1053^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^switch  ( n.getType (  )  )  {^1043^^^^^1040^1053^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n >= parent.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( n == n.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Literal]^return true;^1052^^^^^1040^1053^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && parent == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Argument_Swapping]^return child.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && parent == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Wrong_Operator]^return parent.getType (  )  == Token.TRY || parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Wrong_Operator]^return parent.getType (  )  <= Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Wrong_Operator]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  != 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Wrong_Operator]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child > parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Wrong_Literal]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == type && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Variable_Misuse]^return child.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Variable_Misuse]^&& child == child.getLastChild (  ) ;^1058^^^^^1056^1059^&& child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[BugLab_Wrong_Operator]^if  ( isStatementBlock ( parent ) && isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  != Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  < Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  <= Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  > Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  != Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  <= Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  >= Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Argument_Swapping]^} else if  ( node.getType (  )  == Token.LABEL && parent == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.LABEL || node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  >= Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.LABEL && node <= parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  < Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^} else if  ( node.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  != Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == type )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Invalid attempt to remove parent: " + node.toString (  )  + " of "+ node.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  |  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  !=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &&  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <<  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^node.toString (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1088^1097^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( node, new Node ( Token.this )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Invalid attempt to remove parent: " + node.toString (  )  + " of "+ node.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ^  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ==  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >>  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &&  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^&& node.getChildCount (  )  == 4 )  {^1089^^^^^1074^1104^&& parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^removeChild ( node.getParent (  ) , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  >= 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  !=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <<  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (   instanceof   )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "   instanceof   node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^} else if  ( node.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^&& node == node.getLastChild (  )  )  {^1083^^^^^1068^1098^&& node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^removeChild ( node.getParent (  ) , parent ) ;^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^node.toString (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1081^1111^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  != Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.LABEL && node >= parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  <= Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  <= 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ^  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >>  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ==  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ^  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  >= Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  > 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  ==  )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (   instanceof   )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ==  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <<  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^removeChild ( node.getParent (  ) , parent ) ;^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^if  ( node.hasMoreThanOneChild (  )  )  {^1070^^^^^1055^1085^if  ( parent.hasMoreThanOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^removeChild ( node.getParent (  ) , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  < Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  > Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.LABEL && node != parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  > Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  > Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ||  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  |  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  |  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ||  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >>  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  !=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  <= Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  != 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  |  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  !=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <<  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^} else if  ( node.getType (  )  == Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  >= Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >>  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ==  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  < Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 5 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.LABEL && parent == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ||  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "   instanceof   node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( node, new Node ( Token.1 )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &&  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^if  ( isStatementBlock ( node ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^|| isSwitchCase ( parent ) || isTryFinallyNode ( parent, node )  )  {^1065^1066^^^^1050^1080^|| isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Argument_Swapping]^|| isTryFinallyNode ( node, parent )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[BugLab_Variable_Misuse]^Preconditions.checkState ( previous.getType (  )  == Token.BLOCK ) ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Operator]^Preconditions.checkState ( block.getType (  )  != Token.BLOCK ) ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^Node parent = previous.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^while  ( previous.hasChildren (  )  )  {^1111^^^^^1104^1124^while  ( block.hasChildren (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^previous = previous;^1114^^^^^1104^1124^previous = child;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^Node child = previous.removeFirstChild (  ) ;^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^parent.addChildAfter ( previous, previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^parent.addChildAfter ( child, child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Argument_Swapping]^parent.addChildAfter ( previous, child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isStatementBlock ( child )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^} else if  ( previous.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.LABEL && previous.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Argument_Swapping]^} else if  ( block.getType (  )  == Token.LABEL && parent.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  == Token.LABEL || block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  >= Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Literal]^return true;^1122^^^^^1104^1124^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Literal]^return false;^1120^^^^^1104^1124^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^parent.replaceChild ( previous, block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^parent.addChildAfter ( parent, previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Literal]^return false;^1117^^^^^1104^1124^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^Node previous = parent;^1110^^^^^1104^1124^Node previous = block;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^parent.removeChild ( previous ) ;^1116^^^^^1104^1124^parent.removeChild ( block ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  <= Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isStatementBlock ( previous )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Variable_Misuse]^parent.addChildAfter ( child, parent ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[BugLab_Wrong_Operator]^return n.getType (  )  <= Token.CALL;^1130^^^^^1129^1131^return n.getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.FUNCTION;^1137^^^^^1136^1138^return n.getType (  )  == Token.FUNCTION;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return node.getType (  )  > Token.THIS;^1152^^^^^1151^1153^return node.getType (  )  == Token.THIS;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isThis [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.FUNCTION || !isFunctionAnonymous ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.FUNCTION && !isFunctionAnonymous ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return NodeUtil.isFunctionDeclaration ( n ) ||  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT && n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  >= Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  != Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.FUNCTION || isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  < Token.FUNCTION && isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[BugLab_Variable_Misuse]^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.3 )  )  ) ;^1228^^^^^1223^1229^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[BugLab_Variable_Misuse]^if  ( last.getType (  )  == Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Wrong_Operator]^if  ( callNode.getType (  )  != Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isGet ( callNode )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^if  ( functionIndentifyingExpression != null && last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Wrong_Operator]^if  ( last != null || last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Wrong_Operator]^if  ( last == null && last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Wrong_Operator]^if  ( last != null && last.getType (  )  != Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^return  ( namespaceName.equals ( methodName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^return  ( propName.equals ( namespaceName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Argument_Swapping]^return  ( methodName.equals ( propName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^String propName = functionIndentifyingExpression.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^Node last = last.getLastChild (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^Node functionIndentifyingExpression = last.getFirstChild (  ) ;^1238^^^^^1236^1248^Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^Node last = callNode.getLastChild (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isGet ( last )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Wrong_Literal]^return true;^1247^^^^^1236^1248^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[BugLab_Wrong_Operator]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  != Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[BugLab_Wrong_Literal]^return false;^1278^^^^^1275^1283^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[BugLab_Wrong_Operator]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  > Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[BugLab_Wrong_Literal]^return true;^1282^^^^^1275^1283^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[BugLab_Argument_Swapping]^return  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Wrong_Operator]^return  ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( node.getType (  )  == Token.STRING || parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( node.getType (  )  != Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( node.getType (  )  <= Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^if  ( parent == node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^if  ( current == parent )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Argument_Swapping]^if  ( node == current )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( current > node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( current != node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^return type % 2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index % 2 != 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index   instanceof   2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % index == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^for  ( Node current = node.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Argument_Swapping]^for  ( Node parent = current.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % 3 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % 2 == -1;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index % 2 >= 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index  &  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % 2 == index;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^current = parent.getNext (  )  )  {^1311^^^^^1306^1319^current = current.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index % 2 <= 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index  ^  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % 1 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^int index = index;^1308^^^^^1306^1319^int index = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( current >= node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^if  ( current <= node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % 2 == 1;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^for  ( Node parent = parent.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index  >>  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index % 2 < 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Operator]^return index  &&  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index % type == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return index %  == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^if  ( node.getType (  )  == Token.STRING && node.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Wrong_Literal]^return true;^1318^^^^^1306^1319^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[BugLab_Variable_Misuse]^String res = opToStr ( type ) ;^1385^^^^^1384^1391^String res = opToStr ( operator ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^if  ( namespaceName == null )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^if  ( res != null )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  >  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  !=  operator  !=  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  &&  operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ==  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  ==  operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^Token.name ( type )  ) ;^1388^^^^^1384^1391^Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^throw new Error ( "Unknown op " + type + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  |  operator  |  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  <<  operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  &&  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  <<  operator  <<  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Wrong_Operator]^throw new Error ( "Unknown op "  ||  operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^return propName;^1390^^^^^1384^1391^return res;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^return containsType ( node, operator, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[BugLab_Argument_Swapping]^return containsType ( type, node, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[BugLab_Variable_Misuse]^return has ( node, new MatchNodeType ( operator ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( traverseChildrenPred, new MatchNodeType ( type ) , node ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( type, new MatchNodeType ( node ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( node, new MatchNodeType ( traverseChildrenPred ) , type ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^return containsType ( node, operator, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[BugLab_Argument_Swapping]^return containsType ( type, node, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[BugLab_Variable_Misuse]^Collection<Node> vars = getVarsDeclaredInBranch ( var ) ;^1425^^^^^1424^1437^Collection<Node> vars = getVarsDeclaredInBranch ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^Node parent = getAddingRoot ( var ) ;^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, var.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, parent.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^Token.VAR, Node.newString ( Token.NAME, var.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^copyNameAnnotations ( parent, var.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^copyNameAnnotations ( nameNode, parent.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Argument_Swapping]^copyNameAnnotations ( var, nameNode.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Variable_Misuse]^parent.addChildToFront ( nameNode ) ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[BugLab_Wrong_Literal]^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[BugLab_Variable_Misuse]^if  ( destination.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^1445^^^^^1444^1448^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[BugLab_Variable_Misuse]^Node ancestor = addingRoot;^1456^^^^^1454^1474^Node ancestor = n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^while  ( null !=  ( n = ancestor.getParent (  )  )  )  {^1457^^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^while  ( null ==  ( ancestor = ancestor.getParent (  )  )  )  {^1457^^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^if  ( operator == Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^if  ( type >= Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^if  ( type != Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^} else if  ( operator == Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^} else if  ( type != Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^addingRoot = n.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^addingRoot = n;^1460^^^^^1454^1474^addingRoot = ancestor;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^} else if  ( type <= Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^int type = n.getType (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^if  ( type <= Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^Preconditions.checkState ( n.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK && addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^Preconditions.checkState ( addingRoot.getType (  )  != Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^Preconditions.checkState ( addingRoot.getType (  )  >= Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^Preconditions.checkState ( n.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null && addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^Preconditions.checkState ( addingRoot.getFirstChild (  )  != null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Wrong_Operator]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  == Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^return n;^1473^^^^^1454^1474^return addingRoot;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[BugLab_Variable_Misuse]^Node parameterParen = new Node ( Token.LP, type, charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^Node parameterParen = new Node ( Token.LP, lineno, operator ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^Node parameterParen = new Node ( Token.LP, charno, lineno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^Node parameterParen = new Node ( Token.LP, operator, charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^Node parameterParen = new Node ( Token.LP, lineno, type ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^FunctionNode function = new FunctionNode ( res, lineno, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^FunctionNode function = new FunctionNode ( name, type, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^FunctionNode function = new FunctionNode ( name, lineno, type ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^FunctionNode function = new FunctionNode ( charno, lineno, name ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^FunctionNode function = new FunctionNode ( lineno, name, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^FunctionNode function = new FunctionNode ( name, charno, lineno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^FunctionNode function = new FunctionNode ( namespaceName, lineno, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^function.addChildrenToBack ( Node.newString ( Token.NAME, res, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, type, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, type )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^function.addChildrenToBack ( Node.newString ( Token.NAME, lineno, name, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, charno, lineno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, namespaceName, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, name, type, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^Node.newString ( Token.NAME, charno, lineno, name )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^Node.newString ( Token.NAME, lineno, name, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Argument_Swapping]^Node.newString ( Token.NAME, name, charno, lineno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^function.addChildToBack ( parameterParen ) ;^1487^^^^^1477^1489^function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[BugLab_Variable_Misuse]^int endPos = propName.indexOf ( '.' ) ;^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^if  ( type == -1 )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Wrong_Operator]^if  ( endPos != -1 )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Wrong_Literal]^if  ( endPos == -lineno )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return Node.newString ( Token.NAME, res, lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return Node.newString ( Token.NAME, charno, lineno, name ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return Node.newString ( Token.NAME, name, charno, lineno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return Node.newString ( Token.NAME, propName, lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return Node.newString ( Token.NAME, name, type, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return Node.newString ( Token.NAME, name, lineno, type ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return Node.newString ( Token.NAME, part, lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return Node.newString ( Token.NAME, lineno, name, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, part.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, name.substring ( 0, operator ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , operator, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node node = Node.newString ( Token.NAME, endPos.substring ( 0, name ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , charno, lineno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, res.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, name.substring ( 0, type ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , type, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, type ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node node = Node.newString ( Token.NAME, charno.substring ( 0, endPos ) , lineno, name ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node node = Node.newString ( Token.NAME, name.substring ( 0, charno ) , lineno, endPos ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node node = Node.newString ( Token.NAME, lineno.substring ( 0, endPos ) , name, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Wrong_Literal]^Node node = Node.newString ( Token.NAME, name.substring ( endPos, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^startPos = operator + 1;^1508^^^^^1499^1519^startPos = endPos + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Wrong_Literal]^startPos = endPos + endPos;^1508^^^^^1499^1519^startPos = endPos + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^endPos = res.indexOf ( '.', startPos ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^endPos = name.indexOf ( '.', operator ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^endPos = startPos.indexOf ( '.', name ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, res, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, type, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, startPos ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^node = new Node ( Token.GETPROP, lineno, Node.newString ( Token.STRING, part, node, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, lineno, part, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^node = new Node ( Token.GETPROP, charno, Node.newString ( Token.STRING, part, lineno, node ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, namespaceName, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, type ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, charno, lineno, part ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^String part =  ( endPos == -1 ? propName.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^String part =  ( name == -1 ? endPos.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^String part =  ( endPos == -1 ? startPos.substring ( name ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Wrong_Operator]^String part =  ( endPos <= -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^endPos = part.indexOf ( '.', startPos ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^endPos = name.indexOf ( '.', type ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^? res.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^? name.substring ( type ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^? startPos.substring ( name ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^: name.substring ( type, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^: name.substring ( startPos, type )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^: endPos.substring ( startPos, name )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^: name.substring ( endPos, startPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node.newString ( Token.STRING, res, lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node.newString ( Token.STRING, part, type, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node.newString ( Token.STRING, part, lineno, startPos ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node.newString ( Token.STRING, lineno, part, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node.newString ( Token.STRING, part, charno, lineno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Argument_Swapping]^Node.newString ( Token.STRING, charno, lineno, part ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[BugLab_Variable_Misuse]^Node node = newQualifiedNameNode ( propName, -1, -1 ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[BugLab_Variable_Misuse]^Node node = newQualifiedNameNode ( part, -1, -1 ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[BugLab_Variable_Misuse]^setDebugInformation ( node, basisNode, part ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[BugLab_Argument_Swapping]^setDebugInformation ( basisNode, node, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[BugLab_Argument_Swapping]^setDebugInformation ( node, originalName, basisNode ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[BugLab_Variable_Misuse]^return basisNode;^1538^^^^^1534^1539^return node;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[BugLab_Variable_Misuse]^Node resNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^Node propNameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^return basisNode;^1568^^^^^1565^1569^return nameNode;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^Node resNode = newName ( name, basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Argument_Swapping]^Node basisNodeNode = newName ( name, name ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^Node partNode = newName ( name, basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^Node nameNode = newName ( name, nameNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^nameNode.putProp ( Node.ORIGINALNAME_PROP, namespaceName ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^return basisNode;^1587^^^^^1584^1588^return nameNode;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[BugLab_Variable_Misuse]^int len = part.length (  ) ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^int len = propName.length (  ) ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Argument_Swapping]^if  ( LARGEST_BASIC_LATIN > c )  {^1609^^^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Operator]^if  ( c >= LARGEST_BASIC_LATIN )  {^1609^^^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Literal]^return true;^1610^^^^^1604^1614^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^for  ( int startPos = 0; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^for  ( int index = 0; index < type; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Argument_Swapping]^for  ( int len = 0; index < index; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Operator]^for  ( int index = 0; index <= len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Literal]^for  ( int index = charno; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^char c = originalName.charAt ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^char c = s.charAt ( startPos ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Argument_Swapping]^char c = index.charAt ( s ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^char c = res.charAt ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^char c = s.charAt ( type ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Literal]^for  ( int index = operator; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Literal]^return false;^1613^^^^^1604^1614^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^return TokenStream.isJSIdentifier ( part )  && !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Operator]^return TokenStream.isJSIdentifier ( name )  || !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^return TokenStream.isJSIdentifier ( propName )  && !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^!TokenStream.isKeyword ( part )  &&^1622^1623^1624^1625^^1620^1630^!TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Variable_Misuse]^NodeUtil.isLatin ( part ) ;^1629^^^^^1620^1630^NodeUtil.isLatin ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( n != null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( n != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent != null || parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent == null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent != null && parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !vars.containsKey ( parentame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^vars.put ( res, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^vars.put ( parentame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Argument_Swapping]^vars.put ( n, name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^String parentame = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !vars.containsKey ( part )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^vars.put ( propName, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Argument_Swapping]^vars.put ( nameame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !vars.containsKey ( propName )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( !vars.containsKey ( n )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( !vars.containsKey ( nameame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^vars.put ( part, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^vars.put ( s, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent != null && parent.getType (  )  == Token.2 )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !vars.containsKey ( res )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !vars.containsKey ( s )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[BugLab_Argument_Swapping]^visitPreOrder ( collector, root, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Argument_Swapping]^return collector.vars.vars.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Argument_Swapping]^return collector.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[BugLab_Wrong_Literal]^return true;^1666^^^^^1664^1669^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[BugLab_Variable_Misuse]^if  ( s == null )  {^1673^^^^^1671^1678^if  ( lhsString == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Operator]^if  ( lhsString != null )  {^1673^^^^^1671^1678^if  ( lhsString == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Literal]^return true;^1674^^^^^1671^1678^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Variable_Misuse]^int prototypeIdx = s.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Variable_Misuse]^int prototypeIdx = originalName.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Variable_Misuse]^return startPos != -1;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Operator]^return prototypeIdx == -1;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Literal]^return prototypeIdx != -2;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Variable_Misuse]^while  ( isGetProp ( qName )  )  {^1685^^^^^1683^1693^while  ( isGetProp ( cur )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[BugLab_Variable_Misuse]^if  ( qName.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[BugLab_Variable_Misuse]^cur = qName.getFirstChild (  ) ;^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[BugLab_Variable_Misuse]^return qName.getFirstChild (  ) ;^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[BugLab_Variable_Misuse]^int prototypeIdx = res.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Variable_Misuse]^int prototypeIdx = propName.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Variable_Misuse]^int memberIndex = type + ".prototype".length (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Wrong_Operator]^int memberIndex = prototypeIdx + ".prototype".length (  |  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Wrong_Operator]^int memberIndex = prototypeIdx + ".prototype".length (  <=  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Wrong_Literal]^int memberIndex = prototypeIdx + ".prototype".length (  )  ;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Variable_Misuse]^return part.substring ( memberIndex ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Argument_Swapping]^return memberIndex.substring ( qNameStr ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Variable_Misuse]^return originalName.substring ( memberIndex ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Variable_Misuse]^return qNameStr.substring ( operator ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[BugLab_Wrong_Literal]^return new Node ( Token.VOID, Node.newNumber ( operator )  ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[BugLab_Wrong_Literal]^return new Node ( Token.VOID, Node.newNumber ( type )  ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[BugLab_Variable_Misuse]^Node nodeName = Node.newString ( Token.NAME, propName ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[BugLab_Variable_Misuse]^if  ( var != null )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[BugLab_Wrong_Operator]^if  ( value == null )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[BugLab_Variable_Misuse]^nodeName.addChildrenToBack ( var ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, var ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, value ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( propName ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Argument_Swapping]^return name.getType (  )  == Token.NAME && n.getString (  ) .equals ( n ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.NAME || n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  >= Token.NAME && n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Variable_Misuse]^&& n.getString (  ) .equals ( s ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Argument_Swapping]^&& name.getString (  ) .equals ( n ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Argument_Swapping]^return type.getType (  )  == n;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Wrong_Operator]^return n.getType (  )  > type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[BugLab_Variable_Misuse]^return isNodeTypeReferenced ( node, startPos, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return isNodeTypeReferenced ( type, node, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return isNodeTypeReferenced ( node, operator, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return has ( node, new MatchNodeType ( prototypeIdx ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( traverseChildrenPred, new MatchNodeType ( type ) , node ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( node, new MatchNodeType ( traverseChildrenPred ) , type ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^return has ( node, new MatchNodeType ( startPos ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^return has ( node, new MatchNodeType ( operator ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( type, new MatchNodeType ( node ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^return getCount ( node, new MatchNodeType ( operator )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return getCount ( type, new MatchNodeType ( node )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return getCount ( node, new MatchNodeType ( memberIndex )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return has ( node, new MatchNameNode ( qNameStr ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( name, new MatchNameNode ( node ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( traverseChildrenPred, new MatchNameNode ( name ) , node ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^return has ( node, new MatchNameNode ( propName ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^return has ( node, new MatchNameNode ( traverseChildrenPred ) , name ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^return isNameReferenced ( node, qNameStr, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return isNameReferenced ( name, node, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return isNameReferenced ( node, part, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return getCount ( node, new MatchNameNode ( res )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Argument_Swapping]^return getCount ( name, new MatchNameNode ( node )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return getCount ( node, new MatchNameNode ( s )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^return getCount ( node, new MatchNameNode ( part )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[BugLab_Variable_Misuse]^if  ( pred.apply ( c )  )  {^1809^^^^^1806^1824^if  ( pred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Argument_Swapping]^if  ( node.apply ( pred )  )  {^1809^^^^^1806^1824^if  ( pred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Wrong_Literal]^return false;^1810^^^^^1806^1824^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Variable_Misuse]^if  ( !traverseChildrenPred.apply ( c )  )  {^1813^^^^^1806^1824^if  ( !traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Wrong_Literal]^return true;^1814^^^^^1806^1824^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Variable_Misuse]^if  ( has ( node, pred, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Argument_Swapping]^if  ( has ( traverseChildrenPred, pred, c )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Argument_Swapping]^if  ( has ( c, traverseChildrenPred, pred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Wrong_Literal]^return false;^1819^^^^^1806^1824^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Variable_Misuse]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Argument_Swapping]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Wrong_Operator]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Argument_Swapping]^if  ( has ( pred, c, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Wrong_Literal]^return true;^1823^^^^^1806^1824^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[BugLab_Wrong_Literal]^int total = len;^1831^^^^^1830^1842^int total = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Variable_Misuse]^if  ( pred.apply ( c )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Argument_Swapping]^if  ( n.apply ( pred )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Variable_Misuse]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Argument_Swapping]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Wrong_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Variable_Misuse]^total += getCount ( n, pred ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Argument_Swapping]^total += getCount ( pred, c ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Variable_Misuse]^return prototypeIdx;^1841^^^^^1830^1842^return total;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[BugLab_Variable_Misuse]^vistor.visit ( c ) ;^1859^^^^^1856^1866^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Wrong_Operator]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^visitPreOrder ( node, vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^visitPreOrder ( traverseChildrenPred, vistor, c ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^visitPreOrder ( c, traverseChildrenPred, vistor ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^visitPreOrder ( vistor, c, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^if  ( traverseChildrenPred.apply ( c )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^if  ( node.apply ( traverseChildrenPred )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^if  ( node.apply ( traverseChildrenPred )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Wrong_Operator]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^visitPostOrder ( node, vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^visitPostOrder ( traverseChildrenPred, vistor, c ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^visitPostOrder ( c, traverseChildrenPred, vistor ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Argument_Swapping]^visitPostOrder ( vistor, c, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^if  ( traverseChildrenPred.apply ( c )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Variable_Misuse]^vistor.visit ( c ) ;^1881^^^^^1872^1882^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( n.getType (  )  > Token.TRY ) ;^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^return n.getChildCount (  )  > 3;^1889^^^^^1887^1890^return n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Literal]^return n.getChildCount (  )  == type;^1889^^^^^1887^1890^return n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( n.getType (  )  == Token.null ) ;^1897^^^^^1896^1899^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( n.getType (  )  > Token.TRY ) ;^1897^^^^^1896^1899^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( n.getType (  )  != Token.BLOCK ) ;^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^return n.hasChildren (  )  || n.getFirstChild (  ) .getType (  )  == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  >= Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( fnNode.getType (  )  <= Token.FUNCTION ) ;^1916^^^^^1914^1918^Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[BugLab_Wrong_Operator]^if  ( nameNode == null )  {^1948^^^^^1945^1959^if  ( nameNode != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^info = parent.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^parent = parent.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^if  ( info == null && nameNode != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.this )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Argument_Swapping]^if  ( parent == null && info != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Wrong_Operator]^if  ( info == null || parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Wrong_Operator]^if  ( info != null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Wrong_Operator]^if  ( info == null && parent == null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Wrong_Operator]^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  && parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^info = nameNode.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^(  ( nameNode.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1954^1955^^^^1945^1959^(  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[BugLab_Variable_Misuse]^while  ( propName == null && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Argument_Swapping]^while  ( n == sourceNameull && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^while  ( sourceName == null || n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^while  ( sourceName != null && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^while  ( sourceName == null && n == null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Variable_Misuse]^return qNameStr;^1971^^^^^1965^1972^return sourceName;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  <= Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( n != null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( n != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent != null || parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent == null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent != null && parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !vars.containsKey ( parentame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( !vars.containsKey ( nameame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^vars.put ( parentame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Argument_Swapping]^vars.put ( nameame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^String parentame = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Argument_Swapping]^vars.put ( n, name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Argument_Swapping]^if  ( !vars.containsKey ( n )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[BugLab_Argument_Swapping]^return name.getType (  )  == Token.NAME && n.getString (  ) .equals ( n ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[BugLab_Wrong_Operator]^return n.getType (  )  == Token.NAME || n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[BugLab_Wrong_Operator]^return n.getType (  )  != Token.NAME && n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[BugLab_Argument_Swapping]^&& name.getString (  ) .equals ( n ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[BugLab_Argument_Swapping]^return type.getType (  )  == n;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
[BugLab_Wrong_Operator]^return n.getType (  )  != type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
