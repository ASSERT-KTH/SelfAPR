[buglab_swap_variables]^if  ( n == Token.FOR && parent.getChildCount (  )  == 4 && ( pt == parent.getFirstChild (  )  || n == parent.getFirstChild (  ) .getNext (  ) .getNext (  )  )  )  {^77^78^79^^^62^92^if  ( pt == Token.FOR && parent.getChildCount (  )  == 4 && ( n == parent.getFirstChild (  )  || n == parent.getFirstChild (  ) .getNext (  ) .getNext (  )  )  )  {^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^if  ( pt == Token.FOR && n.getChildCount (  )  == 4 && ( parent == parent.getFirstChild (  )  || n == parent.getFirstChild (  ) .getNext (  ) .getNext (  )  )  )  {^77^78^79^^^62^92^if  ( pt == Token.FOR && parent.getChildCount (  )  == 4 && ( n == parent.getFirstChild (  )  || n == parent.getFirstChild (  ) .getNext (  ) .getNext (  )  )  )  {^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^if  ( parent == Token.FOR && pt.getChildCount (  )  == 4 && ( n == parent.getFirstChild (  )  || n == parent.getFirstChild (  ) .getNext (  ) .getNext (  )  )  )  {^77^78^79^^^62^92^if  ( pt == Token.FOR && parent.getChildCount (  )  == 4 && ( n == parent.getFirstChild (  )  || n == parent.getFirstChild (  ) .getNext (  ) .getNext (  )  )  )  {^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( USELESS_CODE_ERROR, n, level, t, msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make (  n, level, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, msg, level, USELESS_CODE_ERROR, n )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t,  level, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, level, n, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n,  USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n, USELESS_CODE_ERROR, level, msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n, level,  msg )  ) ;^102^103^^^^86^104^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( level, n, t, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make (  n, level, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( n, t, level, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t,  level, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( msg, n, level, USELESS_CODE_ERROR, t )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n, level, USELESS_CODE_ERROR )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, level, n, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n,  USELESS_CODE_ERROR, msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n, level, msg, USELESS_CODE_ERROR )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n, level,  msg )  ) ;^103^^^^^86^104^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( USELESS_CODE_ERROR, n, level, t, msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make (  n, level, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, level, n, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t,  level, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n, msg, USELESS_CODE_ERROR, level )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( level, n, t, USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n,  USELESS_CODE_ERROR, msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^t.getCompiler (  ) .report ( JSError.make ( t, n, level,  msg )  ) ;^102^103^^^^87^117^t.getCompiler (  ) .report ( JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( msg, n, level, USELESS_CODE_ERROR, t )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make (  n, level, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( n, t, level, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t,  level, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, msg, level, USELESS_CODE_ERROR, n )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n, level, USELESS_CODE_ERROR )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( level, n, t, USELESS_CODE_ERROR, msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n,  USELESS_CODE_ERROR, msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, USELESS_CODE_ERROR, level, n, msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
[buglab_swap_variables]^JSError.make ( t, n, level,  msg )  ) ;^103^^^^^88^118^JSError.make ( t, n, level, USELESS_CODE_ERROR, msg )  ) ;^[CLASS] CheckSideEffects  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  String  msg  int  ancestorType  pt  
