[BugLab_Variable_Misuse]^this.mode = LOCALS_ONLY;^78^^^^^73^80^this.mode = mode;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] <init> [RETURN_TYPE] InlineVariables$Mode,boolean)   AbstractCompiler compiler Mode mode boolean inlineAllStrings [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  Map  aliasCandidates  
[BugLab_Variable_Misuse]^callback.process ( externs, externs ) ;^86^^^^^83^87^callback.process ( externs, root ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] ReferenceCollectingCallback  callback  AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  externs  root  ReferenceCollection  refInfo  Map  aliasCandidates  
[BugLab_Argument_Swapping]^callback.process ( root, externs ) ;^86^^^^^83^87^callback.process ( externs, root ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] ReferenceCollectingCallback  callback  AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  externs  root  ReferenceCollection  refInfo  Map  aliasCandidates  
[BugLab_Variable_Misuse]^return alias.isConst (  ) ;^113^^^^^112^114^return var.isConst (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] apply [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  Map  aliasCandidates  
[BugLab_Argument_Swapping]^collectAliasCandidates ( referenceMap, t ) ;^160^^^^^158^162^collectAliasCandidates ( t, referenceMap ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] afterExitScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^doInlinesForScope ( referenceMap, t ) ;^161^^^^^158^162^doInlinesForScope ( t, referenceMap ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] afterExitScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( mode <= Mode.CONSTANTS_ONLY )  {^170^^^^^168^189^if  ( mode != Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( mode >= Mode.CONSTANTS_ONLY )  {^170^^^^^168^189^if  ( mode != Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null || referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( referenceInfo == null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null && referenceInfo.references.size (  )  > 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 3 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( varalue != null && value.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value != null || value.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value == null && value.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value != null && value.getType (  )  != Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^aliasCandidates.put ( varalue, new AliasCandidate ( v, referenceInfo )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^aliasCandidates.put ( value, new AliasCandidate ( v, refInfo )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasCandidates.put ( referenceInfoalue, new AliasCandidate ( v, v )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasCandidates.put ( referenceInfo, new AliasCandidate ( v, value )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Reference init = refInfo.getInitializingReference (  ) ;^181^^^^^168^189^Reference init = referenceInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasCandidates.put ( valuealue, new AliasCandidate ( v, referenceInfo )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( v != null && valuealue.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasCandidates.put ( v, new AliasCandidate ( value, referenceInfo )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( value != null && value.getType (  )  == Token.null )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Var v = 2.next (  ) ;^172^^^^^168^189^Var v = it.next (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^ReferenceCollection referenceInfo = v.get ( referenceMap ) ;^173^^^^^168^189^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^ReferenceCollection referenceInfo = referenceMap.get ( var ) ;^173^^^^^168^189^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^referenceInfo.isWellDefined (  )  && refInfo.isAssignedOnce (  )  )  {^179^180^^^^168^189^referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^ReferenceCollection referenceInfo = null.get ( v ) ;^173^^^^^168^189^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Var v = this.next (  ) ;^172^^^^^168^189^Var v = it.next (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null && referenceInfo.references.size (  )  == 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^if  ( referenceInfo != null && referenceInfo.references.size (  )  >=  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( valuealue != null && v.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( referenceInfo == null && isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^205^206^^^^196^223^if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^205^206^^^^196^223^if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^} else if  ( LOCALS_ONLY == Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^} else if  ( mode == Mode.mode )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( mode != Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineNonConstants ( var, referenceInfo ) ;^220^^^^^215^221^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineNonConstants ( v, refInfo ) ;^220^^^^^215^221^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineNonConstants ( referenceInfo, v ) ;^220^^^^^215^221^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineNonConstants ( var, referenceInfo ) ;^220^^^^^196^223^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineNonConstants ( v, refInfo ) ;^220^^^^^196^223^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineNonConstants ( referenceInfo, v ) ;^220^^^^^196^223^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Reference init = refInfo.getInitializingReferenceForConstants (  ) ;^211^^^^^196^223^Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^214^^^^^196^223^staleVars.add ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^} else if  ( isInlineableDeclaredConstant ( var, referenceInfo )  )  {^210^^^^^196^223^} else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^} else if  ( isInlineableDeclaredConstant ( v, refInfo )  )  {^210^^^^^196^223^} else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^} else if  ( isInlineableDeclaredConstant ( referenceInfo, v )  )  {^210^^^^^196^223^} else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( mode >= Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^} else if  ( mode == Mode.LOCALS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( mode < Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Var v = 4.next (  ) ;^199^^^^^196^223^Var v = it.next (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^ReferenceCollection referenceInfo = referenceMap.get ( var ) ;^201^^^^^196^223^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^ReferenceCollection referenceInfo = v.get ( referenceMap ) ;^201^^^^^196^223^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( referenceInfo == null || isVarInlineForbidden ( var )  || staleVars.contains ( v )  )  {^205^206^^^^196^223^if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.contains ( var )  )  {^206^^^^^196^223^staleVars.contains ( v )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  NodeTraversal  t  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^Reference declaration = referenceInfo.references.get ( -1 ) ;^228^^^^^213^243^Reference declaration = referenceInfo.references.get ( 0 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^Reference declaration = referenceInfo.references.get ( 1 ) ;^228^^^^^213^243^Reference declaration = referenceInfo.references.get ( 0 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Reference init = refInfo.getInitializingReference (  ) ;^229^^^^^214^244^Reference init = referenceInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^int firstRefAfterInit =  ( reference == init )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^int firstRefAfterInit =  ( declaration == reference )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^int firstRefAfterInit =  ( init == declaration )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^int firstRefAfterInit =  ( declaration <= init )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^int firstRefAfterInit =  ( declaration == init )  ? 1 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^int firstRefAfterInit =  ( declaration == init )  ? 2 : refCount;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( refCount > 1 || isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( refCount == 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^if  ( refCount > 0 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^if  ( refCount > firstRefAfterInit && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( refCount >= firstRefAfterInit )  {^240^^^^^225^255^} else if  ( refCount == firstRefAfterInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( refCount <= firstRefAfterInit )  {^240^^^^^225^255^} else if  ( refCount == firstRefAfterInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( declaration != init || refCount == 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( declaration >= init && refCount == 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( declaration != init && refCount < 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^} else if  ( declaration != init && refCount == i )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( isValidDeclaration ( declaration )  || isValidInitialization ( init )  )  {^250^^^^^235^265^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^253^^^^^238^268^Node value = init.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^254^^^^^239^269^Preconditions.checkNotNull ( value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^256^^^^^241^271^staleVars.add ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( isValidDeclaration ( reference )  && isValidInitialization ( init )  )  {^250^^^^^235^265^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( reference )  )  {^250^^^^^235^265^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( canInline ( init, init, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, init, init )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( canInline ( reference, init, declaration )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( canInline ( declaration, reference, init )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inline ( var, declaration, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inline ( v, reference, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inline ( v, declaration, reference, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inline ( reference, declaration, init, v ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inline ( v, reference, init, declaration ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inline ( v, declaration, reference, init ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  <<  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  &  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( canInline ( reference, init, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, declaration, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inline ( v, declaration, init, init ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inline ( v, init, declaration, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^247^^^^^232^262^staleVars.add ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, reference, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, init, declaration )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inline ( v, init, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( declaration < init && refCount == 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( declaration != init && refCount >= 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^} else if  ( declaration != init && refCount == refCount )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  ^  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit - refCount ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  !=  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit - firstRefAfterInit ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inline ( v, declaration, declaration, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inline ( init, declaration, v, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^236^^^^^232^258^Node value = init.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^237^^^^^232^258^Preconditions.checkNotNull ( value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^239^^^^^232^258^staleVars.add ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( refCount != firstRefAfterInit )  {^240^^^^^225^255^} else if  ( refCount == firstRefAfterInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( declaration != init && refCount != 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( canInline ( init, declaration, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  <  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^236^^^^^221^251^Node value = init.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit   instanceof   1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit -  ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^isImmutableAndWellDefinedVariable ( var, referenceInfo )  )  {^233^^^^^218^248^isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^isImmutableAndWellDefinedVariable ( v, refInfo )  )  {^233^^^^^218^248^isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^isImmutableAndWellDefinedVariable ( referenceInfo, v )  )  {^233^^^^^218^248^isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^237^^^^^222^252^Preconditions.checkNotNull ( value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^239^^^^^224^254^staleVars.add ( v ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inline ( declaration, v, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( !staleVars.contains ( v )  || referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^264^265^^^^249^279^if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^aliasInit = referenceInfo.getInitializingReference (  ) ;^273^^^^^264^283^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasInit = candidate.refInfo.refInfo.getInitializingReference (  ) ;^273^^^^^264^283^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasInit = candidate.getInitializingReference (  ) ;^273^^^^^264^283^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^274^^^^^264^283^Node value = aliasInit.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^264^283^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^AliasCandidate candidate = nameNode.get ( aliasCandidates ) ;^270^^^^^264^283^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( var )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^275^^^^^264^283^Preconditions.checkNotNull ( value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( v ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^staleVars.add ( candidate ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( v )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate.alias.alias )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^staleVars.add ( candidate.alias.alias ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node nameNode = refs.get ( refCount ) .getNameNode (  ) ;^268^^^^^264^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^Node nameNode = i.get ( refs ) .getNameNode (  ) ;^268^^^^^264^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( aliasCandidates.containsKey ( value )  )  {^269^^^^^264^283^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( nameNode.containsKey ( aliasCandidates )  )  {^269^^^^^264^283^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node nameNode = this.get ( i ) .getNameNode (  ) ;^268^^^^^264^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^aliasInit = referenceInfo.getInitializingReference (  ) ;^273^^^^^258^288^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasInit = candidate.refInfo.refInfo.getInitializingReference (  ) ;^273^^^^^258^288^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^aliasInit = candidate.getInitializingReference (  ) ;^273^^^^^258^288^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^274^^^^^259^289^Node value = aliasInit.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^275^^^^^260^290^Preconditions.checkNotNull ( value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( var ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^staleVars.add ( candidate ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^255^285^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^AliasCandidate candidate = nameNode.get ( aliasCandidates ) ;^270^^^^^255^285^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate.alias.alias )  )  {^271^^^^^256^286^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^staleVars.add ( candidate.alias.alias ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( v ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate )  )  {^271^^^^^256^286^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node nameNode = null.get ( i ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node nameNode = refs.get ( refCount ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^Node nameNode = i.get ( refs ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( aliasCandidates.containsKey ( value )  )  {^269^^^^^254^284^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( 1.containsKey ( nameNode )  )  {^269^^^^^254^284^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( nameNode.containsKey ( aliasCandidates )  )  {^269^^^^^254^284^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( var )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^264^265^^^^249^279^if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( v )  && refInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^264^265^^^^249^279^if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( v )  )  {^271^^^^^256^286^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  aliasInit  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  nameNode  value  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  AbstractCompiler  compiler  boolean  inlineAllStrings  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^for  ( Node root = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^for  ( Node root = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^for  ( Node c = root.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^blacklistVarReferencesInTree ( root, scope ) ;^292^^^^^290^298^blacklistVarReferencesInTree ( c, scope ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^blacklistVarReferencesInTree ( scope, c ) ;^292^^^^^290^298^blacklistVarReferencesInTree ( c, scope ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( c.getType (  )  == Token.NAME )  {^295^^^^^290^298^if  ( root.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( root.getType (  )  >= Token.NAME )  {^295^^^^^290^298^if  ( root.getType (  )  == Token.NAME )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.add ( scope.getVar ( c.getString (  )  )  ) ;^296^^^^^290^298^staleVars.add ( scope.getVar ( root.getString (  )  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^staleVars.add ( root.getVar ( scope.getString (  )  )  ) ;^296^^^^^290^298^staleVars.add ( scope.getVar ( root.getString (  )  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Scope  scope  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  c  root  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return compiler.getCodingConvention (  ) .isExported ( var.name )  && staleVars.contains ( var ) ;^309^310^^^^303^311^return compiler.getCodingConvention (  ) .isExported ( var.name )  || staleVars.contains ( var ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isVarInlineForbidden [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^staleVars.contains ( v ) ;^310^^^^^303^311^staleVars.contains ( var ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isVarInlineForbidden [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^319^^^^^317^329^Node value = init.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkState ( expressRoot != null ) ;^320^^^^^317^329^Preconditions.checkState ( value != null ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( value == null ) ;^320^^^^^317^329^Preconditions.checkState ( value != null ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineValue ( var, reference, value.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineValue ( v, reference, expressRoot.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineValue ( value, reference, v.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineValue ( reference, v, value.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( reference != init )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( declaration != reference )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration > init )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node expressRoot = reference.getGrandparent (  ) ;^324^^^^^317^329^Node expressRoot = init.getGrandparent (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkState ( value.getType (  )  == Token.EXPR_RESULT ) ;^325^^^^^317^329^Preconditions.checkState ( expressRoot.getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( expressRoot.getType (  )  >= Token.EXPR_RESULT ) ;^325^^^^^317^329^Preconditions.checkState ( expressRoot.getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^NodeUtil.removeChild ( value.getParent (  ) , expressRoot ) ;^326^^^^^317^329^NodeUtil.removeChild ( expressRoot.getParent (  ) , expressRoot ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^removeDeclaration ( reference ) ;^328^^^^^317^329^removeDeclaration ( declaration ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  init  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  expressRoot  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Reference decl = 4.get ( 0 ) ;^336^^^^^334^341^Reference decl = refSet.get ( 0 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Literal]^Reference decl = refSet.get ( i ) ;^336^^^^^334^341^Reference decl = refSet.get ( 0 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 1; i < 3.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= refSet.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < refSet.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Variable_Misuse]^inlineValue ( var, refSet.get ( i ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( value, refSet.get ( i ) , v.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( v, value.get ( i ) , refSet.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( i, refSet.get ( v ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( v, i.get ( refSet ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 2; i < refSet.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( refSet, v.get ( i ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( v, refSet.get ( value ) , i.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Variable_Misuse]^if  ( decl.getNameNode (  )  == v.getNameNode (  )  )  {^352^^^^^346^360^if  ( r.getNameNode (  )  == v.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( r.getNameNode (  )  == var.getNameNode (  )  )  {^352^^^^^346^360^if  ( r.getNameNode (  )  == v.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( v.getNameNode (  )  == r.getNameNode (  )  )  {^352^^^^^346^360^if  ( r.getNameNode (  )  == v.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( r.getNameNode (  )  != v.getNameNode (  )  )  {^352^^^^^346^360^if  ( r.getNameNode (  )  == v.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineValue ( var, r, value.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineValue ( v, decl, value.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineValue ( r, v, value.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineValue ( value, r, v.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^decl = decl;^353^^^^^346^360^decl = r;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^removeDeclaration ( r ) ;^359^^^^^346^360^removeDeclaration ( decl ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  decl  r  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkState ( grandparent.getType (  )  == Token.VAR ) ;^371^^^^^365^378^Preconditions.checkState ( varNode.getType (  )  == Token.VAR ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  grandparent  varNode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( varNode.getType (  )  >= Token.VAR ) ;^371^^^^^365^378^Preconditions.checkState ( varNode.getType (  )  == Token.VAR ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  grandparent  varNode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^NodeUtil.removeChild ( varNode, grandparent ) ;^374^^^^^365^378^NodeUtil.removeChild ( grandparent, varNode ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  grandparent  varNode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( varNode.getType (  )  <= Token.VAR ) ;^371^^^^^365^378^Preconditions.checkState ( varNode.getType (  )  == Token.VAR ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  grandparent  varNode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^ref.getParent (  ) .replaceChild ( ref.getNameNode (  ) , parent ) ;^394^^^^^388^398^ref.getParent (  ) .replaceChild ( ref.getNameNode (  ) , value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^ref.getParent (  ) .replaceChild ( value.getNameNode (  ) , ref ) ;^394^^^^^388^398^ref.getParent (  ) .replaceChild ( ref.getNameNode (  ) , value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^ref.getGrandparent (  ) .replaceChild ( value, value ) ;^392^^^^^388^398^ref.getGrandparent (  ) .replaceChild ( parent, value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^ref.getGrandparent (  ) .replaceChild ( value, parent ) ;^392^^^^^388^398^ref.getGrandparent (  ) .replaceChild ( parent, value ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !identifyConstants.apply ( v )  )  {^406^^^^^405^435^if  ( !identifyConstants.apply ( var )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^407^^^^^405^435^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^411^^^^^405^435^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^414^^^^^405^435^Reference init = refInfo.getInitializingReferenceForConstants (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( init != null )  {^415^^^^^405^435^if  ( init == null )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^416^^^^^405^435^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value != null )  {^420^^^^^405^435^if  ( value == null )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^424^^^^^405^435^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^429^^^^^405^435^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return value.getType (  )  != Token.STRING && isStringWorthInlining ( var, refInfo.references ) ;^433^434^^^^405^435^return value.getType (  )  != Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return value.getType (  )  == Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^433^434^^^^405^435^return value.getType (  )  != Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  init  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( !inlineAllStrings || !var.isDefine (  )  )  {^441^^^^^440^463^if  ( !inlineAllStrings && !var.isDefine (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^return len >= inlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^return noInlineBytes >= len;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Argument_Swapping]^return inlineBytes >= noInlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^return noInlineBytes > inlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int len = v.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^442^^^^^440^463^int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int len = var.getInitialValue (  ^  ) .getString (  ) .length (  )  + "''".length (  ) ;^442^^^^^440^463^int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int noInlineBytes = "var xx=;".length (  )  + inlineBytes + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Argument_Swapping]^int noInlineBytes = "var xx=;".length (  )  + refs + 4 *  ( len.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  ==  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )   >>  len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int / noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )   |  1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int noInlineBytes = "var xx=;".length (  )  + len  *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - noInlineBytes ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int inlineBytes =  ( noInlineBytes - 1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Argument_Swapping]^int inlineBytes =  ( refs - 1 )  *  ( len.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int + inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len  &&  1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )   >>  1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len  )  *  ( refs.size (  )   ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len - len )  *  ( refs.size (  )  - len ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^4 *  ( this.size (  )  - 1 ) ;^449^^^^^440^463^4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int len = var.getInitialValue (  &&  ) .getString (  ) .length (  )  + "''".length (  ) ;^442^^^^^440^463^int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( 2.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  <=  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )   >=  len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int noInlineBytes = "var xx=;".length (  )  + len + len *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )   ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int / inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len   instanceof   1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )   &  1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len -  )  *  ( refs.size (  )  -  ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^return false;^462^^^^^440^463^return true;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  List  refs  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( reference ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( reference ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( !isValidDeclaration ( initialization ) || !isValidInitialization ( declaration ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( reference ) || !isValidReference ( initialization )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( !isValidDeclaration ( declaration ) && !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^476^^^^^473^477^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^476^^^^^461^491^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^|| !isValidInitialization ( reference ) || !isValidReference ( reference )  )  {^474^475^^^^459^489^|| !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^|| !isValidReference ( initialization )  )  {^475^^^^^460^490^|| !isValidReference ( reference )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( reference != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( declaration != reference && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( initialization != declaration && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration != initialization || initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration == initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration >= initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^484^^^^^482^485^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^484^^^^^469^499^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( initialization.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( declaration.getBasicBlock (  )  != reference.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != initialization.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( reference.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != declaration.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( declaration.getBasicBlock (  )  != reference.getBasicBlock (  ) || declaration.getBasicBlock (  )  != initialization.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) && declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration.getBasicBlock (  )  == initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  <= reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^491^^^^^489^492^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^491^^^^^476^506^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( reference.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^|| reference.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^490^^^^^475^505^|| declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^|| declaration.getBasicBlock (  )  != initialization.getBasicBlock (  )  )  {^490^^^^^475^505^|| declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^503^^^^^488^518^Node value = initialization.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( value == null ) ;^504^^^^^489^519^Preconditions.checkState ( value != null ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.GETPROP && initialization.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( reference.getType (  )  == Token.GETPROP && value.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  == Token.GETPROP || reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  != Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  < Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  != reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^508^^^^^505^509^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^508^^^^^493^523^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^&& initialization.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^506^507^^^^491^521^&& reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^&& initialization.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^507^^^^^492^522^&& reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^return canMoveAggressively ( value )  || canMoveModerately ( declaration, reference ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^return canMoveAggressively ( value )  || canMoveModerately ( initialization, declaration ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^return canMoveAggressively ( reference )  || canMoveModerately ( initialization, value ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^return canMoveAggressively ( value )  || canMoveModerately ( reference, initialization ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return canMoveAggressively ( value )  && canMoveModerately ( initialization, reference ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^canMoveModerately ( declaration, reference ) ;^512^^^^^497^527^canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^canMoveModerately ( initialization, declaration ) ;^512^^^^^497^527^canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^canMoveModerately ( reference, initialization ) ;^512^^^^^497^527^canMoveModerately ( initialization, reference ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return NodeUtil.isLiteralValue ( value ) && value.getType (  )  == Token.FUNCTION;^521^522^^^^518^523^return NodeUtil.isLiteralValue ( value ) || value.getType (  )  == Token.FUNCTION;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveAggressively [RETURN_TYPE] boolean   Node value [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return NodeUtil.isLiteralValue ( value ) || value.getType (  )  <= Token.FUNCTION;^521^522^^^^518^523^return NodeUtil.isLiteralValue ( value ) || value.getType (  )  == Token.FUNCTION;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveAggressively [RETURN_TYPE] boolean   Node value [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^if  ( reference.getParent (  ) .getType (  )  == Token.VAR )  {^536^^^^^532^561^if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( initialization.getParent (  ) .getType (  )  != Token.VAR )  {^536^^^^^532^561^if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( initialization.getParent (  ) .getType (  )  != Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^} else if  ( initialization.getParent (  ) .getType (  )  <= Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkState ( reference.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  > Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^it = NodeIterators.LocalVarMotion.forAssign ( reference.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) ,^544^545^546^547^^532^561^it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) ,^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^initialization.getNameNode (  ) , reference.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^545^546^547^548^^532^561^initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^initialization.getParent (  ) , reference.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^546^547^548^^^532^561^initialization.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^initialization.getGrandparent (  ) , reference.getGrandparent (  ) .getParent (  )  ) ;^547^548^^^^532^561^initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^} else if  ( reference.getParent (  ) .getType (  )  == Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.0 ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  <= Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^it = NodeIterators.LocalVarMotion.forVar ( reference.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^537^538^539^540^^532^561^it = NodeIterators.LocalVarMotion.forVar ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^initialization.getNameNode (  ) , reference.getParent (  ) , initialization.getGrandparent (  )  ) ;^538^539^540^^^532^561^initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^initialization.getParent (  ) , reference.getGrandparent (  )  ) ;^539^540^^^^532^561^initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  < Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node targetName = initialization.getNameNode (  ) ;^552^^^^^532^561^Node targetName = reference.getNameNode (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^if  ( targetName == curNode )  {^555^^^^^532^561^if  ( curNode == targetName )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( curNode <= targetName )  {^555^^^^^532^561^if  ( curNode == targetName )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return false;^556^^^^^532^561^return true;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Node curNode = 2.next (  ) ;^554^^^^^532^561^Node curNode = it.next (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^560^^^^^532^561^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  curNode  targetName  Iterator  it  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return declaration.getParent (  ) .getType (  )  == Token.VAR || declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^568^569^^^^567^570^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidDeclaration [RETURN_TYPE] boolean   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return declaration.getParent (  ) .getType (  )  != Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^568^569^^^^567^570^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidDeclaration [RETURN_TYPE] boolean   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  == Token.FOR;^568^569^^^^567^570^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidDeclaration [RETURN_TYPE] boolean   Reference declaration [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  declaration  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( initialization != null )  {^576^^^^^575^588^if  ( initialization == null )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return false;^586^^^^^575^588^return true;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^Preconditions.checkState ( initialization.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  <= initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return initialization.getNameNode (  ) .getFirstChild (  )  == null;^580^^^^^575^588^return initialization.getNameNode (  ) .getFirstChild (  )  != null;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^return true;^577^^^^^575^588^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  > Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  initialization  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  parent  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^return !reference.isDeclaration (  )  || !reference.isLvalue (  ) ;^594^^^^^593^595^return !reference.isDeclaration (  )  && !reference.isLvalue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isValidReference [RETURN_TYPE] boolean   Reference reference [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  reference  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Literal]^int startingReadRef = ;^605^^^^^590^620^int startingReadRef = 1;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Reference refDecl = refSet.get ( 1 ) ;^606^^^^^591^621^Reference refDecl = refSet.get ( 0 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Reference refDecl = refSet.get ( i ) ;^606^^^^^591^621^Reference refDecl = refSet.get ( 0 ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( refInit )  )  {^607^^^^^592^622^if  ( !isValidDeclaration ( refDecl )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^608^^^^^593^623^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Reference refInit = referenceInfo.getInitializingReference (  ) ;^611^^^^^596^626^Reference refInit = refInfo.getInitializingReference (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( !isValidInitialization ( refDecl )  )  {^612^^^^^597^627^if  ( !isValidInitialization ( refInit )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^613^^^^^598^628^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( ref != refInit )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( refDecl != refDecl )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^if  ( refInit != refDecl )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^if  ( refDecl > refInit )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^startingReadRef = startingReadRef;^618^^^^^603^633^startingReadRef = 2;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Preconditions.checkState ( refDecl == refSet.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^Preconditions.checkState ( refSet == refInit.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^Preconditions.checkState ( refInit >= refSet.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Preconditions.checkState ( refInit == refSet.get ( i )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^Preconditions.checkState ( refInit != refSet.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Preconditions.checkState ( refInit == refSet.get ( startingReadRef )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^624^^^^^609^639^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^for  ( int i = startingReadRef; i < refInitSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( int i = refSet; i < startingReadRef.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( refSetnt i = startingReadRef; i < i.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( int i = startingReadRef; i < refSetSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^for  ( int i = startingReadRef; i <= refSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( !isValidReference ( refInit )  )  {^623^^^^^608^638^if  ( !isValidReference ( ref )  )  {^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Reference ref = refSet.get ( startingReadRef ) ;^622^^^^^607^637^Reference ref = refSet.get ( i ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^Reference ref = i.get ( refSet ) ;^622^^^^^607^637^Reference ref = refSet.get ( i ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^629^^^^^614^644^return false;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Node value = refDecl.getAssignedValue (  ) ;^632^^^^^617^647^Node value = refInit.getAssignedValue (  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^return NodeUtil.isImmutableValue ( value )  || ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^634^635^636^^^619^649^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING && isStringWorthInlining ( v, refInfo.references )  ) ;^634^635^636^^^619^649^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Wrong_Operator]^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  >= Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^634^635^636^^^619^649^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] AbstractCompiler  compiler  boolean  inlineAllStrings  IdentifyConstants  identifyConstants  Set  staleVars  Var  alias  v  var  Reference  ref  refDecl  refInit  Mode  ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  Node  value  List  refSet  ReferenceCollection  refInfo  referenceInfo  Map  aliasCandidates  referenceMap  int  i  startingReadRef  
[BugLab_Argument_Swapping]^collectAliasCandidates ( referenceMap, t ) ;^160^^^^^158^162^collectAliasCandidates ( t, referenceMap ) ;^[CLASS] InliningBehavior  [METHOD] afterExitScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  NodeTraversal  t  
[BugLab_Argument_Swapping]^doInlinesForScope ( referenceMap, t ) ;^161^^^^^158^162^doInlinesForScope ( t, referenceMap ) ;^[CLASS] InliningBehavior  [METHOD] afterExitScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  NodeTraversal  t  
[BugLab_Wrong_Operator]^if  ( mode == Mode.CONSTANTS_ONLY )  {^170^^^^^168^189^if  ( mode != Mode.CONSTANTS_ONLY )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( mode <= Mode.CONSTANTS_ONLY )  {^170^^^^^168^189^if  ( mode != Mode.CONSTANTS_ONLY )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null || referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( referenceInfo == null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null && referenceInfo.references.size (  )  > 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( value != null || value.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( value == null && value.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( value != null && value.getType (  )  != Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^aliasCandidates.put ( referenceInfoalue, new AliasCandidate ( v, v )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^aliasCandidates.put ( referenceInfo, new AliasCandidate ( v, value )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^if  ( valuealue != null && v.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Literal]^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 4 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^aliasCandidates.put ( valuealue, new AliasCandidate ( v, referenceInfo )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^aliasCandidates.put ( v, new AliasCandidate ( value, referenceInfo )  ) ;^184^^^^^168^189^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^ReferenceCollection referenceInfo = v.get ( referenceMap ) ;^173^^^^^168^189^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Literal]^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 1 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^if  ( v != null && valuealue.getType (  )  == Token.NAME )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Literal]^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 3 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^168^189^if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Variable_Misuse]^if  ( value != null && value.getType (  )  == Token.this )  {^183^^^^^168^189^if  ( value != null && value.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Variable_Misuse]^Var v = 3.next (  ) ;^172^^^^^168^189^Var v = it.next (  ) ;^[CLASS] InliningBehavior  [METHOD] collectAliasCandidates [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( referenceInfo == null && isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^205^206^^^^196^223^if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^if  ( referenceInfo != null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^205^206^^^^196^223^if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^} else if  ( mode <= Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^inlineNonConstants ( referenceInfo, v ) ;^220^^^^^215^221^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^inlineNonConstants ( referenceInfo, v ) ;^220^^^^^196^223^inlineNonConstants ( v, referenceInfo ) ;^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^} else if  ( mode >= Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^} else if  ( isInlineableDeclaredConstant ( referenceInfo, v )  )  {^210^^^^^196^223^} else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Operator]^} else if  ( mode != Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^} else if  ( mode == Mode.CONSTANTS_ONLY )  {^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Argument_Swapping]^ReferenceCollection referenceInfo = v.get ( referenceMap ) ;^201^^^^^196^223^ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[CLASS] InliningBehavior  [METHOD] doInlinesForScope [RETURN_TYPE] void   NodeTraversal t ReferenceCollection> referenceMap [VARIABLES] Set  staleVars  boolean  NodeTraversal  t  Var  v  Reference  init  Node  value  Iterator  it  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  
[BugLab_Wrong_Literal]^Reference declaration = referenceInfo.references.get ( -1 ) ;^228^^^^^213^243^Reference declaration = referenceInfo.references.get ( 0 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^int firstRefAfterInit =  ( declaration == reference )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^int firstRefAfterInit =  ( init == declaration )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^int firstRefAfterInit =  ( declaration <= init )  ? 2 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^int firstRefAfterInit =  ( declaration == init )  ? 3 : 3;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^int firstRefAfterInit =  ( declaration == init )  ? 2 : firstRefAfterInit;^230^^^^^215^245^int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^if  ( refCount > 1 || isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^if  ( refCount == 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^if  ( refCount > 0 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^if  ( refCount > 2 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^217^247^if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( refCount <= firstRefAfterInit )  {^240^^^^^225^255^} else if  ( refCount == firstRefAfterInit )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( refCount >= firstRefAfterInit )  {^240^^^^^225^255^} else if  ( refCount == firstRefAfterInit )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( declaration != init || refCount == 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( declaration <= init && refCount == 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( declaration != init && refCount <= 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^} else if  ( declaration != init && refCount == firstRefAfterInit )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^if  ( isValidDeclaration ( declaration )  || isValidInitialization ( init )  )  {^250^^^^^235^265^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^253^^^^^238^268^Node value = init.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( isValidDeclaration ( reference )  && isValidInitialization ( init )  )  {^250^^^^^235^265^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^254^^^^^239^269^Preconditions.checkNotNull ( value ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( reference )  )  {^250^^^^^235^265^if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( canInline ( init, init, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, reference, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, init, init )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( canInline ( init, declaration, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( canInline ( declaration, reference, init )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^inline ( v, reference, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^inline ( v, declaration, reference, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^inline ( v, declaration, init, declaration ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^inline ( init, declaration, v, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^inline ( declaration, v, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^inline ( v, init, declaration, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^inline ( v, declaration, reference, init ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  &&  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit - i ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  <  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit - firstRefAfterInit ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( canInline ( reference, init, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( canInline ( reference, init, declaration )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^inline ( v, declaration, init, init ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^inline ( v, reference, init, declaration ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( canInline ( declaration, declaration, reference )  )  {^245^^^^^230^260^if  ( canInline ( declaration, init, reference )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( declaration == init && refCount == 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( declaration != init && refCount != 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^} else if  ( declaration != init && refCount == refCount )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  |  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  ==  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^inline ( v, init, init, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^inline ( v, declaration, declaration, reference ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^236^^^^^232^258^Node value = init.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^237^^^^^232^258^Preconditions.checkNotNull ( value ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( refCount != firstRefAfterInit )  {^240^^^^^225^255^} else if  ( refCount == firstRefAfterInit )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^} else if  ( declaration != init && refCount >= 2 )  {^249^^^^^234^264^} else if  ( declaration != init && refCount == 2 )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^inline ( reference, declaration, init, v ) ;^246^^^^^231^261^inline ( v, declaration, init, reference ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  >=  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^236^^^^^221^251^Node value = init.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  &  1 ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^isImmutableAndWellDefinedVariable ( referenceInfo, v )  )  {^233^^^^^218^248^isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^237^^^^^222^252^Preconditions.checkNotNull ( value ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Literal]^Reference reference = referenceInfo.references.get ( firstRefAfterInit -  ) ;^243^244^^^^228^258^Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Wrong_Operator]^if  ( !staleVars.contains ( v )  || referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^264^265^^^^249^279^if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^aliasInit = referenceInfo.getInitializingReference (  ) ;^273^^^^^264^283^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^aliasInit = candidate.refInfo.refInfo.getInitializingReference (  ) ;^273^^^^^264^283^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^aliasInit = candidate.getInitializingReference (  ) ;^273^^^^^264^283^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^274^^^^^264^283^Node value = aliasInit.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^275^^^^^264^283^Preconditions.checkNotNull ( value ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^staleVars.add ( candidate.alias.alias ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^264^283^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^AliasCandidate candidate = nameNode.get ( aliasCandidates ) ;^270^^^^^264^283^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( v )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate.alias.alias )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^staleVars.add ( v ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^staleVars.add ( candidate ) ;^279^^^^^264^283^staleVars.add ( candidate.alias ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate )  )  {^271^^^^^264^283^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node nameNode = refs.get ( refCount ) .getNameNode (  ) ;^268^^^^^264^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^Node nameNode = i.get ( refs ) .getNameNode (  ) ;^268^^^^^264^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( aliasCandidates.containsKey ( value )  )  {^269^^^^^264^283^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( 3.containsKey ( nameNode )  )  {^269^^^^^264^283^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( nameNode.containsKey ( aliasCandidates )  )  {^269^^^^^264^283^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^aliasInit = candidate.refInfo.refInfo.getInitializingReference (  ) ;^273^^^^^258^288^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^aliasInit = candidate.getInitializingReference (  ) ;^273^^^^^258^288^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^274^^^^^259^289^Node value = aliasInit.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^aliasInit = referenceInfo.getInitializingReference (  ) ;^273^^^^^258^288^aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( nameNode ) ;^275^^^^^260^290^Preconditions.checkNotNull ( value ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^staleVars.add ( v ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^255^285^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^AliasCandidate candidate = nameNode.get ( aliasCandidates ) ;^270^^^^^255^285^AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( !staleVars.contains ( v )  )  {^271^^^^^256^286^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( !staleVars.contains ( candidate )  )  {^271^^^^^256^286^if  ( !staleVars.contains ( candidate.alias )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^staleVars.add ( candidate.alias.alias ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^staleVars.add ( candidate ) ;^279^^^^^264^294^staleVars.add ( candidate.alias ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node nameNode = this.get ( i ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node nameNode = refs.get ( refCount ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^Node nameNode = i.get ( refs ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^Node nameNode = 0.get ( i ) .getNameNode (  ) ;^268^^^^^253^283^Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^if  ( aliasCandidates.containsKey ( value )  )  {^269^^^^^254^284^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Argument_Swapping]^if  ( nameNode.containsKey ( aliasCandidates )  )  {^269^^^^^254^284^if  ( aliasCandidates.containsKey ( nameNode )  )  {^[CLASS] InliningBehavior  [METHOD] inlineNonConstants [RETURN_TYPE] void   Var v ReferenceCollection referenceInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  aliasInit  declaration  init  reference  Node  nameNode  value  List  refs  Map  aliasCandidates  referenceMap  ReferenceCollection  referenceInfo  int  firstRefAfterInit  i  refCount  AliasCandidate  candidate  
[BugLab_Variable_Misuse]^for  ( Node root = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Argument_Swapping]^for  ( Node root = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Wrong_Operator]^for  ( Node c = root.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Variable_Misuse]^blacklistVarReferencesInTree ( root, scope ) ;^292^^^^^290^298^blacklistVarReferencesInTree ( c, scope ) ;^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Argument_Swapping]^blacklistVarReferencesInTree ( scope, c ) ;^292^^^^^290^298^blacklistVarReferencesInTree ( c, scope ) ;^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Variable_Misuse]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^291^^^^^290^298^for  ( Node c = root.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Variable_Misuse]^if  ( c.getType (  )  == Token.NAME )  {^295^^^^^290^298^if  ( root.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Wrong_Operator]^if  ( root.getType (  )  >= Token.NAME )  {^295^^^^^290^298^if  ( root.getType (  )  == Token.NAME )  {^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Variable_Misuse]^staleVars.add ( scope.getVar ( c.getString (  )  )  ) ;^296^^^^^290^298^staleVars.add ( scope.getVar ( root.getString (  )  )  ) ;^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Argument_Swapping]^staleVars.add ( root.getVar ( scope.getString (  )  )  ) ;^296^^^^^290^298^staleVars.add ( scope.getVar ( root.getString (  )  )  ) ;^[CLASS] InliningBehavior  [METHOD] blacklistVarReferencesInTree [RETURN_TYPE] void   Node root Scope scope [VARIABLES] Set  staleVars  boolean  Scope  scope  Map  aliasCandidates  referenceMap  Node  c  root  
[BugLab_Wrong_Operator]^return compiler.getCodingConvention (  ) .isExported ( var.name )  && staleVars.contains ( var ) ;^309^310^^^^303^311^return compiler.getCodingConvention (  ) .isExported ( var.name )  || staleVars.contains ( var ) ;^[CLASS] InliningBehavior  [METHOD] isVarInlineForbidden [RETURN_TYPE] boolean   Var var [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^319^^^^^317^329^Node value = init.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^Preconditions.checkState ( expressRoot != null ) ;^320^^^^^317^329^Preconditions.checkState ( value != null ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Wrong_Operator]^Preconditions.checkState ( value == null ) ;^320^^^^^317^329^Preconditions.checkState ( value != null ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^inlineValue ( v, init, value.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^inlineValue ( v, reference, expressRoot.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Argument_Swapping]^inlineValue ( value, reference, v.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Argument_Swapping]^inlineValue ( reference, v, value.detachFromParent (  )  ) ;^322^^^^^317^329^inlineValue ( v, reference, value.detachFromParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^if  ( reference != init )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^if  ( declaration != reference )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Argument_Swapping]^if  ( init != declaration )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Wrong_Operator]^if  ( declaration >= init )  {^323^^^^^317^329^if  ( declaration != init )  {^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^Node expressRoot = reference.getGrandparent (  ) ;^324^^^^^317^329^Node expressRoot = init.getGrandparent (  ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^Preconditions.checkState ( value.getType (  )  == Token.EXPR_RESULT ) ;^325^^^^^317^329^Preconditions.checkState ( expressRoot.getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Wrong_Operator]^Preconditions.checkState ( expressRoot.getType (  )  >= Token.EXPR_RESULT ) ;^325^^^^^317^329^Preconditions.checkState ( expressRoot.getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^NodeUtil.removeChild ( value.getParent (  ) , expressRoot ) ;^326^^^^^317^329^NodeUtil.removeChild ( expressRoot.getParent (  ) , expressRoot ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Wrong_Operator]^Preconditions.checkState ( expressRoot.getType (  )  < Token.EXPR_RESULT ) ;^325^^^^^317^329^Preconditions.checkState ( expressRoot.getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Variable_Misuse]^removeDeclaration ( reference ) ;^328^^^^^317^329^removeDeclaration ( declaration ) ;^[CLASS] InliningBehavior  [METHOD] inline [RETURN_TYPE] void   Var v Reference declaration Reference init Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  declaration  init  reference  Node  expressRoot  value  
[BugLab_Wrong_Literal]^Reference decl = refSet.get ( 1 ) ;^336^^^^^334^341^Reference decl = refSet.get ( 0 ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Literal]^Reference decl = refSet.get ( i ) ;^336^^^^^334^341^Reference decl = refSet.get ( 0 ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 1; i < null.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^for  ( refSetnt i = 1; i < i.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= refSet.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < refSet.size (  ) ; i++ )  {^337^^^^^334^341^for  ( int i = 1; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( refSet, v.get ( i ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( v, i.get ( refSet ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( i, refSet.get ( v ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( value, refSet.get ( i ) , v.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Argument_Swapping]^inlineValue ( v, value.get ( i ) , refSet.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Variable_Misuse]^inlineValue ( v, null.get ( i ) , value.cloneTree (  )  ) ;^338^^^^^334^341^inlineValue ( v, refSet.get ( i ) , value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineWellDefinedVariable [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  Node  value  List  refSet  Map  aliasCandidates  referenceMap  int  i  
[BugLab_Variable_Misuse]^if  ( decl.getNameNode (  )  == v.getNameNode (  )  )  {^352^^^^^346^360^if  ( r.getNameNode (  )  == v.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Wrong_Operator]^if  ( r.getNameNode (  )  != v.getNameNode (  )  )  {^352^^^^^346^360^if  ( r.getNameNode (  )  == v.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^inlineValue ( v, decl, value.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineValue ( r, v, value.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Argument_Swapping]^inlineValue ( v, value, r.cloneTree (  )  ) ;^355^^^^^346^360^inlineValue ( v, r, value.cloneTree (  )  ) ;^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^decl = decl;^353^^^^^346^360^decl = r;^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^removeDeclaration ( r ) ;^359^^^^^346^360^removeDeclaration ( decl ) ;^[CLASS] InliningBehavior  [METHOD] inlineDeclaredConstant [RETURN_TYPE] void   Var v Node value Reference> refSet [VARIABLES] Set  staleVars  boolean  Var  v  Reference  decl  r  Node  value  List  refSet  Map  aliasCandidates  referenceMap  
[BugLab_Variable_Misuse]^Preconditions.checkState ( grandparent.getType (  )  == Token.VAR ) ;^371^^^^^365^378^Preconditions.checkState ( varNode.getType (  )  == Token.VAR ) ;^[CLASS] InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  Node  grandparent  varNode  
[BugLab_Wrong_Operator]^Preconditions.checkState ( varNode.getType (  )  != Token.VAR ) ;^371^^^^^365^378^Preconditions.checkState ( varNode.getType (  )  == Token.VAR ) ;^[CLASS] InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  Node  grandparent  varNode  
[BugLab_Argument_Swapping]^NodeUtil.removeChild ( varNode, grandparent ) ;^374^^^^^365^378^NodeUtil.removeChild ( grandparent, varNode ) ;^[CLASS] InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  Node  grandparent  varNode  
[BugLab_Wrong_Operator]^Preconditions.checkState ( varNode.getType (  )  <= Token.VAR ) ;^371^^^^^365^378^Preconditions.checkState ( varNode.getType (  )  == Token.VAR ) ;^[CLASS] InliningBehavior  [METHOD] removeDeclaration [RETURN_TYPE] void   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  Node  grandparent  varNode  
[BugLab_Variable_Misuse]^ref.getParent (  ) .replaceChild ( ref.getNameNode (  ) , parent ) ;^394^^^^^388^398^ref.getParent (  ) .replaceChild ( ref.getNameNode (  ) , value ) ;^[CLASS] InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  ref  Node  parent  value  
[BugLab_Argument_Swapping]^ref.getParent (  ) .replaceChild ( value.getNameNode (  ) , ref ) ;^394^^^^^388^398^ref.getParent (  ) .replaceChild ( ref.getNameNode (  ) , value ) ;^[CLASS] InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  ref  Node  parent  value  
[BugLab_Variable_Misuse]^ref.getGrandparent (  ) .replaceChild ( value, value ) ;^392^^^^^388^398^ref.getGrandparent (  ) .replaceChild ( parent, value ) ;^[CLASS] InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  ref  Node  parent  value  
[BugLab_Argument_Swapping]^ref.getGrandparent (  ) .replaceChild ( value, parent ) ;^392^^^^^388^398^ref.getGrandparent (  ) .replaceChild ( parent, value ) ;^[CLASS] InliningBehavior  [METHOD] inlineValue [RETURN_TYPE] void   Var v Reference ref Node value [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  v  Reference  ref  Node  parent  value  
[BugLab_Wrong_Literal]^return true;^407^^^^^405^435^return false;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Literal]^return true;^411^^^^^405^435^return false;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Operator]^if  ( init != null )  {^415^^^^^405^435^if  ( init == null )  {^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Literal]^return true;^416^^^^^405^435^return false;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Operator]^if  ( value != null )  {^420^^^^^405^435^if  ( value == null )  {^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Literal]^return true;^424^^^^^405^435^return false;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Literal]^return true;^429^^^^^405^435^return false;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Operator]^return value.getType (  )  != Token.STRING && isStringWorthInlining ( var, refInfo.references ) ;^433^434^^^^405^435^return value.getType (  )  != Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Operator]^return value.getType (  )  == Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^433^434^^^^405^435^return value.getType (  )  != Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^[CLASS] InliningBehavior  [METHOD] isInlineableDeclaredConstant [RETURN_TYPE] boolean   Var var ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  var  Reference  init  Node  value  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  
[BugLab_Wrong_Operator]^if  ( !inlineAllStrings || !var.isDefine (  )  )  {^441^^^^^440^463^if  ( !inlineAllStrings && !var.isDefine (  )  )  {^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^return len >= inlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^return noInlineBytes >= len;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Argument_Swapping]^return inlineBytes >= noInlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^return noInlineBytes > inlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int len = var.getInitialValue (  >=  ) .getString (  ) .length (  )  + "''".length (  ) ;^442^^^^^440^463^int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int noInlineBytes = "var xx=;".length (  )  + inlineBytes + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Argument_Swapping]^int noInlineBytes = "var xx=;".length (  )  + refs + 4 *  ( len.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  >  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )   <<  len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int / noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )   !=  1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int noInlineBytes = "var xx=;".length (  )  + len  *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )   ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int inlineBytes =  ( noInlineBytes - 1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Argument_Swapping]^int inlineBytes =  ( refs - 1 )  *  ( len.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int + inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len  >>  1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )   <<  1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len - inlineBytes )  *  ( refs.size (  )  - inlineBytes ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len -  )  *  ( refs.size (  )  -  ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^return noInlineBytes < inlineBytes;^459^^^^^440^463^return noInlineBytes >= inlineBytes;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  ||  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )   &  len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int - noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )   ==  1 ) ;^448^449^^^^440^463^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int - inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Operator]^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )   ^  1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len - noInlineBytes )  *  ( refs.size (  )  - noInlineBytes ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^int inlineBytes =  ( len  )  *  ( refs.size (  )   ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^int inlineBytes =  ( len - 1 )  *  ( 2.size (  )  - 1 ) ;^455^^^^^440^463^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Wrong_Literal]^return false;^462^^^^^440^463^return true;^[CLASS] InliningBehavior  [METHOD] isStringWorthInlining [RETURN_TYPE] boolean   Var var Reference> refs [VARIABLES] List  refs  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Var  var  int  inlineBytes  len  noInlineBytes  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( initialization ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( declaration ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( initialization )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^if  ( !isValidDeclaration ( reference ) || !isValidInitialization ( initialization ) || !isValidReference ( declaration )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( reference ) || !isValidReference ( initialization )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( !isValidDeclaration ( declaration ) && !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^476^^^^^473^477^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^476^^^^^461^491^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( reference ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^473^474^475^^^458^488^if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^|| !isValidInitialization ( reference ) || !isValidReference ( reference )  )  {^474^475^^^^459^489^|| !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^|| !isValidReference ( initialization )  )  {^475^^^^^460^490^|| !isValidReference ( reference )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( reference != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( declaration != reference && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^if  ( initialization != declaration && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( declaration != initialization || initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( declaration == initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( declaration >= initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^467^497^if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^484^^^^^482^485^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^484^^^^^469^499^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( initialization.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( declaration.getBasicBlock (  )  != reference.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != declaration.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^if  ( reference.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != declaration.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^if  ( initialization.getBasicBlock (  )  != declaration.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) && declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( declaration.getBasicBlock (  )  == initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  == reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^491^^^^^489^492^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^491^^^^^476^506^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( reference.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^474^504^if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^|| reference.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^490^^^^^475^505^|| declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^|| declaration.getBasicBlock (  )  != initialization.getBasicBlock (  )  )  {^490^^^^^475^505^|| declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^Node value = reference.getAssignedValue (  ) ;^503^^^^^488^518^Node value = initialization.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^Preconditions.checkState ( value == null ) ;^504^^^^^489^519^Preconditions.checkState ( value != null ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.GETPROP && initialization.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^if  ( reference.getType (  )  == Token.GETPROP && value.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  == Token.GETPROP || reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  >= Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  != Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  != reference.getNameNode (  )  )  {^505^506^507^^^490^520^if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^508^^^^^505^509^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Literal]^return true;^508^^^^^493^523^return false;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^&& initialization.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^506^507^^^^491^521^&& reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^&& initialization.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^507^^^^^492^522^&& reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^return canMoveAggressively ( value )  || canMoveModerately ( declaration, reference ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^return canMoveAggressively ( value )  || canMoveModerately ( initialization, declaration ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^return canMoveAggressively ( initialization )  || canMoveModerately ( value, reference ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^return canMoveAggressively ( value )  || canMoveModerately ( reference, initialization ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^return canMoveAggressively ( value )  && canMoveModerately ( initialization, reference ) ;^511^512^^^^496^526^return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Variable_Misuse]^canMoveModerately ( declaration, reference ) ;^512^^^^^497^527^canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Argument_Swapping]^canMoveModerately ( reference, initialization ) ;^512^^^^^497^527^canMoveModerately ( initialization, reference ) ;^[CLASS] InliningBehavior  [METHOD] canInline [RETURN_TYPE] boolean   Reference declaration Reference initialization Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  initialization  reference  Node  value  
[BugLab_Wrong_Operator]^return NodeUtil.isLiteralValue ( value ) && value.getType (  )  == Token.FUNCTION;^521^522^^^^518^523^return NodeUtil.isLiteralValue ( value ) || value.getType (  )  == Token.FUNCTION;^[CLASS] InliningBehavior  [METHOD] canMoveAggressively [RETURN_TYPE] boolean   Node value [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Node  value  
[BugLab_Wrong_Operator]^return NodeUtil.isLiteralValue ( value ) || value.getType (  )  <= Token.FUNCTION;^521^522^^^^518^523^return NodeUtil.isLiteralValue ( value ) || value.getType (  )  == Token.FUNCTION;^[CLASS] InliningBehavior  [METHOD] canMoveAggressively [RETURN_TYPE] boolean   Node value [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Node  value  
[BugLab_Variable_Misuse]^if  ( reference.getParent (  ) .getType (  )  == Token.VAR )  {^536^^^^^532^561^if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^if  ( initialization.getParent (  ) .getType (  )  != Token.VAR )  {^536^^^^^532^561^if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^if  ( initialization.getParent (  ) .getType (  )  >= Token.VAR )  {^536^^^^^532^561^if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^} else if  ( reference.getParent (  ) .getType (  )  == Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^} else if  ( initialization.getParent (  ) .getType (  )  <= Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^} else if  ( initialization.getParent (  ) .getType (  )  != Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^it = NodeIterators.LocalVarMotion.forAssign ( reference.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) ,^544^545^546^547^^532^561^it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) ,^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^Preconditions.checkState ( reference.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^initialization.getNameNode (  ) , reference.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^545^546^547^548^^532^561^initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^initialization.getParent (  ) , reference.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^546^547^548^^^532^561^initialization.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^initialization.getGrandparent (  ) , reference.getGrandparent (  ) .getParent (  )  ) ;^547^548^^^^532^561^initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.this ) ;^542^543^^^^532^561^Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^it = NodeIterators.LocalVarMotion.forVar ( reference.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^537^538^539^540^^532^561^it = NodeIterators.LocalVarMotion.forVar ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^initialization.getNameNode (  ) , reference.getParent (  ) , initialization.getGrandparent (  )  ) ;^538^539^540^^^532^561^initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^initialization.getParent (  ) , reference.getGrandparent (  )  ) ;^539^540^^^^532^561^initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^} else if  ( initialization.getParent (  ) .getType (  )  >= Token.ASSIGN )  {^541^^^^^532^561^} else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^while  ( this.hasNext (  )  )  {^553^^^^^532^561^while  ( it.hasNext (  )  )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Argument_Swapping]^if  ( targetName == curNode )  {^555^^^^^532^561^if  ( curNode == targetName )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^if  ( curNode >= targetName )  {^555^^^^^532^561^if  ( curNode == targetName )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Literal]^return false;^556^^^^^532^561^return true;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Variable_Misuse]^Node curNode = null.next (  ) ;^554^^^^^532^561^Node curNode = it.next (  ) ;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^if  ( curNode <= targetName )  {^555^^^^^532^561^if  ( curNode == targetName )  {^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Literal]^return true;^560^^^^^532^561^return false;^[CLASS] InliningBehavior  [METHOD] canMoveModerately [RETURN_TYPE] boolean   Reference initialization Reference reference [VARIABLES] Iterator  it  Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  reference  Node  curNode  targetName  
[BugLab_Wrong_Operator]^return declaration.getParent (  ) .getType (  )  == Token.VAR || declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^568^569^^^^567^570^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^[CLASS] InliningBehavior  [METHOD] isValidDeclaration [RETURN_TYPE] boolean   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  
[BugLab_Wrong_Operator]^return declaration.getParent (  ) .getType (  )  >= Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^568^569^^^^567^570^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^[CLASS] InliningBehavior  [METHOD] isValidDeclaration [RETURN_TYPE] boolean   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  
[BugLab_Wrong_Operator]^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  == Token.FOR;^568^569^^^^567^570^return declaration.getParent (  ) .getType (  )  == Token.VAR && declaration.getGrandparent (  ) .getType (  )  != Token.FOR;^[CLASS] InliningBehavior  [METHOD] isValidDeclaration [RETURN_TYPE] boolean   Reference declaration [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  declaration  
[BugLab_Wrong_Operator]^if  ( initialization != null )  {^576^^^^^575^588^if  ( initialization == null )  {^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Literal]^return false;^586^^^^^575^588^return true;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Argument_Swapping]^Preconditions.checkState ( initialization.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  >= initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^return initialization.getNameNode (  ) .getFirstChild (  )  == null;^580^^^^^575^588^return initialization.getNameNode (  ) .getFirstChild (  )  != null;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Literal]^return true;^577^^^^^575^588^return false;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^583^584^585^^^575^588^Preconditions.checkState ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == initialization.getNameNode (  )  ) ;^[CLASS] InliningBehavior  [METHOD] isValidInitialization [RETURN_TYPE] boolean   Reference initialization [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  initialization  Node  parent  
[BugLab_Wrong_Operator]^return !reference.isDeclaration (  )  || !reference.isLvalue (  ) ;^594^^^^^593^595^return !reference.isDeclaration (  )  && !reference.isLvalue (  ) ;^[CLASS] InliningBehavior  [METHOD] isValidReference [RETURN_TYPE] boolean   Reference reference [VARIABLES] Set  staleVars  boolean  Map  aliasCandidates  referenceMap  Reference  reference  
[BugLab_Wrong_Literal]^int startingReadRef = i;^605^^^^^590^620^int startingReadRef = 1;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Reference refDecl = refSet.get ( startingReadRef ) ;^606^^^^^591^621^Reference refDecl = refSet.get ( 0 ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( !isValidDeclaration ( refInit )  )  {^607^^^^^592^622^if  ( !isValidDeclaration ( refDecl )  )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^608^^^^^593^623^return false;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( !isValidInitialization ( refDecl )  )  {^612^^^^^597^627^if  ( !isValidInitialization ( refInit )  )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^613^^^^^598^628^return false;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( refInit != refInit )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( refDecl != ref )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^if  ( refInit != refDecl )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^if  ( refDecl >= refInit )  {^616^^^^^601^631^if  ( refDecl != refInit )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Preconditions.checkState ( refDecl == refSet.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^Preconditions.checkState ( refSet == refInit.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^Preconditions.checkState ( refInit > refSet.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Preconditions.checkState ( refInit == refSet.get ( 2 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^startingReadRef = i;^618^^^^^603^633^startingReadRef = 2;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^Preconditions.checkState ( refInit != refSet.get ( 1 )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Preconditions.checkState ( refInit == refSet.get ( i )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^Preconditions.checkState ( refInit == refSet.get ( startingReadRef )  ) ;^617^^^^^602^632^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^if  ( !isValidReference ( refInit )  )  {^623^^^^^608^638^if  ( !isValidReference ( ref )  )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^624^^^^^609^639^return false;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^for  ( startingReadRefnt i = startingReadRef; i < refSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^for  ( int i = startingReadRef; i < refInitSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( int i = refSet; i < startingReadRef.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( startingReadRefnt i = i; i < refSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( refSetnt i = startingReadRef; i < i.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^for  ( refnt i = startingReadRef; i < iSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^for  ( int i = startingReadRef; i <= refSet.size (  ) ; i++ )  {^621^^^^^606^636^for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  {^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Reference ref = refSet.get ( startingReadRef ) ;^622^^^^^607^637^Reference ref = refSet.get ( i ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Argument_Swapping]^Reference ref = i.get ( refSet ) ;^622^^^^^607^637^Reference ref = refSet.get ( i ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Literal]^return true;^629^^^^^614^644^return false;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Variable_Misuse]^Node value = refDecl.getAssignedValue (  ) ;^632^^^^^617^647^Node value = refInit.getAssignedValue (  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^return NodeUtil.isImmutableValue ( value )  || ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^634^635^636^^^619^649^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING && isStringWorthInlining ( v, refInfo.references )  ) ;^634^635^636^^^619^649^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
[BugLab_Wrong_Operator]^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  == Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^634^635^636^^^619^649^return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[CLASS] InliningBehavior  [METHOD] isImmutableAndWellDefinedVariable [RETURN_TYPE] boolean   Var v ReferenceCollection refInfo [VARIABLES] Set  staleVars  boolean  Var  v  Reference  ref  refDecl  refInit  Node  value  List  refSet  Map  aliasCandidates  referenceMap  ReferenceCollection  refInfo  int  i  startingReadRef  
