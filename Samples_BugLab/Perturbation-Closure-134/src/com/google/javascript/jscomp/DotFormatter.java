[BugLab_Wrong_Literal]^this.printAnnotations = true;^67^^^^^64^68^this.printAnnotations = false;^[CLASS] DotFormatter  [METHOD] <init> [RETURN_TYPE] DotFormatter()   [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( inCFG, n, builder, printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( n, builder, inCFG, printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( n, inCFG, printAnnotations, builder ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( builder, inCFG, n, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( n, builder, inCFG, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Wrong_Literal]^new DotFormatter ( n, inCFG, builder, true ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Variable_Misuse]^new DotFormatter ( n, 1, builder, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( builder, inCFG, n, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( inCFG, n, builder, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Argument_Swapping]^new DotFormatter ( n, builder, inCFG, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Wrong_Literal]^new DotFormatter ( n, inCFG, builder, true ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[BugLab_Variable_Misuse]^int keyParent = key ( child ) ;^138^^^^^123^153^int keyParent = key ( parent ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^for  ( Node parent = child.getFirstChild (  ) ; child != null;^141^^^^^126^156^for  ( Node child = parent.getFirstChild (  ) ; child != null;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  ( Node child = parent.getFirstChild (  ) ; child == null;^141^^^^^126^156^for  ( Node child = parent.getFirstChild (  ) ; child != null;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^int keyChild = key ( parent ) ;^143^^^^^141^151^int keyChild = key ( child ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^144^^^^^141^151^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( formatNodeName ( keyCount )  ) ;^145^^^^^141^151^builder.append ( formatNodeName ( keyParent )  ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^146^^^^^141^151^builder.append ( ARROW ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( formatNodeName ( keySucc )  ) ;^147^^^^^141^151^builder.append ( formatNodeName ( keyChild )  ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^traverseNodes ( parent ) ;^150^^^^^141^151^traverseNodes ( child ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^child = parent.getNext (  )  )  {^142^^^^^127^157^child = child.getNext (  )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^int keyChild = key ( parent ) ;^143^^^^^128^158^int keyChild = key ( child ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^for  ( Node child = child.getFirstChild (  ) ; child != null;^141^^^^^126^156^for  ( Node child = parent.getFirstChild (  ) ; child != null;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^144^^^^^129^159^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( formatNodeName ( keySucc )  ) ;^145^^^^^130^160^builder.append ( formatNodeName ( keyParent )  ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^146^^^^^131^161^builder.append ( ARROW ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( formatNodeName ( keySucc )  ) ;^147^^^^^132^162^builder.append ( formatNodeName ( keyChild )  ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^traverseNodes ( parent ) ;^150^^^^^135^165^traverseNodes ( child ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^if  ( cfg != null && cfg.hasNode ( child )  )  {^154^^^^^139^169^if  ( cfg != null && cfg.hasNode ( parent )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( cfg != null || cfg.hasNode ( parent )  )  {^154^^^^^139^169^if  ( cfg != null && cfg.hasNode ( parent )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( cfg == null && cfg.hasNode ( parent )  )  {^154^^^^^139^169^if  ( cfg != null && cfg.hasNode ( parent )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^if  ( cfg == succ.getImplicitReturn (  )  )  {^163^^^^^148^178^if  ( succ == cfg.getImplicitReturn (  )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( succ != cfg.getImplicitReturn (  )  )  {^163^^^^^148^178^if  ( succ == cfg.getImplicitReturn (  )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^toNode = formatNodeName ( keyCount ) ;^167^^^^^163^168^toNode = formatNodeName ( keySucc ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^toNode = formatNodeName ( keyParent ) ;^167^^^^^163^168^toNode = formatNodeName ( keySucc ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^for  ( keySuccnt i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < keySucc; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < edgeListList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  >  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  ||  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( succ <= cfg.getImplicitReturn (  )  )  {^163^^^^^148^178^if  ( succ == cfg.getImplicitReturn (  )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^toNode = formatNodeName ( keyParent ) ;^167^^^^^152^182^toNode = formatNodeName ( keySucc ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^edgeList[i] = formatNodeName ( keySucc )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^edgeList[i] = formatNodeName ( keyParent )  + ARROW + LINE + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^edgeList[i] = formatNodeName ( keyParent )  + LINE + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^edgeList[i] = formatNodeName ( toNode )  + ARROW + keyParent + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^edgeList[i] = formatNodeName ( keyParent )  + ARROW + edge + " [label=\"" + toNode.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  &&  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  ^  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  >  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  &  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  <=  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  <  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )   >=  ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = outEdges.get ( keySucc ) ;^159^^^^^144^174^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = outEdges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = i.get ( outEdges ) ;^159^^^^^144^174^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = outEdges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^for  ( keySuccnt i = 0; i < edgeList.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < keySucc; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^for  ( edgeList.lengthnt i = 0; i < i; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == edgeList.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Literal]^for  ( int i = ; i < edgeList.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^178^^^^^163^193^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^edgeList[i] = formatNodeName ( keyParent )  + toNode + ARROW + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  >>  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  |  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  ||  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  >=  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )   ^  ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^List<DiGraphEdge<Node, Branch>> outEdges = cfg.getOutEdges ( child ) ;^155^156^^^^140^170^List<DiGraphEdge<Node, Branch>> outEdges = cfg.getOutEdges ( parent ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^List<DiGraphEdge<Node, Branch>> outEdges = parent.getOutEdges ( cfg ) ;^155^156^^^^140^170^List<DiGraphEdge<Node, Branch>> outEdges = cfg.getOutEdges ( parent ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = outEdges.get ( keyParent ) ;^159^^^^^144^174^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = outEdges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < edgeList.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^cfg.getOutEdges ( child ) ;^156^^^^^141^171^cfg.getOutEdges ( parent ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^edgeList[i] = formatNodeName ( keyCount )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( succ >= cfg.getImplicitReturn (  )  )  {^163^^^^^148^178^if  ( succ == cfg.getImplicitReturn (  )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  <  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = 0; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )   instanceof   + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  ==  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )   &  ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^+ 0.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^171^172^^^^156^186^+ edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= edgeList.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^edgeList[i] = formatNodeName ( keyParent )  + toNode + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^edgeList[i] = formatNodeName ( edge )  + ARROW + toNode + " [label=\"" + keyParent.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  <<  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )  !=  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^edgeList[i] = formatNodeName ( keyParent )   <  ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < edgeList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < edgeList.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^if  ( parent != null && cfg.hasNode ( cfg )  )  {^154^^^^^139^169^if  ( cfg != null && cfg.hasNode ( parent )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^DiGraphNode<Node, Branch> succ = 4.getDestination (  ) ;^160^^^^^145^175^DiGraphNode<Node, Branch> succ = edge.getDestination (  ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^int keySucc = key ( 3.getValue (  )  ) ;^166^^^^^151^181^int keySucc = key ( succ.getValue (  )  ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^Integer key = n.get ( assignments ) ;^185^^^^^184^212^Integer key = assignments.get ( n ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^if  ( n == keyull )  {^186^^^^^184^212^if  ( key == null )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( key != null )  {^186^^^^^184^212^if  ( key == null )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( type == null )  {^194^^^^^184^212^if  ( type != null )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^if  ( cfg && printAnnotations != null && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( printAnnotations || cfg != null && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( printAnnotations && cfg == null && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( annotation == null )  {^200^^^^^184^212^if  ( annotation != null )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^Object annotation = n.getNode ( cfg ) .getAnnotation (  ) ;^199^^^^^184^212^Object annotation = cfg.getNode ( n ) .getAnnotation (  ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Wrong_Operator]^if  ( n.getJSDocInfo (  )  == null )  {^206^^^^^184^212^if  ( n.getJSDocInfo (  )  != null )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^assignments.put ( key, n ) ;^188^^^^^184^212^assignments.put ( n, key ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^189^^^^^184^212^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Argument_Swapping]^if  ( printAnnotations && n != cfgull && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^Object annotation = 3.getNode ( n ) .getAnnotation (  ) ;^199^^^^^184^212^Object annotation = cfg.getNode ( n ) .getAnnotation (  ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[BugLab_Variable_Misuse]^return Token.name ( keyParent ) ;^221^^^^^214^223^return Token.name ( type ) ;^[CLASS] DotFormatter  [METHOD] name [RETURN_TYPE] String   Node n [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^231^^^^^229^233^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] formatPreamble [RETURN_TYPE] void   [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^builder.append ( edgeSymbol ) ;^251^^^^^236^266^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^final String edgeSymbol = graph.isDirected (  )  ? toNode : LINE;^254^^^^^239^269^final String edgeSymbol = graph.isDirected (  )  ? ARROW : LINE;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^final String edgeSymbol = LINE.isDirected (  )  ? ARROW : graph;^254^^^^^239^269^final String edgeSymbol = graph.isDirected (  )  ? ARROW : LINE;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^final String edgeSymbol = graph.isDirected (  )  ? LINE : ARROW;^254^^^^^239^269^final String edgeSymbol = graph.isDirected (  )  ? ARROW : LINE;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^for  ( typent i = 0; i < nodeNames.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < type; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^for  ( nodeNamesnt i = 0; i < i.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^for  ( nodeNames.lengthnt i = 0; i < i; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nodeNames.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < nodeNames.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < nodeNames.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  <  ( int i = 0; i < nodeNames.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nodeNames.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  |  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  <<  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  >>  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  ||  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  )   >=  " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^GraphvizNode gNode = nodes.get ( keySucc ) ;^261^^^^^246^276^GraphvizNode gNode = nodes.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^GraphvizNode gNode = i.get ( nodes ) ;^261^^^^^246^276^GraphvizNode gNode = nodes.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^GraphvizNode gNode = nodes.get ( type ) ;^261^^^^^246^276^GraphvizNode gNode = nodes.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  >  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  ^  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  ==  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  <=  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^nodeNames[i] = gNode.getId (  )   |  " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^262^263^^^^247^277^nodeNames[i] = gNode.getId (  )  + " [label=\"" + gNode.getLabel (  )  + "\" color=\"" + gNode.getColor (  )  + "\"]";^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^Arrays.sort ( edgeNames ) ;^268^^^^^253^283^Arrays.sort ( nodeNames ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^272^^^^^257^287^builder.append ( nodeName ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^for  ( keySuccnt i = 0; i < edgeNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nodeNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < keySucc; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^for  ( edgeNames.lengthnt i = 0; i < i; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < edge.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^for  ( edgent i = 0; i < iNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > edgeNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < edgeNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < edgeNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^edgeNames[i] = edge.getNode1Id (  )  + toNode + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^edgeNames[i] = edgeSymbol.getNode1Id (  )  + edge + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^edgeNames[i] = edge.getNode1Id (  >>  )  + edgeSymbol + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^edgeNames[i] = edge.getNode1Id (  )   &  edgeSymbol + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^GraphvizEdge edge = null.get ( i ) ;^281^^^^^266^296^GraphvizEdge edge = edges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^GraphvizEdge edge = edges.get ( type ) ;^281^^^^^266^296^GraphvizEdge edge = edges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Argument_Swapping]^GraphvizEdge edge = i.get ( edges ) ;^281^^^^^266^296^GraphvizEdge edge = edges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^edgeNames[i] = edge.getNode1Id (  ==  )  + edgeSymbol + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Wrong_Operator]^edgeNames[i] = edge.getNode1Id (  )   !=  edgeSymbol + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^Arrays.sort ( nodeNames ) ;^286^^^^^271^301^Arrays.sort ( edgeNames ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[BugLab_Variable_Misuse]^builder.append ( toNode ) ;^289^^^^^274^304^builder.append ( INDENT ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
