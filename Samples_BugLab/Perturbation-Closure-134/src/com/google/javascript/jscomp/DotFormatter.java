[buglab_swap_variables]^new DotFormatter ( inCFG, n, builder, printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter (  inCFG, builder, printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, builder, inCFG, printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n,  builder, printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, inCFG,  printAnnotations ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( printAnnotations, inCFG, builder, n ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, inCFG, builder ) ;^101^^^^^97^103^new DotFormatter ( n, inCFG, builder, printAnnotations ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG boolean printAnnotations [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( inCFG, n, builder, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter (  inCFG, builder, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, builder, inCFG, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n,  builder, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( builder, inCFG, n, false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, inCFG,  false ) ;^114^^^^^111^116^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   Node n Node> inCFG [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( builder, inCFG, n, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter (  inCFG, builder, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, builder, inCFG, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n,  builder, false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^new DotFormatter ( n, inCFG,  false ) ;^126^^^^^124^127^new DotFormatter ( n, inCFG, builder, false ) ;^[CLASS] DotFormatter  [METHOD] appendDot [RETURN_TYPE] void   Node n Node> inCFG Appendable builder [VARIABLES] boolean  printAnnotations  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  String  ARROW  INDENT  LINE  int  keyCount  
[buglab_swap_variables]^if  ( cfg == succ.getImplicitReturn (  )  )  {^163^^^^^148^178^if  ( succ == cfg.getImplicitReturn (  )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^for  ( edgeList.lengthnt i = 0; i < i; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^edgeList[i] = formatNodeName ( keyParent )  + toNode + ARROW + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^edgeList[i] = formatNodeName ( keyParent )  + ARROW + edge + " [label=\"" + toNode.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = i.get ( outEdges ) ;^159^^^^^144^174^DiGraphEdge<Node, ControlFlowGraph.Branch> edge = outEdges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^for  ( edgeList.lengthnt i = 0; i < i; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^for  ( int i = 0; i < edgeList.length.length; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^edgeList[i] = formatNodeName ( keyParent )  + edge + toNode + " [label=\"" + ARROW.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^edgeList[i] = formatNodeName ( ARROW )  + keyParent + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^List<DiGraphEdge<Node, Branch>> outEdges = parent.getOutEdges ( cfg ) ;^155^156^^^^140^170^List<DiGraphEdge<Node, Branch>> outEdges = cfg.getOutEdges ( parent ) ;^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^for  ( int i = 0; i < edgeListList.length; i++ )  {^158^^^^^143^173^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^edgeList[i] = formatNodeName ( toNode )  + ARROW + keyParent + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^170^171^172^^^155^185^edgeList[i] = formatNodeName ( keyParent )  + ARROW + toNode + " [label=\"" + edge.getValue (  ) .toString (  )  + "\", " + "fontcolor=\"red\", " + "weight=0.01, color=\"red\"];\n";^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^for  ( int i = 0; i < edgeList; i++ )  {^177^^^^^162^192^for  ( int i = 0; i < edgeList.length; i++ )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^if  ( parent != null && cfg.hasNode ( cfg )  )  {^154^^^^^139^169^if  ( cfg != null && cfg.hasNode ( parent )  )  {^[CLASS] DotFormatter  [METHOD] traverseNodes [RETURN_TYPE] void   Node parent [VARIABLES] DiGraphNode  succ  boolean  printAnnotations  DiGraphEdge  edge  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  child  parent  List  outEdges  String  ARROW  INDENT  LINE  toNode  String[]  edgeList  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^Integer key = n.get ( assignments ) ;^185^^^^^184^212^Integer key = assignments.get ( n ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^if  ( n == keyull )  {^186^^^^^184^212^if  ( key == null )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^if  ( n && cfg != printAnnotationsull && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^if  ( cfg && printAnnotations != null && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^Object annotation = n.getNode ( cfg ) .getAnnotation (  ) ;^199^^^^^184^212^Object annotation = cfg.getNode ( n ) .getAnnotation (  ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^assignments.put ( key, n ) ;^188^^^^^184^212^assignments.put ( n, key ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^assignments.put (  key ) ;^188^^^^^184^212^assignments.put ( n, key ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^assignments.put ( n ) ;^188^^^^^184^212^assignments.put ( n, key ) ;^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^if  ( printAnnotations && n != cfgull && cfg.hasNode ( n )  )  {^198^^^^^184^212^if  ( printAnnotations && cfg != null && cfg.hasNode ( n )  )  {^[CLASS] DotFormatter  [METHOD] key [RETURN_TYPE] int   Node n [VARIABLES] Integer  key  boolean  printAnnotations  JSType  type  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  Node  n  Object  annotation  String  ARROW  INDENT  LINE  toNode  int  i  keyChild  keyCount  keyParent  keySucc  
[buglab_swap_variables]^final String edgeSymbol = ARROW.isDirected (  )  ? graph : LINE;^254^^^^^239^269^final String edgeSymbol = graph.isDirected (  )  ? ARROW : LINE;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^final String edgeSymbol = graph.isDirected (  )  ? LINE : ARROW;^254^^^^^239^269^final String edgeSymbol = graph.isDirected (  )  ? ARROW : LINE;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^for  ( nodeNamesnt i = 0; i < i.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^for  ( int i = 0; i < nodeNames.length.length; i++ )  {^260^^^^^245^275^for  ( int i = 0; i < nodeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^GraphvizNode gNode = i.get ( nodes ) ;^261^^^^^246^276^GraphvizNode gNode = nodes.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^for  ( edgeNames.lengthnt i = 0; i < i; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^for  ( edgeNamesnt i = 0; i < i.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^for  ( edgent i = 0; i < iNames.length; i++ )  {^280^^^^^265^295^for  ( int i = 0; i < edgeNames.length; i++ )  {^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^edgeNames[i] = edgeSymbol.getNode1Id (  )  + edge + edge.getNode2Id (  ) ;^282^^^^^267^297^edgeNames[i] = edge.getNode1Id (  )  + edgeSymbol + edge.getNode2Id (  ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
[buglab_swap_variables]^GraphvizEdge edge = i.get ( edges ) ;^281^^^^^266^296^GraphvizEdge edge = edges.get ( i ) ;^[CLASS] DotFormatter  [METHOD] toDot [RETURN_TYPE] String   GraphvizGraph graph [VARIABLES] boolean  printAnnotations  StringBuilder  builder  HashMap  assignments  Appendable  builder  ControlFlowGraph  cfg  inCFG  GraphvizNode  gNode  GraphvizEdge  edge  List  edges  nodes  String  ARROW  INDENT  LINE  edgeName  edgeSymbol  nodeName  toNode  GraphvizGraph  graph  String[]  edgeNames  nodeNames  int  i  keyChild  keyCount  keyParent  keySucc  type  
