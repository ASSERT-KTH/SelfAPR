[buglab_swap_variables]^NodeTraversal externsTraversal = new NodeTraversal ( scopeCreator, new Traversal ( true ) , compiler ) ;^89^90^^^^78^102^NodeTraversal externsTraversal = new NodeTraversal ( compiler, new Traversal ( true ) , scopeCreator ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^NodeTraversal externsTraversal = new NodeTraversal ( compiler, new Traversal ( true )  ) ;^89^90^^^^78^102^NodeTraversal externsTraversal = new NodeTraversal ( compiler, new Traversal ( true ) , scopeCreator ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^NodeTraversal externsTraversal = new NodeTraversal (  new Traversal ( true ) , scopeCreator ) ;^89^90^^^^78^102^NodeTraversal externsTraversal = new NodeTraversal ( compiler, new Traversal ( true ) , scopeCreator ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^NodeTraversal codeTraversal = new NodeTraversal ( scopeCreator, new Traversal ( false ) , compiler ) ;^91^92^^^^78^102^NodeTraversal codeTraversal = new NodeTraversal ( compiler, new Traversal ( false ) , scopeCreator ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^NodeTraversal codeTraversal = new NodeTraversal ( compiler, new Traversal ( false )  ) ;^91^92^^^^78^102^NodeTraversal codeTraversal = new NodeTraversal ( compiler, new Traversal ( false ) , scopeCreator ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^NodeTraversal codeTraversal = new NodeTraversal (  new Traversal ( false ) , scopeCreator ) ;^91^92^^^^78^102^NodeTraversal codeTraversal = new NodeTraversal ( compiler, new Traversal ( false ) , scopeCreator ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^externsTraversal.traverseWithScope (  topScope ) ;^95^^^^^78^102^externsTraversal.traverseWithScope ( externs, topScope ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^externsTraversal.traverseWithScope ( externs ) ;^95^^^^^78^102^externsTraversal.traverseWithScope ( externs, topScope ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^codeTraversal.traverseWithScope (  topScope ) ;^96^^^^^78^102^codeTraversal.traverseWithScope ( root, topScope ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^codeTraversal.traverseWithScope ( topScope, root ) ;^96^^^^^78^102^codeTraversal.traverseWithScope ( root, topScope ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^codeTraversal.traverseWithScope ( root ) ;^96^^^^^78^102^codeTraversal.traverseWithScope ( root, topScope ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^externsTraversal.traverseWithScope ( topScope, externs ) ;^95^^^^^78^102^externsTraversal.traverseWithScope ( externs, topScope ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  topScope  NodeTraversal  codeTraversal  externsTraversal  Node  externs  root  ArrayList  currentFunctionStack  ScopeCreator  scopeCreator  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( gParent, name, type, root, parent, t, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, parent, type, root, name, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, type, name, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, root, type, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( type, name, t, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, parent, type, root, name, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, root, type, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( root, name, type, t, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( gParent, parent.getFirstChild (  ) , type, parent, t, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , gParent, parent, type, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( type, parent.getFirstChild (  ) , t, parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , gParent, parent, type, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^String name = NodeUtil.getFunctionName ( parent, root ) ;^125^^^^^110^140^String name = NodeUtil.getFunctionName ( root, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^String name = NodeUtil.getFunctionName (  parent ) ;^125^^^^^110^140^String name = NodeUtil.getFunctionName ( root, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^String name = NodeUtil.getFunctionName ( root ) ;^125^^^^^110^140^String name = NodeUtil.getFunctionName ( root, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( parent, t.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( type, parent.getFirstChild (  ) , t, parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( type, parent.getFirstChild (  ) , t, parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( name, t, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, gParent, type, root, parent, name, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, parent, root, type, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, root, type, name, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( parent, name, type, root, t, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, gParent, type, root, parent, name, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, parent, root, type, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( root, name, type, t, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, gParent, type, root, parent, name, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, parent, root, type, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( parent, name, type, root, t, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, root, type, name, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, gParent, root, parent, type, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( parent, t.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( parent, t.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( gParent, parent.getFirstChild (  ) , type, parent, t, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( gParent, parent.getFirstChild (  ) , type, parent, t, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, type.getFirstChild (  ) , parent, parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( parent, name, type, root, t, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, parent, type, root, name, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, root, type, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, root, type, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^recordStaticNameDefinition ( root, name, type, t, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^if  ( isLocalNameReference ( n, t )  )  {^185^^^^^170^200^if  ( isLocalNameReference ( t, n )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^if  ( isLocalNameReference (  n )  )  {^185^^^^^170^200^if  ( isLocalNameReference ( t, n )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^if  ( isLocalNameReference ( t )  )  {^185^^^^^170^200^if  ( isLocalNameReference ( t, n )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^} else if  ( isStaticNameReference ( t, n.getScope (  )  )  )  {^192^^^^^177^207^} else if  ( isStaticNameReference ( n, t.getScope (  )  )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^} else if  ( isStaticNameReference (  t.getScope (  )  )  )  {^192^^^^^177^207^} else if  ( isStaticNameReference ( n, t.getScope (  )  )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^} else if  ( isStaticNameReference ( n.getScope (  )  )  )  {^192^^^^^177^207^} else if  ( isStaticNameReference ( n, t.getScope (  )  )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( n, t, parent ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordStaticNameUse (  n, parent ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( t, parent, n ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( t,  parent ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( t, n ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( parent, n, t ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( parent, n, t ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( n, t, parent ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordPrototypePropUse (  n, parent ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( t,  parent ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( t, parent, n ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( t, n ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^if  ( NodeUtil.isName ( rhs )  || NodeUtil.isGetProp ( lhs )  || NodeUtil.isGetProp ( lhs )  )  {^206^207^208^^^191^221^if  ( NodeUtil.isName ( lhs )  || NodeUtil.isGetProp ( lhs )  || NodeUtil.isGetProp ( rhs )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( parent, lhs, getType ( rhs ) , n, t, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition (  lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name lhsame = recordPrototypePropDefinition ( t, n, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t,  getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( parent ) , n, rhs, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name rhsame = recordPrototypePropDefinition ( t, lhs, getType ( n ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) ,  parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n,  parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( lhs, t, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, parent, getType ( rhs ) , n, lhs, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name tame = recordPrototypePropDefinition ( n, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name parentame = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, n, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, rhs, getType ( lhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name tame = recordPrototypePropDefinition ( n, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition (  lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name lhsame = recordPrototypePropDefinition ( t, n, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t,  getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, rhs, getType ( lhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) ,  parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, parent, getType ( rhs ) , n, lhs, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n,  parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( lhs, t, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( parent ) , n, rhs, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name rhsame = recordPrototypePropDefinition ( t, lhs, getType ( n ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name parentame = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, n, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( parent, lhs, getType ( rhs ) , n, t, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( parent, n, t ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( rhs, lhs ) ;^215^^^^^200^230^maybeAliasNamesOnAssign ( lhs, rhs ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign (  rhs ) ;^215^^^^^200^230^maybeAliasNamesOnAssign ( lhs, rhs ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( lhs ) ;^215^^^^^200^230^maybeAliasNamesOnAssign ( lhs, rhs ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( assignedValue, varName ) ;^225^^^^^210^240^maybeAliasNamesOnAssign ( varName, assignedValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign (  assignedValue ) ;^225^^^^^210^240^maybeAliasNamesOnAssign ( varName, assignedValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( varName ) ;^225^^^^^210^240^maybeAliasNamesOnAssign ( varName, assignedValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^if  (  ( NodeUtil.isName ( rhs )  || NodeUtil.isGetProp ( lhs )  )  && containsName ( lhs )  && !NodeUtil.isFunction ( rhs )  && !NodeUtil.isNew ( rhs )  )  {^283^284^285^286^^282^290^if  (  ( NodeUtil.isName ( lhs )  || NodeUtil.isGetProp ( lhs )  )  && containsName ( rhs )  && !NodeUtil.isFunction ( rhs )  && !NodeUtil.isNew ( rhs )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] maybeAliasNamesOnAssign [RETURN_TYPE] void   Node lhs Node rhs [VARIABLES] ArrayList  currentFunctionStack  Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NameReferenceGraph  graph  Node  lhs  rhs  
[buglab_swap_variables]^graph.defineNameIfNotExists (  isExtern ) .setAliased ( true ) ;^293^^^^^292^294^graph.defineNameIfNotExists ( name, isExtern ) .setAliased ( true ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] defineAndAlias [RETURN_TYPE] void   String name [VARIABLES] ArrayList  currentFunctionStack  Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists ( name ) .setAliased ( true ) ;^293^^^^^292^294^graph.defineNameIfNotExists ( name, isExtern ) .setAliased ( true ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] defineAndAlias [RETURN_TYPE] void   String name [VARIABLES] ArrayList  currentFunctionStack  Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  String  name  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists ( isExtern.getFirstChild (  ) .getQualifiedName (  ) , getProp ) .markExposedToCallOrApply (  ) ;^312^313^^^^297^327^graph.defineNameIfNotExists ( getProp.getFirstChild (  ) .getQualifiedName (  ) , isExtern ) .markExposedToCallOrApply (  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Node  call  getProp  obj  symbol  ArrayList  currentFunctionStack  String  propQName  qName  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists ( getProp.getFirstChild (  ) .getQualifiedName (  )  ) .markExposedToCallOrApply (  ) ;^312^313^^^^297^327^graph.defineNameIfNotExists ( getProp.getFirstChild (  ) .getQualifiedName (  ) , isExtern ) .markExposedToCallOrApply (  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Node  call  getProp  obj  symbol  ArrayList  currentFunctionStack  String  propQName  qName  NameReferenceGraph  graph  
[buglab_swap_variables]^if  ( obj == null || qName.getNext (  )  != null )  {^328^^^^^313^343^if  ( qName == null || obj.getNext (  )  != null )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Node  call  getProp  obj  symbol  ArrayList  currentFunctionStack  String  propQName  qName  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists (  false ) .markExported (  ) ;^332^^^^^317^347^graph.defineNameIfNotExists ( qName, false ) .markExported (  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Node  call  getProp  obj  symbol  ArrayList  currentFunctionStack  String  propQName  qName  NameReferenceGraph  graph  
[buglab_swap_variables]^Var v = n.getScope (  ) .getVar ( t.getString (  )  ) ;^342^^^^^338^346^Var v = t.getScope (  ) .getVar ( n.getString (  )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] isLocalNameReference [RETURN_TYPE] boolean   NodeTraversal t Node n [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Var  v  Node  n  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^return qName.isDeclared ( scope, true ) ;^361^^^^^351^362^return scope.isDeclared ( qName, true ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] isStaticNameReference [RETURN_TYPE] boolean   Node n Scope scope [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  scope  Node  n  ArrayList  currentFunctionStack  String  qName  NameReferenceGraph  graph  
[buglab_swap_variables]^return scope.isDeclared (  true ) ;^361^^^^^351^362^return scope.isDeclared ( qName, true ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] isStaticNameReference [RETURN_TYPE] boolean   Node n Scope scope [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Scope  scope  Node  n  ArrayList  currentFunctionStack  String  qName  NameReferenceGraph  graph  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( isExtern, name ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists (  isExtern ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = name.defineNameIfNotExists ( graph, isExtern ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( name ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( rValue,  ( FunctionType )  type, n, parent, parent.getParent (  ) , name ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface (   ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( parentame,  ( FunctionType )  type, n, n, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type,  parent, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n,  parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( rValueame,  ( FunctionType )  type, n, parent, parent.getParent (  ) , n ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  )  ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, rValue, parent.getParent (  ) , parent ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = isExtern.defineNameIfNotExists ( name, graph ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  ArrayList  currentFunctionStack  String  name  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^recordClassConstructorOrInterface ( classType, className, null, null, null, null ) ;^422^423^^^^406^435^recordClassConstructorOrInterface ( className, classType, null, null, null, null ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^recordClassConstructorOrInterface (  classType, null, null, null, null ) ;^422^423^^^^406^435^recordClassConstructorOrInterface ( className, classType, null, null, null, null ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^recordClassConstructorOrInterface ( className,  null, null, null, null ) ;^422^423^^^^406^435^recordClassConstructorOrInterface ( className, classType, null, null, null, null ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^String classNameStr = qName + ".prototype." + NodeUtil.getPrototypePropertyName ( qName ) ;^425^426^^^^406^435^String qNameStr = className + ".prototype." + NodeUtil.getPrototypePropertyName ( qName ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = qNameStr.defineNameIfNotExists ( graph, isExtern ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = graph.defineNameIfNotExists (  isExtern ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = isExtern.defineNameIfNotExists ( qNameStr, graph ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Preconditions.checkNotNull ( qNameStr, prototypeProp + " should be in the name graph as a node." ) ;^428^429^^^^406^435^Preconditions.checkNotNull ( prototypeProp, qNameStr + " should be in the name graph as a node." ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Preconditions.checkNotNull (  qNameStr + " should be in the name graph as a node." ) ;^428^429^^^^406^435^Preconditions.checkNotNull ( prototypeProp, qNameStr + " should be in the name graph as a node." ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Preconditions.checkNotNull ( prototypeProp + " should be in the name graph as a node." ) ;^428^429^^^^406^435^Preconditions.checkNotNull ( prototypeProp, qNameStr + " should be in the name graph as a node." ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  ArrayList  currentFunctionStack  String  className  qNameStr  NameReferenceGraph  graph  Name  prototypeProp  
[buglab_swap_variables]^Reference reference = parentew Reference ( n, n ) ;^443^^^^^437^449^Reference reference = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Reference reference = new Reference (  parent ) ;^443^^^^^437^449^Reference reference = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Reference reference = new Reference ( n ) ;^443^^^^^437^449^Reference reference = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name graphame = n.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name isExtername = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , n ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  )  ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^Name name = isExtern.defineNameIfNotExists ( n.getQualifiedName (  ) , graph ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , name, reference ) ;^446^^^^^437^449^graph.connect ( getNamedContainingFunction (  ) , reference, name ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) ,  name ) ;^446^^^^^437^449^graph.connect ( getNamedContainingFunction (  ) , reference, name ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , reference ) ;^446^^^^^437^449^graph.connect ( getNamedContainingFunction (  ) , reference, name ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  Name  name  
[buglab_swap_variables]^instanceType = instanceType != null ? boxedType : boxedType;^457^^^^^452^480^instanceType = boxedType != null ? boxedType : instanceType;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( ref, propName, constructor ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSuperClassPrototypePropUse (  propName, ref ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( constructor, ref, propName ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( constructor,  ref ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( constructor, propName ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( propName, constructor, ref ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse (  propName, ref ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( constructor,  ref ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( constructor, ref, propName ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( constructor, propName ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( propName, constructor, ref ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^Reference ref = parentew Reference ( n, n ) ;^465^^^^^452^480^Reference ref = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^Reference ref = new Reference (  parent ) ;^465^^^^^452^480^Reference ref = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^Reference ref = new Reference ( n ) ;^465^^^^^452^480^Reference ref = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( ref, propName, constructor ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( parent, n, t ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^if  ( n != constructorull )  {^468^^^^^452^480^if  ( constructor != null )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  ObjectType  objType  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  ArrayList  currentFunctionStack  String  propName  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , superClass, graph.defineNameIfNotExists ( ref.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) ,  graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + superClass, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." +  false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, prop.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + graph, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + superClass, false )  ) ;^491^492^^^^485^498^graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." +  false )  ) ;^491^492^^^^485^498^graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^if  ( prop.getPrototype (  ) .hasOwnProperty ( superClass )  )  {^489^^^^^485^498^if  ( superClass.getPrototype (  ) .hasOwnProperty ( prop )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , prop, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + ref, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, superClass.defineNameIfNotExists ( graph.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , graph, ref.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  superClass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^if  ( prop.getPrototype (  ) .hasOwnProperty ( classType )  )  {^506^^^^^504^516^if  ( classType.getPrototype (  ) .hasOwnProperty ( prop )  )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , prop, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + ref, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) ,  graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , classType, graph.defineNameIfNotExists ( ref.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, prop.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + graph, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." +  false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." +  false )  ) ;^508^509^^^^504^516^graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + classType, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, classType.defineNameIfNotExists ( graph.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( prop, subclass, ref ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse (  prop, ref ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( subclass,  ref ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( subclass, ref, prop ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( subclass, prop ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( ref, prop, subclass ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  Reference  ref  FunctionType  classType  subclass  ArrayList  currentFunctionStack  String  prop  NameReferenceGraph  graph  
[buglab_swap_variables]^Reference ref = parentew Reference ( n, n ) ;^524^^^^^518^529^Reference ref = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^Reference ref = new Reference (  parent ) ;^524^^^^^518^529^Reference ref = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^Reference ref = new Reference ( n ) ;^524^^^^^518^529^Reference ref = new Reference ( n, parent ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) ew Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^526^527^^^^518^529^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^unknownNameUse.put ( ref.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , n )  ) ;^526^527^^^^518^529^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  )  )  ) ;^526^527^^^^518^529^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  ArrayList  currentFunctionStack  NameReferenceGraph  graph  
[buglab_swap_variables]^Name symbol = name.defineNameIfNotExists ( graph, isExtern ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists (  isExtern ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = isExtern.defineNameIfNotExists ( name, graph ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( isExtern, name ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( name ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^if  ( n != rhsull )  {^540^^^^^535^555^if  ( rhs != null )  {^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^graph.defineNameIfNotExists ( prop + ".prototype." + name, isExtern ) ;^551^552^^^^535^555^graph.defineNameIfNotExists ( name + ".prototype." + prop, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^graph.defineNameIfNotExists ( name + ".prototype." +  isExtern ) ;^551^552^^^^535^555^graph.defineNameIfNotExists ( name + ".prototype." + prop, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^graph.defineNameIfNotExists ( name + ".prototype." + prop ) ;^551^552^^^^535^555^graph.defineNameIfNotExists ( name + ".prototype." + prop, isExtern ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] Multimap  unknownNameUse  ObjectType  prototype  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  FunctionType  type  Node  gParent  n  parent  rhs  ArrayList  currentFunctionStack  String  name  prop  NameReferenceGraph  graph  Name  symbol  
[buglab_swap_variables]^graph.connect ( use.getFirst (  ) .getSecond (  ) , name ) ;^568^^^^^558^572^graph.connect ( use.getFirst (  ) , use.getSecond (  ) , name ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] connectUnknowns [RETURN_TYPE] void   [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  ArrayList  currentFunctionStack  Collection  uses  GraphNode  node  String  propName  NameReferenceGraph  graph  Name  name  Pair  use  
[buglab_swap_variables]^graph.connect ( use.getFirst (  ) , use.getSecond (  )  ) ;^568^^^^^558^572^graph.connect ( use.getFirst (  ) , use.getSecond (  ) , name ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] connectUnknowns [RETURN_TYPE] void   [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  ArrayList  currentFunctionStack  Collection  uses  GraphNode  node  String  propName  NameReferenceGraph  graph  Name  name  Pair  use  
[buglab_swap_variables]^Collection<Pair<Name, Reference>> uses = propName.get ( unknownNameUse ) ;^565^^^^^558^572^Collection<Pair<Name, Reference>> uses = unknownNameUse.get ( propName ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] connectUnknowns [RETURN_TYPE] void   [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  ArrayList  currentFunctionStack  Collection  uses  GraphNode  node  String  propName  NameReferenceGraph  graph  Name  name  Pair  use  
[buglab_swap_variables]^Name cf = pos.get ( currentFunctionStack ) ;^617^^^^^613^625^Name cf = currentFunctionStack.get ( pos ) ;^[CLASS] NameReferenceGraphConstruction Traversal  [METHOD] getNamedContainingFunction [RETURN_TYPE] Name   [VARIABLES] Multimap  unknownNameUse  AbstractCompiler  compiler  boolean  CONSERVATIVE  isExtern  ArrayList  currentFunctionStack  NameReferenceGraph  graph  int  pos  Name  cf  containingFn  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( root, name, type, t, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( name, t, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( type, name, t, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( gParent, name, type, root, parent, t, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( gParent, name, type, root, parent, t, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, gParent, type, root, parent, name, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( type, name, t, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( type, parent.getFirstChild (  ) , t, parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, type.getFirstChild (  ) , parent, parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( parent, t.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, type.getFirstChild (  ) , parent, parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^String name = NodeUtil.getFunctionName ( parent, root ) ;^125^^^^^110^140^String name = NodeUtil.getFunctionName ( root, parent ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^String name = NodeUtil.getFunctionName (  parent ) ;^125^^^^^110^140^String name = NodeUtil.getFunctionName ( root, parent ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^String name = NodeUtil.getFunctionName ( root ) ;^125^^^^^110^140^String name = NodeUtil.getFunctionName ( root, parent ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( parent, t.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( gParent, parent.getFirstChild (  ) , type, parent, t, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( ggParent, parent.getFirstChild (  ) , type, parent, gParent, t )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition (  parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type,  gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , gParent, parent, type, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) ,  parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent,  ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( name, t, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, gParent, type, root, parent, name, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( type, name, t, root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( type, name, t, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition (  name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( name, t, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t,  type, root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, root, type, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name,  root, parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, gParent, parent, root, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type,  parent, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( parent, name, type, root, t, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root,  gParent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( gParent, name, type, root, parent, t, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, parent,  root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, gParent, type, root, parent, name, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, gParent, root, parent, type, root.getLastChild (  )  )  ) ;^148^149^150^^^142^151^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, parent, root, type, gParent, root.getLastChild (  )  )  ) ;^149^150^^^^142^151^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( ggParent, parent.getFirstChild (  ) , type, parent, gParent, t )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( gParent, parent.getFirstChild (  ) , type, parent, t, ggParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, ggParent, gParent )  ) ;^144^145^146^^^142^151^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( gParent, parent.getFirstChild (  ) , type, parent, t, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^145^146^^^^142^151^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, ggParent.getFirstChild (  ) , type, parent, gParent, parent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordPrototypePropDefinition ( t, type.getFirstChild (  ) , parent, parent, gParent, ggParent )  ) ;^144^145^146^^^129^159^pushContainingFunction ( recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( parent, t.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, gParent.getFirstChild (  ) , type, parent, parent, ggParent )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , ggParent, parent, gParent, type )  ) ;^145^146^^^^130^160^recordPrototypePropDefinition ( t, parent.getFirstChild (  ) , type, parent, gParent, ggParent )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, root, type, name, parent, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, parent, root, type, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, parent, root, gParent, root.getLastChild (  )  )  ) ;^148^149^150^^^133^163^pushContainingFunction ( recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, gParent, root, parent, type, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^recordStaticNameDefinition ( t, name, type, root, gParent, parent, root.getLastChild (  )  )  ) ;^149^150^^^^134^164^recordStaticNameDefinition ( t, name, type, root, parent, gParent, root.getLastChild (  )  )  ) ;^[CLASS] Traversal  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  ggParent  parent  root  
[buglab_swap_variables]^if  ( isLocalNameReference ( n, t )  )  {^185^^^^^170^200^if  ( isLocalNameReference ( t, n )  )  {^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^if  ( isLocalNameReference (  n )  )  {^185^^^^^170^200^if  ( isLocalNameReference ( t, n )  )  {^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^if  ( isLocalNameReference ( t )  )  {^185^^^^^170^200^if  ( isLocalNameReference ( t, n )  )  {^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^} else if  ( isStaticNameReference (  t.getScope (  )  )  )  {^192^^^^^177^207^} else if  ( isStaticNameReference ( n, t.getScope (  )  )  )  {^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^} else if  ( isStaticNameReference ( t, n.getScope (  )  )  )  {^192^^^^^177^207^} else if  ( isStaticNameReference ( n, t.getScope (  )  )  )  {^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^} else if  ( isStaticNameReference ( n.getScope (  )  )  )  {^192^^^^^177^207^} else if  ( isStaticNameReference ( n, t.getScope (  )  )  )  {^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^195^^^^^192^196^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( n, t, parent ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordStaticNameUse (  n, parent ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( t, parent, n ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( t,  parent ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( t, n ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordStaticNameUse ( parent, n, t ) ;^193^^^^^178^208^recordStaticNameUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( parent, n, t ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( n, t, parent ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordPrototypePropUse (  n, parent ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( t, parent, n ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( t,  parent ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( parent, n, t ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordPrototypePropUse ( t, n ) ;^191^^^^^176^206^recordPrototypePropUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( rhs, lhs, getType ( t ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition (  lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, rhs, getType ( lhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t,  getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name rhsame = recordPrototypePropDefinition ( t, lhs, getType ( n ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) ,  parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, parent, getType ( rhs ) , n, lhs, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n,  parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( parent, lhs, getType ( rhs ) , n, t, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name parentame = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, n, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name tame = recordPrototypePropDefinition ( n, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name lhsame = recordPrototypePropDefinition ( t, n, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^206^214^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( parent, lhs, getType ( rhs ) , n, t, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition (  lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( lhs, t, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t,  getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name rhsame = recordPrototypePropDefinition ( t, lhs, getType ( n ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name lhsame = recordPrototypePropDefinition ( t, n, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) ,  parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n,  parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( rhs, lhs, getType ( t ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, rhs, getType ( lhs ) , n, parent, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, lhs, getType ( parent ) , n, rhs, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name name = recordPrototypePropDefinition ( t, parent, getType ( rhs ) , n, lhs, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^Name parentame = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, n, parent.getParent (  )  ) ;^210^211^^^^195^225^Name name = recordPrototypePropDefinition ( t, lhs, getType ( rhs ) , n, parent, parent.getParent (  )  ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^195^^^^^180^210^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( rhs, lhs ) ;^215^^^^^200^230^maybeAliasNamesOnAssign ( lhs, rhs ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign (  rhs ) ;^215^^^^^200^230^maybeAliasNamesOnAssign ( lhs, rhs ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( lhs ) ;^215^^^^^200^230^maybeAliasNamesOnAssign ( lhs, rhs ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( assignedValue, varName ) ;^225^^^^^210^240^maybeAliasNamesOnAssign ( varName, assignedValue ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign (  assignedValue ) ;^225^^^^^210^240^maybeAliasNamesOnAssign ( varName, assignedValue ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^maybeAliasNamesOnAssign ( varName ) ;^225^^^^^210^240^maybeAliasNamesOnAssign ( varName, assignedValue ) ;^[CLASS] Traversal  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Node  assignedValue  lhs  n  param  parent  rhs  varName  Name  name  
[buglab_swap_variables]^if  (  ( NodeUtil.isName ( rhs )  || NodeUtil.isGetProp ( lhs )  )  && containsName ( lhs )  && !NodeUtil.isFunction ( rhs )  && !NodeUtil.isNew ( rhs )  )  {^283^284^285^286^^282^290^if  (  ( NodeUtil.isName ( lhs )  || NodeUtil.isGetProp ( lhs )  )  && containsName ( rhs )  && !NodeUtil.isFunction ( rhs )  && !NodeUtil.isNew ( rhs )  )  {^[CLASS] Traversal  [METHOD] maybeAliasNamesOnAssign [RETURN_TYPE] void   Node lhs Node rhs [VARIABLES] boolean  isExtern  Node  lhs  rhs  
[buglab_swap_variables]^graph.defineNameIfNotExists ( isExtern, name ) .setAliased ( true ) ;^293^^^^^292^294^graph.defineNameIfNotExists ( name, isExtern ) .setAliased ( true ) ;^[CLASS] Traversal  [METHOD] defineAndAlias [RETURN_TYPE] void   String name [VARIABLES] boolean  isExtern  String  name  
[buglab_swap_variables]^graph.defineNameIfNotExists (  isExtern ) .setAliased ( true ) ;^293^^^^^292^294^graph.defineNameIfNotExists ( name, isExtern ) .setAliased ( true ) ;^[CLASS] Traversal  [METHOD] defineAndAlias [RETURN_TYPE] void   String name [VARIABLES] boolean  isExtern  String  name  
[buglab_swap_variables]^graph.defineNameIfNotExists ( name ) .setAliased ( true ) ;^293^^^^^292^294^graph.defineNameIfNotExists ( name, isExtern ) .setAliased ( true ) ;^[CLASS] Traversal  [METHOD] defineAndAlias [RETURN_TYPE] void   String name [VARIABLES] boolean  isExtern  String  name  
[buglab_swap_variables]^graph.defineNameIfNotExists ( isExtern.getFirstChild (  ) .getQualifiedName (  ) , getProp ) .markExposedToCallOrApply (  ) ;^312^313^^^^297^327^graph.defineNameIfNotExists ( getProp.getFirstChild (  ) .getQualifiedName (  ) , isExtern ) .markExposedToCallOrApply (  ) ;^[CLASS] Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] boolean  isExtern  Node  call  getProp  obj  symbol  String  propQName  qName  
[buglab_swap_variables]^graph.defineNameIfNotExists ( getProp.getFirstChild (  ) .getQualifiedName (  )  ) .markExposedToCallOrApply (  ) ;^312^313^^^^297^327^graph.defineNameIfNotExists ( getProp.getFirstChild (  ) .getQualifiedName (  ) , isExtern ) .markExposedToCallOrApply (  ) ;^[CLASS] Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] boolean  isExtern  Node  call  getProp  obj  symbol  String  propQName  qName  
[buglab_swap_variables]^if  ( obj == null || qName.getNext (  )  != null )  {^328^^^^^313^343^if  ( qName == null || obj.getNext (  )  != null )  {^[CLASS] Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] boolean  isExtern  Node  call  getProp  obj  symbol  String  propQName  qName  
[buglab_swap_variables]^graph.defineNameIfNotExists (  false ) .markExported (  ) ;^332^^^^^317^347^graph.defineNameIfNotExists ( qName, false ) .markExported (  ) ;^[CLASS] Traversal  [METHOD] maybeRecordExport [RETURN_TYPE] void   Node call [VARIABLES] boolean  isExtern  Node  call  getProp  obj  symbol  String  propQName  qName  
[buglab_swap_variables]^Var v = n.getScope (  ) .getVar ( t.getString (  )  ) ;^342^^^^^338^346^Var v = t.getScope (  ) .getVar ( n.getString (  )  ) ;^[CLASS] Traversal  [METHOD] isLocalNameReference [RETURN_TYPE] boolean   NodeTraversal t Node n [VARIABLES] boolean  isExtern  NodeTraversal  t  Var  v  Node  n  
[buglab_swap_variables]^return qName.isDeclared ( scope, true ) ;^361^^^^^351^362^return scope.isDeclared ( qName, true ) ;^[CLASS] Traversal  [METHOD] isStaticNameReference [RETURN_TYPE] boolean   Node n Scope scope [VARIABLES] boolean  isExtern  String  qName  Scope  scope  Node  n  
[buglab_swap_variables]^return scope.isDeclared (  true ) ;^361^^^^^351^362^return scope.isDeclared ( qName, true ) ;^[CLASS] Traversal  [METHOD] isStaticNameReference [RETURN_TYPE] boolean   Node n Scope scope [VARIABLES] boolean  isExtern  String  qName  Scope  scope  Node  n  
[buglab_swap_variables]^Name symbol = name.defineNameIfNotExists ( graph, isExtern ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists (  isExtern ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^Name symbol = isExtern.defineNameIfNotExists ( name, graph ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( name ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface (   ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( nameame,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type,  parent, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( parentame,  ( FunctionType )  type, n, n, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n,  parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( rValueame,  ( FunctionType )  type, n, parent, parent.getParent (  ) , n ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  )  ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( n,  ( FunctionType )  type, name, parent, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, rValue, parent.getParent (  ) , parent ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( rValue,  ( FunctionType )  type, n, parent, parent.getParent (  ) , name ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( isExtern, name ) ;^389^^^^^378^398^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^return recordClassConstructorOrInterface ( parent,  ( FunctionType )  type, n, name, parent.getParent (  ) , rValue ) ;^386^387^^^^378^398^return recordClassConstructorOrInterface ( name,  ( FunctionType )  type, n, parent, parent.getParent (  ) , rValue ) ;^[CLASS] Traversal  [METHOD] recordStaticNameDefinition [RETURN_TYPE] Name   NodeTraversal t String name JSType type Node n Node parent Node gParent Node rValue [VARIABLES] boolean  isExtern  String  name  JSType  type  NodeTraversal  t  Node  gParent  n  parent  rValue  Name  symbol  
[buglab_swap_variables]^recordClassConstructorOrInterface ( classType, className, null, null, null, null ) ;^422^423^^^^406^435^recordClassConstructorOrInterface ( className, classType, null, null, null, null ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^recordClassConstructorOrInterface (  classType, null, null, null, null ) ;^422^423^^^^406^435^recordClassConstructorOrInterface ( className, classType, null, null, null, null ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^recordClassConstructorOrInterface ( className,  null, null, null, null ) ;^422^423^^^^406^435^recordClassConstructorOrInterface ( className, classType, null, null, null, null ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^String classNameStr = qName + ".prototype." + NodeUtil.getPrototypePropertyName ( qName ) ;^425^426^^^^406^435^String qNameStr = className + ".prototype." + NodeUtil.getPrototypePropertyName ( qName ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = qNameStr.defineNameIfNotExists ( graph, isExtern ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = graph.defineNameIfNotExists (  isExtern ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = isExtern.defineNameIfNotExists ( qNameStr, graph ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Name prototypeProp = graph.defineNameIfNotExists ( isExtern, qNameStr ) ;^427^^^^^406^435^Name prototypeProp = graph.defineNameIfNotExists ( qNameStr, isExtern ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Preconditions.checkNotNull ( qNameStr, prototypeProp + " should be in the name graph as a node." ) ;^428^429^^^^406^435^Preconditions.checkNotNull ( prototypeProp, qNameStr + " should be in the name graph as a node." ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Preconditions.checkNotNull (  qNameStr + " should be in the name graph as a node." ) ;^428^429^^^^406^435^Preconditions.checkNotNull ( prototypeProp, qNameStr + " should be in the name graph as a node." ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Preconditions.checkNotNull ( prototypeProp + " should be in the name graph as a node." ) ;^428^429^^^^406^435^Preconditions.checkNotNull ( prototypeProp, qNameStr + " should be in the name graph as a node." ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropDefinition [RETURN_TYPE] Name   NodeTraversal t Node qName JSType type Node assign Node parent Node gParent [VARIABLES] boolean  isExtern  JSType  constructor  type  NodeTraversal  t  Node  assign  gParent  parent  qName  FunctionType  classType  String  className  qNameStr  Name  prototypeProp  
[buglab_swap_variables]^Reference reference = parentew Reference ( n, n ) ;^443^^^^^437^449^Reference reference = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^Reference reference = new Reference (  parent ) ;^443^^^^^437^449^Reference reference = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^Reference reference = new Reference ( n ) ;^443^^^^^437^449^Reference reference = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^Name isExtername = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , n ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^Name graphame = n.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^Name name = isExtern.defineNameIfNotExists ( n.getQualifiedName (  ) , graph ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  )  ) ;^444^^^^^437^449^Name name = graph.defineNameIfNotExists ( n.getQualifiedName (  ) , isExtern ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , name, reference ) ;^446^^^^^437^449^graph.connect ( getNamedContainingFunction (  ) , reference, name ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) ,  name ) ;^446^^^^^437^449^graph.connect ( getNamedContainingFunction (  ) , reference, name ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , reference ) ;^446^^^^^437^449^graph.connect ( getNamedContainingFunction (  ) , reference, name ) ;^[CLASS] Traversal  [METHOD] recordStaticNameUse [RETURN_TYPE] Reference   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  reference  Node  n  parent  Name  name  
[buglab_swap_variables]^instanceType = instanceType != null ? boxedType : boxedType;^457^^^^^452^480^instanceType = boxedType != null ? boxedType : instanceType;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( ref, propName, constructor ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSuperClassPrototypePropUse (  propName, ref ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( constructor, ref, propName ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( constructor,  ref ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( constructor, propName ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( ref, propName, constructor ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSubclassPrototypePropUse (  propName, ref ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( constructor, ref, propName ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( constructor,  ref ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( constructor, propName ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSuperClassPrototypePropUse ( propName, constructor, ref ) ;^471^^^^^452^480^recordSuperClassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^Reference ref = parentew Reference ( n, n ) ;^465^^^^^452^480^Reference ref = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^Reference ref = new Reference (  parent ) ;^465^^^^^452^480^Reference ref = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^Reference ref = new Reference ( n ) ;^465^^^^^452^480^Reference ref = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( propName, constructor, ref ) ;^475^^^^^452^480^recordSubclassPrototypePropUse ( constructor, propName, ref ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( n, t, parent ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse (  n, parent ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( t, parent, n ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( t,  parent ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( parent, n, t ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( t, n ) ;^477^^^^^452^480^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^if  ( n != constructorull )  {^468^^^^^452^480^if  ( constructor != null )  {^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^recordUnknownUse ( parent, n, t ) ;^477^^^^^468^478^recordUnknownUse ( t, n, parent ) ;^[CLASS] Traversal  [METHOD] recordPrototypePropUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] ObjectType  objType  boolean  isExtern  JSType  boxedType  instanceType  NodeTraversal  t  Reference  ref  Node  instance  n  parent  FunctionType  constructor  String  propName  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , superClass, graph.defineNameIfNotExists ( ref.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) ,  graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + superClass, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." +  false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, superClass.defineNameIfNotExists ( graph.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." +  false )  ) ;^491^492^^^^485^498^graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^if  ( prop.getPrototype (  ) .hasOwnProperty ( superClass )  )  {^489^^^^^485^498^if  ( superClass.getPrototype (  ) .hasOwnProperty ( prop )  )  {^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , graph, ref.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, prop.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + graph, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + superClass, false )  ) ;^491^492^^^^485^498^graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , prop, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + ref, false )  ) ;^490^491^492^^^485^498^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( superClass.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSuperClassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  superClass  
[buglab_swap_variables]^if  ( prop.getPrototype (  ) .hasOwnProperty ( classType )  )  {^506^^^^^504^516^if  ( classType.getPrototype (  ) .hasOwnProperty ( prop )  )  {^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , graph, ref.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) ,  graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + classType, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, prop.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + graph, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." +  false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , ref.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." +  false )  ) ;^508^509^^^^504^516^graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.connect ( getNamedContainingFunction (  ) , prop, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + ref, false )  ) ;^507^508^509^^^504^516^graph.connect ( getNamedContainingFunction (  ) , ref, graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^graph.defineNameIfNotExists ( prop.getReferenceName (  )  + ".prototype." + classType, false )  ) ;^508^509^^^^504^516^graph.defineNameIfNotExists ( classType.getReferenceName (  )  + ".prototype." + prop, false )  ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( prop, subclass, ref ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^recordSubclassPrototypePropUse (  prop, ref ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( subclass, ref, prop ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( subclass,  ref ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( ref, prop, subclass ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^recordSubclassPrototypePropUse ( subclass, prop ) ;^513^^^^^504^516^recordSubclassPrototypePropUse ( subclass, prop, ref ) ;^[CLASS] Traversal  [METHOD] recordSubclassPrototypePropUse [RETURN_TYPE] void   FunctionType classType String prop Reference ref [VARIABLES] boolean  isExtern  String  prop  Reference  ref  FunctionType  classType  subclass  
[buglab_swap_variables]^Reference ref = parentew Reference ( n, n ) ;^524^^^^^518^529^Reference ref = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  
[buglab_swap_variables]^Reference ref = new Reference (  parent ) ;^524^^^^^518^529^Reference ref = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  
[buglab_swap_variables]^Reference ref = new Reference ( n ) ;^524^^^^^518^529^Reference ref = new Reference ( n, parent ) ;^[CLASS] Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  
[buglab_swap_variables]^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) ew Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^526^527^^^^518^529^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^[CLASS] Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  
[buglab_swap_variables]^unknownNameUse.put ( ref.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , n )  ) ;^526^527^^^^518^529^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^[CLASS] Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  
[buglab_swap_variables]^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  )  )  ) ;^526^527^^^^518^529^unknownNameUse.put ( n.getLastChild (  ) .getString (  ) , new Pair<Name, Reference> ( getNamedContainingFunction (  ) , ref )  ) ;^[CLASS] Traversal  [METHOD] recordUnknownUse [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExtern  NodeTraversal  t  Reference  ref  Node  n  parent  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( isExtern, name ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists (  isExtern ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^Name symbol = isExtern.defineNameIfNotExists ( name, graph ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^Name symbol = graph.defineNameIfNotExists ( name ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^Name symbol = name.defineNameIfNotExists ( graph, isExtern ) ;^539^^^^^535^555^Name symbol = graph.defineNameIfNotExists ( name, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^if  ( n != rhsull )  {^540^^^^^535^555^if  ( rhs != null )  {^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^graph.defineNameIfNotExists ( prop + ".prototype." + name, isExtern ) ;^551^552^^^^535^555^graph.defineNameIfNotExists ( name + ".prototype." + prop, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^graph.defineNameIfNotExists ( name + ".prototype." +  isExtern ) ;^551^552^^^^535^555^graph.defineNameIfNotExists ( name + ".prototype." + prop, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
[buglab_swap_variables]^graph.defineNameIfNotExists ( name + ".prototype." + prop ) ;^551^552^^^^535^555^graph.defineNameIfNotExists ( name + ".prototype." + prop, isExtern ) ;^[CLASS] Traversal  [METHOD] recordClassConstructorOrInterface [RETURN_TYPE] Name   String name FunctionType type Node n Node parent Node gParent Node rhs [VARIABLES] ObjectType  prototype  boolean  isExtern  String  name  prop  FunctionType  type  Node  gParent  n  parent  rhs  Name  symbol  
