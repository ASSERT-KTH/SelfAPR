[BugLab_Wrong_Literal]^return format ( error, true ) ;^47^^^^^46^48^return format ( error, false ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatError [RETURN_TYPE] String   JSError error [VARIABLES] SourceExcerpt  excerpt  boolean  ExcerptFormatter  excerptFormatter  JSError  error  
[BugLab_Wrong_Literal]^return format ( warning, false ) ;^51^^^^^50^52^return format ( warning, true ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatWarning [RETURN_TYPE] String   JSError warning [VARIABLES] SourceExcerpt  excerpt  boolean  ExcerptFormatter  excerptFormatter  JSError  warning  
[BugLab_Wrong_Operator]^if  ( error.sourceName == null )  {^62^^^^^47^77^if  ( error.sourceName != null )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( error.lineNumber == 0 )  {^64^^^^^49^79^if  ( error.lineNumber > 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^if  ( error.lineNumber > charno )  {^64^^^^^49^79^if  ( error.lineNumber > 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( error.lineNumber >= 0 )  {^64^^^^^49^79^if  ( error.lineNumber > 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^if  ( error.lineNumber > 1 )  {^64^^^^^49^79^if  ( error.lineNumber > 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( sourceExcerpt == null )  {^76^^^^^61^91^if  ( sourceExcerpt != null )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^if  ( excerpt.equals ( LINE ) && 0 <= sourceExcerpt && charno < charno.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^if  ( excerpt.equals ( LINE ) && 0 <= sourceExcerptharno && charno < c.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^if  ( c.equals ( LINE ) && 0 <= excerptharno && charno < sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( excerpt.equals ( LINE ) || 0 <= charno && charno < sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( excerpt.equals ( LINE ) && 0 < charno && charno < sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno <= sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno == sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^if  ( excerpt.equals ( LINE ) && i <= charno && charno < sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Variable_Misuse]^for  ( charnont i = 0; i < charno; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^for  ( charnont i = 0; i < i; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == charno; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < charno; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Variable_Misuse]^char c = sourceExcerpt.charAt ( charno ) ;^85^^^^^82^93^char c = sourceExcerpt.charAt ( i ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^char c = i.charAt ( sourceExcerpt ) ;^85^^^^^82^93^char c = sourceExcerpt.charAt ( i ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^for  ( int i = charno; i < charno; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Variable_Misuse]^for  ( charnont i = 0; i < charno; i++ )  {^84^^^^^69^99^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^for  ( cnt i = 0; i < iharno; i++ )  {^84^^^^^69^99^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^for  ( charnont i = 0; i < i; i++ )  {^84^^^^^69^99^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < charnoharno; i++ )  {^84^^^^^69^99^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= charno; i++ )  {^84^^^^^69^99^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Variable_Misuse]^char c = sourceExcerpt.charAt ( charno ) ;^85^^^^^70^100^char c = sourceExcerpt.charAt ( i ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Argument_Swapping]^char c = i.charAt ( sourceExcerpt ) ;^85^^^^^70^100^char c = sourceExcerpt.charAt ( i ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < charno; i++ )  {^84^^^^^69^99^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^if  ( excerpt.equals ( LINE ) && charno <= charno && charno < sourceExcerpt.length (  )  )  {^82^83^^^^67^97^if  ( excerpt.equals ( LINE ) && 0 <= charno && charno < sourceExcerpt.length (  )  )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= charno; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < charno; i++ )  {^84^^^^^82^93^for  ( int i = 0; i < charno; i++ )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] format [RETURN_TYPE] String   JSError error boolean warning [VARIABLES] boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i  
[BugLab_Wrong_Operator]^if  ( region != null )  {^111^^^^^96^126^if  ( region == null )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( line.length (  )  == 0 )  {^115^^^^^100^130^if  ( code.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( code.length (  )  != 0 )  {^115^^^^^100^130^if  ( code.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( code.length (  )  == numberLength )  {^115^^^^^100^130^if  ( code.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^StringBuilder builder = new StringBuilder ( code.length (  )  + 2 ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^StringBuilder builder = new StringBuilder ( code.length (  )  * end ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^StringBuilder builder = new StringBuilder ( line.length (  )  * 2 ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^int start = 1;^125^^^^^110^140^int start = 0;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int end = line.indexOf ( '\n', start ) ;^126^^^^^111^141^int end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int end = code.indexOf ( '\n', spaces ) ;^126^^^^^111^141^int end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^int end = start.indexOf ( '\n', code ) ;^126^^^^^111^141^int end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^while  ( spaces >= 0 )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^while  ( start < 0 )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >= spaces )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >= lineNumber )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >=  )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( spaces < 0 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( end <= 0 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < 1 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = line.substring ( start, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( spaces, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( start, spaces ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = end.substring ( start, code ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = code.substring ( end, start ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( code.length (  )  == 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( line.length (  )  != 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  ==  )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == start )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   ==  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )   ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )    instanceof   1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( lineNumber, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = line.substring ( start ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( numberLength ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = start.substring ( code ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   ||  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( end, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == spaces )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == lineNumber )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - spaces ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   >>  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( spaces < 0 )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( end <= 0 )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < end )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^start = start + 1;^154^^^^^148^157^start = end + 1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = end + end;^154^^^^^148^157^start = end + 1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', numberLength ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^end = start.indexOf ( '\n', code ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( code ) ;^152^^^^^148^157^builder.append ( line ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = line.indexOf ( '\n', start ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = -2;^150^^^^^135^165^start = -1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( code ) ;^149^^^^^134^164^builder.append ( line ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( spaces ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = line.substring ( start, end ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( spaces, end ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( start, start ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = start.substring ( code, end ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = code.substring ( end, start ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^start = start + 1;^154^^^^^139^169^start = end + 1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = end + end;^154^^^^^139^169^start = end + 1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = line.indexOf ( '\n', start ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', spaces ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^end = start.indexOf ( '\n', code ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   !=  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int spaces = start - Integer.toString ( lineNumber ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int spaces = numberLength - Integer.toString ( start ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^int spaces = lineNumber - Integer.toString ( numberLength ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^int spaces = numberLength  <<  Integer.toString ( lineNumber ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( start, spaces ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int spaces = numberLength - Integer.toString ( spaces ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( StringUtil.repeat ( " ", numberLength )  ) ;^143^^^^^128^158^builder.append ( StringUtil.repeat ( " ", spaces )  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( StringUtil.repeat ( " ", start )  ) ;^143^^^^^128^158^builder.append ( StringUtil.repeat ( " ", spaces )  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( start ) ;^144^^^^^129^159^builder.append ( lineNumber ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( code ) ;^152^^^^^137^167^builder.append ( line ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < spaces )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < -1 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( start, start ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( numberLength, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = start.substring ( code, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == -1 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   ^  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - start ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   <  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 1, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - numberLength ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( line.length (  )  <= 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == numberLength )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( spaces, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < numberLength )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = end + lineNumber;^154^^^^^148^157^start = end + 1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', spaces ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = end.substring ( start, code ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = -start;^150^^^^^135^165^start = -1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = end ;^154^^^^^139^169^start = end + 1;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^int spaces = numberLength  <=  Integer.toString ( lineNumber ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   &  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LightweightMessageFormatter LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  ExcerptFormatter  excerptFormatter  SourceExcerpt  excerpt  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( region != null )  {^111^^^^^96^126^if  ( region == null )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( line.length (  )  == 0 )  {^115^^^^^100^130^if  ( code.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( code.length (  )  <= 0 )  {^115^^^^^100^130^if  ( code.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( code.length (  )  == 1 )  {^115^^^^^100^130^if  ( code.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^StringBuilder builder = new StringBuilder ( line.length (  )  * 2 ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^StringBuilder builder = new StringBuilder ( code.length (  )  - 2 ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^StringBuilder builder = new StringBuilder ( code.length (  )  * 1 ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^StringBuilder builder = new StringBuilder ( code.length (  )  / 2 ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^StringBuilder builder = new StringBuilder ( code.length (  )  * end ) ;^124^^^^^109^139^StringBuilder builder = new StringBuilder ( code.length (  )  * 2 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^int start = -1;^125^^^^^110^140^int start = 0;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int end = line.indexOf ( '\n', start ) ;^126^^^^^111^141^int end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int end = code.indexOf ( '\n', spaces ) ;^126^^^^^111^141^int end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^int end = start.indexOf ( '\n', code ) ;^126^^^^^111^141^int end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^while  ( spaces >= 0 )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^while  ( start > 0 )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >= 1 )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >=  )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >= lineNumber )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^while  ( start >= -1 )  {^128^^^^^113^143^while  ( start >= 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( spaces < 0 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( end <= 0 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < end )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < 1 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end <  )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = line.substring ( start, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( spaces, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( start, spaces ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = start.substring ( code, end ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = code.substring ( end, start ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = end.substring ( start, code ) ;^137^^^^^131^138^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( code.length (  )  == 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( line.length (  )  <= 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == numberLength )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   &  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( end, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - lineNumber ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   >  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( lineNumber, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )   ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = line.substring ( start ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( spaces ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = start.substring ( code ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   !=  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( spaces, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   &&  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( line.length (  )  != 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )    instanceof   1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 1, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - end ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - spaces ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( end <= 0 )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < numberLength )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^start = start + 1;^154^^^^^148^157^start = end + 1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = end + spaces;^154^^^^^148^157^start = end + 1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = line.indexOf ( '\n', start ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', numberLength ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^end = start.indexOf ( '\n', code ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( code ) ;^152^^^^^148^157^builder.append ( line ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', spaces ) ;^155^^^^^148^157^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = -start;^150^^^^^135^165^start = -1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( code ) ;^149^^^^^134^164^builder.append ( line ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( numberLength ) ;^132^^^^^117^147^line = code.substring ( start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = line.substring ( start, end ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( spaces, end ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^line = code.substring ( start, spaces ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = start.substring ( code, end ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = code.substring ( end, start ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = -2;^150^^^^^135^165^start = -1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^start = spaces + 1;^154^^^^^139^169^start = end + 1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = end ;^154^^^^^139^169^start = end + 1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = line.indexOf ( '\n', start ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', numberLength ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^end = start.indexOf ( '\n', code ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   >>  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  -  ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int spaces = start - Integer.toString ( lineNumber ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int spaces = numberLength - Integer.toString ( start ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^int spaces = lineNumber - Integer.toString ( numberLength ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^int spaces = numberLength  >=  Integer.toString ( lineNumber ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Argument_Swapping]^line = end.substring ( start, code ) ;^137^^^^^122^152^line = code.substring ( start, end ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^int spaces = numberLength - Integer.toString ( spaces ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( StringUtil.repeat ( " ", start )  ) ;^143^^^^^128^158^builder.append ( StringUtil.repeat ( " ", spaces )  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( code ) ;^152^^^^^137^167^builder.append ( line ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^end = code.indexOf ( '\n', spaces ) ;^155^^^^^140^170^end = code.indexOf ( '\n', start ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( end < -1 )  {^131^^^^^116^146^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^if  ( line.length (  )  >= 0 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == 1 )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == end )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   |  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   <  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( , builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   <=  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( start, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^if  ( line.length (  )  == spaces )  {^133^^^^^118^148^if  ( line.length (  )  == 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( -1, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( numberLength, builder.length (  )  - 1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^return builder.substring ( 0, builder.length (  )  - numberLength ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^if  ( spaces < 0 )  {^148^^^^^133^163^if  ( end < 0 )  {^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Literal]^start = -lineNumber;^150^^^^^135^165^start = -1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^start = start + 1;^154^^^^^139^169^start = end + 1;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^int spaces = numberLength  >>  Integer.toString ( lineNumber ) .length (  ) ;^142^^^^^127^157^int spaces = numberLength - Integer.toString ( lineNumber ) .length (  ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Wrong_Operator]^return builder.substring ( 0, builder.length (  )   ==  1 ) ;^134^^^^^119^149^return builder.substring ( 0, builder.length (  )  - 1 ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
[BugLab_Variable_Misuse]^builder.append ( spaces ) ;^144^^^^^129^159^builder.append ( lineNumber ) ;^[CLASS] LineNumberingFormatter  [METHOD] formatRegion [RETURN_TYPE] String   Region region [VARIABLES] boolean  StringBuilder  builder  Region  region  String  code  line  int  end  lineNumber  numberLength  spaces  start  
