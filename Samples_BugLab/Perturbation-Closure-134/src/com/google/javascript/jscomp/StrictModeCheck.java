[BugLab_Wrong_Operator]^static final DiagnosticType DELETE_VARIABLE = DiagnosticType.error ( "JSC_DELETE_VARIABLE", "variables, functions, and arguments cannot be deleted in "  &  "ES5 strict mode" ) ;^65^66^67^68^^65^68^static final DiagnosticType DELETE_VARIABLE = DiagnosticType.error ( "JSC_DELETE_VARIABLE", "variables, functions, and arguments cannot be deleted in " + "ES5 strict mode" ) ;^[CLASS] StrictModeCheck NonExternChecks   [VARIABLES] 
[BugLab_Wrong_Literal]^this ( compiler, true, true ) ;^79^^^^^78^80^this ( compiler, false, false ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  
[BugLab_Variable_Misuse]^this.noVarCheck = noCajaChecks;^85^^^^^82^87^this.noVarCheck = noVarCheck;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean noVarCheck boolean noCajaChecks [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  
[BugLab_Variable_Misuse]^this.noCajaChecks = noVarCheck;^86^^^^^82^87^this.noCajaChecks = noCajaChecks;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean noVarCheck boolean noCajaChecks [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  
[BugLab_Variable_Misuse]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, externs ) , this ) ;^90^91^^^^89^93^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , this ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( root, externs ) , this ) ;^90^91^^^^89^93^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , this ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverseRoots ( root, Lists.newArrayList ( externs, compiler ) , this ) ;^90^91^^^^89^93^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , this ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  externs  root  
[BugLab_Argument_Swapping]^compiler, Lists.newArrayList ( root, externs ) , this ) ;^91^^^^^89^93^compiler, Lists.newArrayList ( externs, root ) , this ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  externs  root  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, externs, new NonExternChecks (  )  ) ;^92^^^^^89^93^NodeTraversal.traverse ( compiler, root, new NonExternChecks (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, new NonExternChecks (  )  ) ;^92^^^^^89^93^NodeTraversal.traverse ( compiler, root, new NonExternChecks (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  externs  root  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.WITH )  {^96^^^^^95^111^if  ( n.getType (  )  == Token.WITH )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.WITH )  {^96^^^^^95^111^if  ( n.getType (  )  == Token.WITH )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  <= Token.WITH )  {^96^^^^^95^111^if  ( n.getType (  )  == Token.WITH )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  < Token.WITH )  {^96^^^^^95^111^if  ( n.getType (  )  == Token.WITH )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.WITH )  {^96^^^^^95^111^if  ( n.getType (  )  == Token.WITH )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.NAME )  {^98^^^^^95^111^} else if  ( n.getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  <= Token.NAME )  {^98^^^^^95^111^} else if  ( n.getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  >= Token.NAME )  {^98^^^^^95^111^} else if  ( n.getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  != Token.NAME )  {^98^^^^^95^111^} else if  ( n.getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.ASSIGN )  {^102^^^^^95^111^} else if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( n.getType (  )  == Token.1 )  {^102^^^^^95^111^} else if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  <= Token.ASSIGN )  {^102^^^^^95^111^} else if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  >= Token.ASSIGN )  {^102^^^^^95^111^} else if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  > Token.ASSIGN )  {^102^^^^^95^111^} else if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.DELPROP )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( n.getType (  )  == Token.null )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  != Token.DELPROP )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  <= Token.DELPROP )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.OBJECTLIT )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  <= Token.OBJECTLIT )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  > Token.OBJECTLIT )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( parent.getType (  )  == Token.LABEL )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  != Token.LABEL )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkLabel ( t, parent ) ;^109^^^^^95^111^checkLabel ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkLabel ( n, t ) ;^109^^^^^95^111^checkLabel ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkObjectLiteral ( t, parent ) ;^107^^^^^95^111^checkObjectLiteral ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkObjectLiteral ( n, t ) ;^107^^^^^95^111^checkObjectLiteral ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  >= Token.LABEL )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkDelete ( t, parent ) ;^105^^^^^95^111^checkDelete ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkDelete ( n, t ) ;^105^^^^^95^111^checkDelete ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  != Token.OBJECTLIT )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  <= Token.LABEL )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkAssignment ( t, parent ) ;^103^^^^^95^111^checkAssignment ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkAssignment ( n, t ) ;^103^^^^^95^111^checkAssignment ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  >= Token.DELPROP )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  > Token.LABEL )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  < Token.LABEL )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isLabelName ( parent )  && !isDeclaration ( n )  )  {^99^^^^^95^111^if  ( !NodeUtil.isLabelName ( n )  && !isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( !NodeUtil.isLabelName ( n )  || !isDeclaration ( n )  )  {^99^^^^^95^111^if  ( !NodeUtil.isLabelName ( n )  && !isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkNameUse ( t, parent ) ;^100^^^^^95^111^checkNameUse ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkNameUse ( n, t ) ;^100^^^^^95^111^checkNameUse ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  != Token.ASSIGN )  {^102^^^^^95^111^} else if  ( n.getType (  )  == Token.ASSIGN )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  < Token.OBJECTLIT )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  >= Token.OBJECTLIT )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  > Token.DELPROP )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( n.getType (  )  == Token.this )  {^106^^^^^95^111^} else if  ( n.getType (  )  == Token.OBJECTLIT )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^97^^^^^95^111^t.report ( n, WITH_DISALLOWED ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  > Token.NAME )  {^98^^^^^95^111^} else if  ( n.getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  ( n.getType (  )  < Token.DELPROP )  {^104^^^^^95^111^} else if  ( n.getType (  )  == Token.DELPROP )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  ( n.getType (  )  == Token.null )  {^108^^^^^95^111^} else if  ( n.getType (  )  == Token.LABEL )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^t.report ( parent, WITH_DISALLOWED ) ;^97^^^^^95^111^t.report ( n, WITH_DISALLOWED ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_DECLARATION ) ;^97^^^^^95^111^t.report ( n, WITH_DISALLOWED ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^t.report ( WITH_DISALLOWED, n ) ;^97^^^^^95^111^t.report ( n, WITH_DISALLOWED ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^122^^^^^117^130^return true;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] isDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Wrong_Operator]^return n.getParent (  ) .getParent (  ) .getType (  )  <= Token.FUNCTION;^125^^^^^117^130^return n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] isDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Wrong_Literal]^return true;^128^^^^^117^130^return false;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] isDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^Var v = n.getScope (  ) .getVar ( t.getString (  )  ) ;^134^^^^^133^150^Var v = t.getScope (  ) .getVar ( n.getString (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Wrong_Operator]^if  ( v != null )  {^135^^^^^133^150^if  ( v == null )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^if  ( !noCajaChecks )  {^138^^^^^133^150^if  ( !noVarCheck )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_DECLARATION, n.getString (  )  ) ;^139^^^^^133^150^t.report ( n, UNKNOWN_VARIABLE, n.getString (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Argument_Swapping]^t.report ( UNKNOWN_VARIABLE, n, n.getString (  )  ) ;^139^^^^^133^150^t.report ( n, UNKNOWN_VARIABLE, n.getString (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE, n.getString (  )  ) ;^139^^^^^133^150^t.report ( n, UNKNOWN_VARIABLE, n.getString (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED, n.getString (  )  ) ;^139^^^^^133^150^t.report ( n, UNKNOWN_VARIABLE, n.getString (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^if  ( !noVarCheck )  {^143^^^^^133^150^if  ( !noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME, n ) ;^147^^^^^133^150^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED ) ;^147^^^^^133^150^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_DECLARATION ) ;^145^^^^^133^150^t.report ( n, EVAL_USE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Argument_Swapping]^t.report ( EVAL_USE, n ) ;^145^^^^^133^150^t.report ( n, EVAL_USE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_DECLARATION ) ;^147^^^^^133^150^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^145^^^^^133^150^t.report ( n, EVAL_USE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE ) ;^147^^^^^133^150^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, ILLEGAL_NAME ) ;^145^^^^^133^150^t.report ( n, EVAL_USE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED ) ;^145^^^^^133^150^t.report ( n, EVAL_USE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkNameUse [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Wrong_Operator]^if  ( n.getFirstChild (  ) .getType (  )  != Token.NAME )  {^154^^^^^153^165^if  ( n.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^if  ( noVarCheck )  {^160^^^^^153^165^if  ( noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^if  ( noCajaChecksoCajaChecks )  {^160^^^^^153^165^if  ( noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE ) ;^161^^^^^153^165^t.report ( n, EVAL_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, ILLEGAL_NAME ) ;^161^^^^^153^165^t.report ( n, EVAL_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( EVAL_ASSIGNMENT, n ) ;^161^^^^^153^165^t.report ( n, EVAL_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED ) ;^161^^^^^153^165^t.report ( n, EVAL_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED ) ;^156^^^^^153^165^t.report ( n, ARGUMENTS_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( ARGUMENTS_ASSIGNMENT, n ) ;^156^^^^^153^165^t.report ( n, ARGUMENTS_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^161^^^^^153^165^t.report ( n, EVAL_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^if  ( n )  {^160^^^^^153^165^if  ( noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE ) ;^156^^^^^153^165^t.report ( n, ARGUMENTS_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, ILLEGAL_NAME ) ;^156^^^^^153^165^t.report ( n, ARGUMENTS_ASSIGNMENT ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkAssignment [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Wrong_Operator]^if  ( n.getFirstChild (  ) .getType (  )  <= Token.NAME )  {^169^^^^^168^175^if  ( n.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Wrong_Operator]^if  ( v == null )  {^171^^^^^168^175^if  ( v != null )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE ) ;^172^^^^^168^175^t.report ( n, DELETE_VARIABLE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Argument_Swapping]^t.report ( DELETE_VARIABLE, n ) ;^172^^^^^168^175^t.report ( n, DELETE_VARIABLE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Argument_Swapping]^Var v = n.getScope (  ) .getVar ( t.getFirstChild (  ) .getString (  )  ) ;^170^^^^^168^175^Var v = t.getScope (  ) .getVar ( n.getFirstChild (  ) .getString (  )  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^172^^^^^168^175^t.report ( n, DELETE_VARIABLE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Argument_Swapping]^if  ( n != vull )  {^171^^^^^168^175^if  ( v != null )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED ) ;^172^^^^^168^175^t.report ( n, DELETE_VARIABLE ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDelete [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Var  v  Node  n  
[BugLab_Variable_Misuse]^if  ( !noVarCheck )  {^179^^^^^178^188^if  ( !noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^if  ( n.getString (  ) .endsWith ( "__" )  )  {^183^^^^^178^188^if  ( key.getString (  ) .endsWith ( "__" )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^t.report ( n, ILLEGAL_NAME ) ;^184^^^^^178^188^t.report ( key, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^t.report ( key, EVAL_DECLARATION ) ;^184^^^^^178^188^t.report ( key, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME, key ) ;^184^^^^^178^188^t.report ( key, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^for  ( Node n = n.getFirstChild (  ) ;^180^^^^^178^188^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Argument_Swapping]^for  ( Node n = key.getFirstChild (  ) ;^180^^^^^178^188^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^t.report ( key, WITH_DISALLOWED ) ;^184^^^^^178^188^t.report ( key, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^t.report ( key, EVAL_USE ) ;^184^^^^^178^188^t.report ( key, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^key = n.getNext (  ) .getNext (  )  )  {^182^^^^^178^188^key = key.getNext (  ) .getNext (  )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^for  ( Node key = key.getFirstChild (  ) ;^180^^^^^178^188^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^t.report ( key, UNKNOWN_VARIABLE ) ;^184^^^^^178^188^t.report ( key, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkObjectLiteral [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  key  n  
[BugLab_Variable_Misuse]^if  ( !noVarCheck )  {^193^^^^^191^197^if  ( !noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkLabel [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n.getFirstChild (  ) , WITH_DISALLOWED ) ;^194^^^^^191^197^t.report ( n.getFirstChild (  ) , ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkLabel [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME.getFirstChild (  ) , n ) ;^194^^^^^191^197^t.report ( n.getFirstChild (  ) , ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkLabel [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n.getFirstChild (  ) , EVAL_DECLARATION ) ;^194^^^^^191^197^t.report ( n.getFirstChild (  ) , ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkLabel [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^if  (  ( parent.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  == Token.NAME )  || isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  != Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  <= Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  < Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  (  ( parent.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  (  ( n.getType (  )  == Token.GETPROP ) &&  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  (  ( n.getType (  )  < Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  (  ( n.getType (  )  != Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkProperty ( t, parent ) ;^206^^^^^201^208^checkProperty ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkProperty ( n, t ) ;^206^^^^^201^208^checkProperty ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^||  ( parent.getType (  )  == Token.SETPROP )  )  {^205^^^^^201^208^||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^checkDeclaration ( t, parent ) ;^203^^^^^201^208^checkDeclaration ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Argument_Swapping]^checkDeclaration ( n, t ) ;^203^^^^^201^208^checkDeclaration ( t, n ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( !noVarCheck )  {^217^^^^^211^221^if  ( !noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_DECLARATION ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME, n ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, WITH_DISALLOWED ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, ILLEGAL_NAME ) ;^215^^^^^211^221^t.report ( n, ARGUMENTS_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( ARGUMENTS_DECLARATION, n ) ;^215^^^^^211^221^t.report ( n, ARGUMENTS_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^215^^^^^211^221^t.report ( n, ARGUMENTS_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^213^^^^^211^221^t.report ( n, EVAL_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( EVAL_DECLARATION, n ) ;^213^^^^^211^221^t.report ( n, EVAL_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, UNKNOWN_VARIABLE ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, ILLEGAL_NAME ) ;^213^^^^^211^221^t.report ( n, EVAL_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, EVAL_USE ) ;^215^^^^^211^221^t.report ( n, ARGUMENTS_DECLARATION ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n.getLastChild (  ) , EVAL_DECLARATION ) ;^227^^^^^224^230^t.report ( n.getLastChild (  ) , ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkProperty [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME.getLastChild (  ) , n ) ;^227^^^^^224^230^t.report ( n.getLastChild (  ) , ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkProperty [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^if  ( !noVarCheck )  {^226^^^^^224^230^if  ( !noCajaChecks )  {^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkProperty [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^t.report ( n.getLastChild (  ) , WITH_DISALLOWED ) ;^227^^^^^224^230^t.report ( n.getLastChild (  ) , ILLEGAL_NAME ) ;^[CLASS] StrictModeCheck NonExternChecks  [METHOD] checkProperty [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  boolean  noCajaChecks  noVarCheck  NodeTraversal  t  DiagnosticType  ARGUMENTS_ASSIGNMENT  ARGUMENTS_DECLARATION  DELETE_VARIABLE  EVAL_ASSIGNMENT  EVAL_DECLARATION  EVAL_USE  ILLEGAL_NAME  UNKNOWN_VARIABLE  WITH_DISALLOWED  Node  n  
[BugLab_Variable_Misuse]^if  (  ( parent.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  == Token.NAME )  || isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  != Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  <= Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Wrong_Operator]^if  (  ( n.getType (  )  < Token.NAME )  && isDeclaration ( n )  )  {^202^^^^^201^208^if  (  ( n.getType (  )  == Token.NAME )  && isDeclaration ( n )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  (  ( parent.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  (  ( n.getType (  )  == Token.GETPROP ) &&  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Wrong_Operator]^} else if  (  ( n.getType (  )  != Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Variable_Misuse]^checkProperty ( t, parent ) ;^206^^^^^201^208^checkProperty ( t, n ) ;^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Argument_Swapping]^checkProperty ( n, t ) ;^206^^^^^201^208^checkProperty ( t, n ) ;^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Variable_Misuse]^||  ( parent.getType (  )  == Token.SETPROP )  )  {^205^^^^^201^208^||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Variable_Misuse]^checkDeclaration ( t, parent ) ;^203^^^^^201^208^checkDeclaration ( t, n ) ;^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Argument_Swapping]^checkDeclaration ( n, t ) ;^203^^^^^201^208^checkDeclaration ( t, n ) ;^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Variable_Misuse]^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.1 )  )  {^204^205^^^^201^208^} else if  (  ( n.getType (  )  == Token.GETPROP ) ||  ( n.getType (  )  == Token.SETPROP )  )  {^[CLASS] NonExternChecks  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME, n ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, 2 ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
[BugLab_Argument_Swapping]^t.report ( ARGUMENTS_DECLARATION, n ) ;^215^^^^^211^221^t.report ( n, ARGUMENTS_DECLARATION ) ;^[CLASS] NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
[BugLab_Argument_Swapping]^t.report ( EVAL_DECLARATION, n ) ;^213^^^^^211^221^t.report ( n, EVAL_DECLARATION ) ;^[CLASS] NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, this ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
[BugLab_Variable_Misuse]^t.report ( n, 0 ) ;^218^^^^^211^221^t.report ( n, ILLEGAL_NAME ) ;^[CLASS] NonExternChecks  [METHOD] checkDeclaration [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
[BugLab_Argument_Swapping]^t.report ( ILLEGAL_NAME.getLastChild (  ) , n ) ;^227^^^^^224^230^t.report ( n.getLastChild (  ) , ILLEGAL_NAME ) ;^[CLASS] NonExternChecks  [METHOD] checkProperty [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  n  
