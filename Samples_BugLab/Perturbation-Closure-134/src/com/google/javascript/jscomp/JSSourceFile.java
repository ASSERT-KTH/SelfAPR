[BugLab_Argument_Swapping]^return new JSSourceFile ( SourceFile.fromFile ( charSet, fileName )  ) ;^39^^^^^38^40^return new JSSourceFile ( SourceFile.fromFile ( fileName, charSet )  ) ;^[CLASS] JSSourceFile  [METHOD] fromFile [RETURN_TYPE] JSSourceFile   String fileName Charset charSet [VARIABLES] Charset  charSet  SourceFile  referenced  String  fileName  boolean  
[BugLab_Argument_Swapping]^return new JSSourceFile ( SourceFile.fromFile ( charSet, file )  ) ;^47^^^^^46^48^return new JSSourceFile ( SourceFile.fromFile ( file, charSet )  ) ;^[CLASS] JSSourceFile  [METHOD] fromFile [RETURN_TYPE] JSSourceFile   File file Charset charSet [VARIABLES] Charset  charSet  SourceFile  referenced  boolean  File  file  
[BugLab_Argument_Swapping]^return new JSSourceFile ( SourceFile.fromCode ( code, fileName )  ) ;^55^^^^^54^56^return new JSSourceFile ( SourceFile.fromCode ( fileName, code )  ) ;^[CLASS] JSSourceFile  [METHOD] fromCode [RETURN_TYPE] JSSourceFile   String fileName String code [VARIABLES] SourceFile  referenced  String  code  fileName  boolean  
[BugLab_Argument_Swapping]^return new JSSourceFile ( SourceFile.fromInputStream ( s, fileName )  ) ;^60^^^^^58^61^return new JSSourceFile ( SourceFile.fromInputStream ( fileName, s )  ) ;^[CLASS] JSSourceFile  [METHOD] fromInputStream [RETURN_TYPE] JSSourceFile   String fileName InputStream s [VARIABLES] SourceFile  referenced  String  fileName  boolean  InputStream  s  
[BugLab_Argument_Swapping]^return new JSSourceFile ( SourceFile.fromGenerator ( generator, fileName )  ) ;^65^^^^^63^66^return new JSSourceFile ( SourceFile.fromGenerator ( fileName, generator )  ) ;^[CLASS] JSSourceFile  [METHOD] fromGenerator [RETURN_TYPE] JSSourceFile   String fileName Generator generator [VARIABLES] SourceFile  referenced  String  fileName  boolean  Generator  generator  
