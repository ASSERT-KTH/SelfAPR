[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, namingCallback ) ;^69^^^^^66^75^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  namingCallback ) ;^69^^^^^66^75^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( namingCallback, root, compiler ) ;^69^^^^^66^75^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, root ) ;^69^^^^^66^75^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse (  root, namingCallback ) ;^69^^^^^66^75^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^logger.info ( "Named " + bytesUsed + " anon functions using " + namedCount + " bytes" ) ;^70^71^^^^66^75^logger.info ( "Named " + namedCount + " anon functions using " + bytesUsed + " bytes" ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^String newName = name.get ( renameMap ) ;^101^^^^^99^109^String newName = renameMap.get ( name ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  boolean  Node  fnNameNode  fnNode  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  name  newName  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^renameMap.put ( newName, name ) ;^104^^^^^99^109^renameMap.put ( name, newName ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  boolean  Node  fnNameNode  fnNode  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  name  newName  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^renameMap.put (  newName ) ;^104^^^^^99^109^renameMap.put ( name, newName ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  boolean  Node  fnNameNode  fnNode  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  name  newName  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^renameMap.put ( name ) ;^104^^^^^99^109^renameMap.put ( name, newName ) ;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] AbstractCompiler  compiler  boolean  Node  fnNameNode  fnNode  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  name  newName  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^return rhs + DELIMITER + lhs;^113^^^^^112^114^return lhs + DELIMITER + rhs;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  boolean  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  lhs  name  newName  rhs  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^return DELIMITER + lhs + rhs;^113^^^^^112^114^return lhs + DELIMITER + rhs;^[CLASS] NameAnonymousFunctionsMapped MappedFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  boolean  char  DELIMITER  PREFIX  NameGenerator  nameGenerator  String  PREFIX_STRING  lhs  name  newName  rhs  Logger  logger  Map  renameMap  int  bytesUsed  namedCount  
[buglab_swap_variables]^String newName = name.get ( renameMap ) ;^101^^^^^99^109^String newName = renameMap.get ( name ) ;^[CLASS] MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] char  DELIMITER  String  name  newName  boolean  Node  fnNameNode  fnNode  
[buglab_swap_variables]^renameMap.put ( newName, name ) ;^104^^^^^99^109^renameMap.put ( name, newName ) ;^[CLASS] MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] char  DELIMITER  String  name  newName  boolean  Node  fnNameNode  fnNode  
[buglab_swap_variables]^renameMap.put (  newName ) ;^104^^^^^99^109^renameMap.put ( name, newName ) ;^[CLASS] MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] char  DELIMITER  String  name  newName  boolean  Node  fnNameNode  fnNode  
[buglab_swap_variables]^renameMap.put ( name ) ;^104^^^^^99^109^renameMap.put ( name, newName ) ;^[CLASS] MappedFunctionNamer  [METHOD] setFunctionName [RETURN_TYPE] void   String name Node fnNode [VARIABLES] char  DELIMITER  String  name  newName  boolean  Node  fnNameNode  fnNode  
[buglab_swap_variables]^return rhs + DELIMITER + lhs;^113^^^^^112^114^return lhs + DELIMITER + rhs;^[CLASS] MappedFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  String  lhs  rhs  boolean  
[buglab_swap_variables]^return DELIMITER + lhs + rhs;^113^^^^^112^114^return lhs + DELIMITER + rhs;^[CLASS] MappedFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] char  DELIMITER  String  lhs  rhs  boolean  
