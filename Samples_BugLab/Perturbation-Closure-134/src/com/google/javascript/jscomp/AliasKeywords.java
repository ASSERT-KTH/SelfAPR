[BugLab_Wrong_Literal]^private boolean isAliased = true;^87^^^^^82^92^private boolean isAliased = false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[BugLab_Wrong_Literal]^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 5;^283^^^^^278^288^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 6;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[BugLab_Variable_Misuse]^this.aliasName = ALIAS_TRUE;^98^^^^^97^100^this.aliasName = aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[BugLab_Variable_Misuse]^this.tokenId = MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW;^99^^^^^97^100^this.tokenId = tokenId;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[BugLab_Variable_Misuse]^super ( ALIAS_THROW, Token.THROW ) ;^167^^^^^166^168^super ( aliasName, Token.THROW ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String)   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[BugLab_Variable_Misuse]^super ( ALIAS_THROW, tokenId ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[BugLab_Variable_Misuse]^super ( aliasName, MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[BugLab_Argument_Swapping]^super ( tokenId, aliasName ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[BugLab_Variable_Misuse]^final int type = parent.getType (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^if  ( isAliasableType ( tokenId )  )  {^45^^^^^43^50^if  ( isAliasableType ( type )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^} else if  ( tokenId == Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^} else if  ( type <= Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^visitNameNode ( parent ) ;^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^visitAliasableNode ( parent, n ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^} else if  ( type != Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^AliasSpecification aliasableNodes = aliasTypes.get ( parent.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^AliasSpecification aliasableNodes = n.get ( aliasTypes.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^aliasableNodes.visit ( parent, parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^aliasableNodes.visit ( n, n ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  ||  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  <<  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  >  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  ==  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^nodes.put ( parent, n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^if  ( nodes.size (  )  > minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^isAliased = false;^116^^^^^113^120^isAliased = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return false;^117^^^^^113^120^return true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return true;^119^^^^^113^120^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^aliasNode ( parent, n ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return ALIAS_TRUE;^142^^^^^141^143^return aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] getAliasName [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node name = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node aliasCall = new Node ( Token.CALL, throwNode, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node aliasCall = new Node ( Token.CALL, name, parent.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^Node aliasCall = new Node ( Token.CALL, throwNode, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node aliasCall = new Node ( Token.CALL, name, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node exprResult = new Node ( Token.EXPR_RESULT, throwNode ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^parent.replaceChild ( name, exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^parent.replaceChild ( throwNode, parent ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^parent.replaceChild ( exprResult, throwNode ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return type;^190^^^^^189^191^return MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] minOccurrencesRequiredToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^return InlineCostEstimator.getCost ( alias )  <=  / 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^return InlineCostEstimator.getCost ( alias )  - 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return InlineCostEstimator.getCost ( alias )  / 2 ;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^List<Node> parameters = Lists.newArrayList ( throwStatement.cloneNode (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node throwStatement = new Node ( Token.THROW, throwStatement ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node throwStatement = new Node ( Token.THROW, body ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node body = new Node ( Token.BLOCK, parameterName ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return NodeUtil.newFunctionNode ( ALIAS_TRUE, parameters, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return NodeUtil.newFunctionNode ( aliasName, parameters, throwStatement, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^return NodeUtil.newFunctionNode ( parameters, aliasName, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^return NodeUtil.newFunctionNode ( aliasName, body, parameters, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^return NodeUtil.newFunctionNode ( body, parameters, aliasName, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL, -MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -2, -2 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return NodeUtil.newFunctionNode ( aliasName, null, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -0, -0 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return type;^232^^^^^231^233^return MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] minOccurrencesRequiredToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^parent.replaceChild ( aliasNode, aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^parent.replaceChild ( n, parent ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^parent.replaceChild ( aliasNode, n ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^Node name = NodeUtil.newName ( getAliasName (  ) , value, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^name.addChildToBack ( varNode ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^varNode.addChildToBack ( value ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^codeRoot.addChildrenToFront ( value ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, externs, new FindAliasableNodes (  )  ) ;^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, new FindAliasableNodes (  )  ) ;^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return false;^338^^^^^335^343^return true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return true;^342^^^^^335^343^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^boolean codeChanged = true;^350^^^^^349^361^boolean codeChanged = false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^if  ( codeRoot.maybeInsertAliasDeclarationIntoParseTree ( spec )  )  {^353^^^^^349^361^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^codeChanged = false;^354^^^^^349^361^codeChanged = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^if  ( isAliased )  {^358^^^^^349^361^if  ( codeChanged )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  == Token.NAME )  {^367^^^^^366^381^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return true;^368^^^^^366^381^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Literal]^return true;^373^^^^^366^381^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Wrong_Operator]^return n.getFirstChild (  )  == null;^380^^^^^366^381^return n.getFirstChild (  )  != null;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return aliasTypes.containsKey ( tokenId ) ;^387^^^^^386^388^return aliasTypes.containsKey ( type ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasableType [RETURN_TYPE] boolean   int type [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^return type.containsKey ( aliasTypes ) ;^387^^^^^386^388^return aliasTypes.containsKey ( type ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasableType [RETURN_TYPE] boolean   int type [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return aliasNames.contains ( ALIAS_TRUE ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Argument_Swapping]^return name.contains ( aliasNames ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return aliasNames.contains ( aliasName ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^l.add ( new KeywordAliasSpecification ( name, Token.FALSE )  ) ;^404^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_FALSE, Token.FALSE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^l.add ( new KeywordAliasSpecification ( name, Token.NULL )  ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^l.add ( new KeywordAliasSpecification ( name, Token.TRUE )  ) ;^406^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_TRUE, Token.TRUE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^l.add ( new ThrowAliasSpecification ( name )  ) ;^413^^^^^402^415^l.add ( new ThrowAliasSpecification ( ALIAS_THROW )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^return 3;^414^^^^^402^415^return l;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[BugLab_Variable_Misuse]^final int type = parent.getType (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[BugLab_Wrong_Operator]^} else if  ( type != Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[BugLab_Variable_Misuse]^visitNameNode ( parent ) ;^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[BugLab_Argument_Swapping]^visitAliasableNode ( parent, n ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[BugLab_Variable_Misuse]^} else if  ( type == Token.4 )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[BugLab_Wrong_Operator]^} else if  ( type >= Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[BugLab_Variable_Misuse]^AliasSpecification aliasableNodes = aliasTypes.get ( parent.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[BugLab_Variable_Misuse]^AliasSpecification aliasableNodes = 4.get ( n.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[BugLab_Argument_Swapping]^AliasSpecification aliasableNodes = n.get ( aliasTypes.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[BugLab_Argument_Swapping]^aliasableNodes.visit ( parent, n ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  >  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  <=  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  ||  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[BugLab_Wrong_Literal]^private boolean isAliased = true;^87^^^^^82^92^private boolean isAliased = false;^[CLASS] AliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[BugLab_Argument_Swapping]^nodes.put ( parent, n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( nodes.size (  )  < minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[BugLab_Wrong_Literal]^isAliased = false;^116^^^^^113^120^isAliased = true;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[BugLab_Wrong_Literal]^return false;^117^^^^^113^120^return true;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[BugLab_Wrong_Literal]^return true;^119^^^^^113^120^return false;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[BugLab_Argument_Swapping]^aliasNode ( parent, n ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[BugLab_Variable_Misuse]^Node parent = this.getValue (  ) ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[BugLab_Variable_Misuse]^Node name = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Variable_Misuse]^Node aliasCall = new Node ( Token.CALL, parent, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Variable_Misuse]^Node aliasCall = new Node ( Token.CALL, name, parent.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Argument_Swapping]^Node aliasCall = new Node ( Token.CALL, throwNode, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Variable_Misuse]^Node aliasCall = new Node ( Token.CALL, throwNode, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Variable_Misuse]^Node exprResult = new Node ( Token.EXPR_RESULT, throwNode ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Variable_Misuse]^parent.replaceChild ( throwNode, parent ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Argument_Swapping]^parent.replaceChild ( exprResult, throwNode ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[BugLab_Wrong_Operator]^return InlineCostEstimator.getCost ( alias )  &  / 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[BugLab_Wrong_Operator]^return InlineCostEstimator.getCost ( alias )  * 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[BugLab_Wrong_Literal]^return InlineCostEstimator.getCost ( alias )  / 0 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[BugLab_Wrong_Literal]^return InlineCostEstimator.getCost ( alias )  / 2 ;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[BugLab_Variable_Misuse]^List<Node> parameters = Lists.newArrayList ( throwStatement.cloneNode (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Variable_Misuse]^Node throwStatement = new Node ( Token.THROW, throwStatement ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Variable_Misuse]^Node throwStatement = new Node ( Token.THROW, body ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Variable_Misuse]^Node body = new Node ( Token.BLOCK, parameterName ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Variable_Misuse]^return NodeUtil.newFunctionNode ( aliasName, parameters, throwStatement, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Argument_Swapping]^return NodeUtil.newFunctionNode ( parameters, aliasName, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Argument_Swapping]^return NodeUtil.newFunctionNode ( aliasName, body, parameters, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Wrong_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -0, -0 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Argument_Swapping]^return NodeUtil.newFunctionNode ( body, parameters, aliasName, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[BugLab_Argument_Swapping]^super ( tokenId, aliasName ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  String  aliasName  int  tokenId  
[BugLab_Variable_Misuse]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( n, parent ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[BugLab_Argument_Swapping]^parent.replaceChild ( aliasNode, n ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[BugLab_Variable_Misuse]^Node name = NodeUtil.newName ( getAliasName (  ) , value, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[BugLab_Variable_Misuse]^name.addChildToBack ( varNode ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[BugLab_Variable_Misuse]^codeRoot.addChildrenToFront ( value ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
