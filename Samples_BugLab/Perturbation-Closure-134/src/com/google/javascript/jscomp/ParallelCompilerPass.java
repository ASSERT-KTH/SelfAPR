[BugLab_Wrong_Literal]^boolean changed = true;^62^^^^^57^67^boolean changed = false;^[CLASS] ParallelCompilerPass Result 1   [VARIABLES] 
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( numWorkers >= 0 ) ;^116^^^^^114^121^Preconditions.checkArgument ( numWorkers > 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[BugLab_Wrong_Literal]^Preconditions.checkArgument ( numWorkers > 1 ) ;^116^^^^^114^121^Preconditions.checkArgument ( numWorkers > 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[BugLab_Variable_Misuse]^this.taskSupply = null;^117^^^^^114^121^this.taskSupply = taskSupply;^[CLASS] ParallelCompilerPass Result 1  [METHOD] <init> [RETURN_TYPE] Supplier,int)   AbstractCompiler compiler AstParallelizer splitter Task> taskSupply int numWorkers [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  
[BugLab_Argument_Swapping]^changed = other || changed.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[BugLab_Argument_Swapping]^changed = other.changed || changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[BugLab_Wrong_Operator]^changed = changed && other.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[BugLab_Argument_Swapping]^errors.addAll ( other.errors.errors ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[BugLab_Argument_Swapping]^exceptions.addAll ( other.exceptions.exceptions ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[BugLab_Argument_Swapping]^exceptions.addAll ( other ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] AbstractCompiler  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  other  
[BugLab_Variable_Misuse]^if  ( compilerhanged )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[BugLab_Argument_Swapping]^if  ( changedhanged )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[BugLab_Argument_Swapping]^if  ( c )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  JSError  error  
[BugLab_Variable_Misuse]^r.notifyCompiler ( c ) ;^129^^^^^124^130^r.notifyCompiler ( compiler ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  externs  root  Supplier  taskSupply  List  errors  exceptions  worklist  int  numWorkers  Result  r  
[BugLab_Variable_Misuse]^int numChildThread = index - 1;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Operator]^int numChildThread = numWorkers  |  1;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^int numChildThread = numWorkers - i;^138^^^^^123^153^int numChildThread = numWorkers - 1;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Variable_Misuse]^for  ( numWorkersnt i = 0; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < numWorkers; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Variable_Misuse]^final numWorkersnt index = i;^143^^^^^128^158^final int index = i;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^for  ( int i = numChildThread; i < numChildThread; i++ )  {^142^^^^^127^157^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Variable_Misuse]^for  ( numWorkersnt i = 0; i < numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Argument_Swapping]^for  ( numChildThreadnt i = 0; i < i; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^for  ( int i = numWorkers; i < numChildThread; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Variable_Misuse]^for  ( numWorkersnt i = 0; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < numWorkers; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Argument_Swapping]^for  ( numChildThreadnt i = 0; i < i; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Argument_Swapping]^result.combine ( resultss[i] ) ;^174^^^^^159^189^result.combine ( results[i] ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < numChildThread; i++ )  {^173^^^^^158^188^for  ( int i = 0; i < numChildThread; i++ )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] execute [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Result[]  results  Supplier  taskSupply  List  errors  exceptions  worklist  Thread[]  workers  InterruptedException  e  int  i  index  numChildThread  numWorkers  Thread  worker  Result  result  
[BugLab_Wrong_Literal]^while ( false )  {^182^^^^^180^191^while ( true )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[BugLab_Wrong_Operator]^if  ( passResult != null )  {^184^^^^^180^191^if  ( passResult == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[BugLab_Variable_Misuse]^return passResult;^190^^^^^180^191^return result;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processAllTasks [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Result  passResult  result  
[BugLab_Wrong_Operator]^if  ( subtree != null )  {^205^^^^^202^215^if  ( subtree == null )  {^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[BugLab_Argument_Swapping]^return subtree.get (  ) .processSubtree ( taskSupply ) ;^208^^^^^202^215^return taskSupply.get (  ) .processSubtree ( subtree ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[BugLab_Wrong_Literal]^Result r = new Result ( false ) ;^211^^^^^202^215^Result r = new Result ( true ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] processTask [RETURN_TYPE] ParallelCompilerPass$Result   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Node  subtree  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  Exception  e  Result  r  
[BugLab_Wrong_Literal]^return worklist.remove ( numChildThread ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[BugLab_Wrong_Literal]^return worklist.remove ( numWorkers ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[BugLab_Wrong_Literal]^return worklist.remove ( index ) ;^224^^^^^218^226^return worklist.remove ( 0 ) ;^[CLASS] ParallelCompilerPass Result 1  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[BugLab_Wrong_Literal]^boolean changed = true;^62^^^^^57^67^boolean changed = false;^[CLASS] Result  [METHOD] getTask [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  c  compiler  boolean  changed  AstParallelizer  splitter  Supplier  taskSupply  List  errors  exceptions  worklist  int  i  index  numChildThread  numWorkers  
[BugLab_Variable_Misuse]^changed = changed || changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[BugLab_Argument_Swapping]^changed = changed || other.changed.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[BugLab_Argument_Swapping]^changed = other.changed || changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[BugLab_Wrong_Operator]^changed = changed && other.changed;^82^^^^^81^85^changed = changed || other.changed;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[BugLab_Argument_Swapping]^errors.addAll ( other.errors.errors ) ;^83^^^^^81^85^errors.addAll ( other.errors ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[BugLab_Variable_Misuse]^exceptions.addAll ( null ) ;^84^^^^^81^85^exceptions.addAll ( other.exceptions ) ;^[CLASS] Result  [METHOD] combine [RETURN_TYPE] void   Result other [VARIABLES] List  errors  exceptions  boolean  changed  Result  other  
[BugLab_Argument_Swapping]^if  ( changedhanged )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
[BugLab_Argument_Swapping]^if  ( c )  {^101^^^^^94^104^if  ( changed )  {^[CLASS] Result  [METHOD] notifyCompiler [RETURN_TYPE] void   AbstractCompiler c [VARIABLES] List  errors  exceptions  AbstractCompiler  c  boolean  changed  JSError  error  
