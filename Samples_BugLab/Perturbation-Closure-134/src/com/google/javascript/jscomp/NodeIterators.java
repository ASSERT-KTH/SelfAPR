[buglab_swap_variables]^this.ancestors.add ( 0 ) ;^59^^^^^51^61^this.ancestors.add ( 0, n ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] <init> [RETURN_TYPE] Node[])    ancestors [VARIABLES] Node[]  ancestors  boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  lookAhead  n  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( block, new FunctionlessLocalScope ( name, var, name )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion (  new FunctionlessLocalScope ( name, var, block )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( var, new FunctionlessLocalScope ( name, name, block )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name,  block )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, block, var )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( var, name, block )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^new FunctionlessLocalScope ( name, var, block )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( name,  block )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( name, block, var )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( name, var )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  current  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( assign, new FunctionlessLocalScope ( name, expr, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion (  new FunctionlessLocalScope ( assign, expr, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( block, expr, assign )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope (  expr, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( expr, assign, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign,  block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( expr, new FunctionlessLocalScope ( assign, name, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^return new LocalVarMotion ( block, new FunctionlessLocalScope ( assign, expr, name )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( block, expr, assign )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope (  expr, block )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( expr, assign, block )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( assign,  block )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( assign, block, expr )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( assign, expr )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  current  expr  lookAhead  n  name  nameNode  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^if  ( varName.getType (  )  == Token.NAME && curNode.equals ( curNode.getString (  )  )  )  {^229^230^^^^214^244^if  ( curNode.getType (  )  == Token.NAME && varName.equals ( curNode.getString (  )  )  )  {^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  current  expr  lookAhead  n  name  nameNode  next  nextNode  nextParent  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^boolean assignsName =  ( nextNode.getType (  )  == Token.ASSIGN && nextParent == nextParent.getFirstChild (  )  ) ;^254^255^^^^251^261^boolean assignsName =  ( nextParent.getType (  )  == Token.ASSIGN && nextNode == nextParent.getFirstChild (  )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  current  expr  lookAhead  n  name  nameNode  next  nextNode  nextParent  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^boolean assignsName =  ( nextNode.getType (  )  == Token.ASSIGN && nextParent == nextParent.getFirstChild (  )  ) ;^254^255^^^^239^269^boolean assignsName =  ( nextParent.getType (  )  == Token.ASSIGN && nextNode == nextParent.getFirstChild (  )  ) ;^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  current  expr  lookAhead  n  name  nameNode  next  nextNode  nextParent  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^if  ( nextNode == Token.NAME && !varName.equals ( type.getString (  )  )  )  {^249^^^^^234^264^if  ( type == Token.NAME && !varName.equals ( nextNode.getString (  )  )  )  {^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  current  expr  lookAhead  n  name  nameNode  next  nextNode  nextParent  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^if  ( NodeUtil.nodeTypeMayHaveSideEffects ( nextParent )  && type != Token.NAME || type == Token.NAME && nextNode.getType (  )  == Token.CATCH )  {^276^277^^^^261^291^if  ( NodeUtil.nodeTypeMayHaveSideEffects ( nextNode )  && type != Token.NAME || type == Token.NAME && nextParent.getType (  )  == Token.CATCH )  {^[CLASS] NodeIterators FunctionlessLocalScope LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  current  expr  lookAhead  n  name  nameNode  next  nextNode  nextParent  valueNode  var  Stack  ancestors  
[buglab_swap_variables]^this.ancestors.add ( 0 ) ;^59^^^^^51^61^this.ancestors.add ( 0, n ) ;^[CLASS] FunctionlessLocalScope  [METHOD] <init> [RETURN_TYPE] Node[])    ancestors [VARIABLES] Node[]  ancestors  boolean  Stack  ancestors  Node  n  
[buglab_swap_variables]^return new LocalVarMotion ( var, new FunctionlessLocalScope ( name, name, block )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion (  new FunctionlessLocalScope ( name, var, block )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, block, var )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name,  block )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( block, new FunctionlessLocalScope ( name, var, name )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var )  ) ;^171^172^^^^163^173^return new LocalVarMotion ( name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( var, name, block )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^new FunctionlessLocalScope ( name, var, block )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( name,  block )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( block, var, name )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( name, var )  ) ;^172^^^^^163^173^name, new FunctionlessLocalScope ( name, var, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forVar [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node var Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  block  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( assign, new FunctionlessLocalScope ( name, expr, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion (  new FunctionlessLocalScope ( assign, expr, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope (  expr, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( expr, assign, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign,  block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, block, expr )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^return new LocalVarMotion ( expr, new FunctionlessLocalScope ( assign, name, block )  ) ;^185^186^^^^179^187^return new LocalVarMotion ( name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( block, expr, assign )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope (  expr, block )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( expr, assign, block )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( assign,  block )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( assign, block, expr )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^name, new FunctionlessLocalScope ( assign, expr )  ) ;^186^^^^^179^187^name, new FunctionlessLocalScope ( assign, expr, block )  ) ;^[CLASS] LocalVarMotion  [METHOD] forAssign [RETURN_TYPE] NodeIterators$LocalVarMotion   Node name Node assign Node expr Node block [VARIABLES] boolean  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  Node  assign  block  expr  lookAhead  name  nameNode  valueNode  var  
[buglab_swap_variables]^boolean assignsName =  ( nextNode.getType (  )  == Token.ASSIGN && nextParent == nextParent.getFirstChild (  )  ) ;^254^255^^^^251^261^boolean assignsName =  ( nextParent.getType (  )  == Token.ASSIGN && nextNode == nextParent.getFirstChild (  )  ) ;^[CLASS] LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  expr  lookAhead  name  nameNode  next  nextNode  nextParent  valueNode  var  
[buglab_swap_variables]^boolean assignsName =  ( nextNode.getType (  )  == Token.ASSIGN && nextParent == nextParent.getFirstChild (  )  ) ;^254^255^^^^239^269^boolean assignsName =  ( nextParent.getType (  )  == Token.ASSIGN && nextNode == nextParent.getFirstChild (  )  ) ;^[CLASS] LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  expr  lookAhead  name  nameNode  next  nextNode  nextParent  valueNode  var  
[buglab_swap_variables]^if  ( NodeUtil.nodeTypeMayHaveSideEffects ( nextParent )  && type != Token.NAME || type == Token.NAME && nextNode.getType (  )  == Token.CATCH )  {^276^277^^^^261^291^if  ( NodeUtil.nodeTypeMayHaveSideEffects ( nextNode )  && type != Token.NAME || type == Token.NAME && nextParent.getType (  )  == Token.CATCH )  {^[CLASS] LocalVarMotion  [METHOD] advanceLookAhead [RETURN_TYPE] void   boolean atStart [VARIABLES] boolean  assignsName  atStart  blocked  isVarDeclaration  valueHasSideEffects  String  varName  FunctionlessLocalScope  iterator  int  type  Node  assign  block  curNode  expr  lookAhead  name  nameNode  next  nextNode  nextParent  valueNode  var  
