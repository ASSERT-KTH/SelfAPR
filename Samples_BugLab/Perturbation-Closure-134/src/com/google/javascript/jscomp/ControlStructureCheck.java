[buglab_swap_variables]^report ( USE_OF_WITH, node ) ;^59^^^^^52^74^report ( node, USE_OF_WITH ) ;^[CLASS] ControlStructureCheck  [METHOD] check [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  allowWith  JSDocInfo  info  DiagnosticType  USE_OF_WITH  Node  bChild  next  node  
[buglab_swap_variables]^report (  USE_OF_WITH ) ;^59^^^^^52^74^report ( node, USE_OF_WITH ) ;^[CLASS] ControlStructureCheck  [METHOD] check [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  allowWith  JSDocInfo  info  DiagnosticType  USE_OF_WITH  Node  bChild  next  node  
[buglab_swap_variables]^report ( node ) ;^59^^^^^52^74^report ( node, USE_OF_WITH ) ;^[CLASS] ControlStructureCheck  [METHOD] check [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  allowWith  JSDocInfo  info  DiagnosticType  USE_OF_WITH  Node  bChild  next  node  
[buglab_swap_variables]^for  ( Node node = bChild.getFirstChild (  ) ; bChild != null; )  {^69^^^^^52^74^for  ( Node bChild = node.getFirstChild (  ) ; bChild != null; )  {^[CLASS] ControlStructureCheck  [METHOD] check [RETURN_TYPE] void   Node node [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  allowWith  JSDocInfo  info  DiagnosticType  USE_OF_WITH  Node  bChild  next  node  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, sourceName, error )  ) ;^77^^^^^76^78^compiler.report ( JSError.make ( sourceName, n, error )  ) ;^[CLASS] ControlStructureCheck  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType error [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  DiagnosticType  USE_OF_WITH  error  Node  n  
[buglab_swap_variables]^compiler.report ( JSError.make ( sourceName,  error )  ) ;^77^^^^^76^78^compiler.report ( JSError.make ( sourceName, n, error )  ) ;^[CLASS] ControlStructureCheck  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType error [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  DiagnosticType  USE_OF_WITH  error  Node  n  
[buglab_swap_variables]^compiler.report ( JSError.make ( error, n, sourceName )  ) ;^77^^^^^76^78^compiler.report ( JSError.make ( sourceName, n, error )  ) ;^[CLASS] ControlStructureCheck  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType error [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  DiagnosticType  USE_OF_WITH  error  Node  n  
[buglab_swap_variables]^compiler.report ( JSError.make ( sourceName, n )  ) ;^77^^^^^76^78^compiler.report ( JSError.make ( sourceName, n, error )  ) ;^[CLASS] ControlStructureCheck  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType error [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  DiagnosticType  USE_OF_WITH  error  Node  n  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, error )  ) ;^77^^^^^76^78^compiler.report ( JSError.make ( sourceName, n, error )  ) ;^[CLASS] ControlStructureCheck  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType error [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  DiagnosticType  USE_OF_WITH  error  Node  n  
[buglab_swap_variables]^compiler.report ( JSError.make ( sourceName, error, n )  ) ;^77^^^^^76^78^compiler.report ( JSError.make ( sourceName, n, error )  ) ;^[CLASS] ControlStructureCheck  [METHOD] report [RETURN_TYPE] void   Node n DiagnosticType error [VARIABLES] AbstractCompiler  compiler  String  sourceName  boolean  DiagnosticType  USE_OF_WITH  error  Node  n  
