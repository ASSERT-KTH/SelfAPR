[buglab_swap_variables]^NodeTraversal.traverse ( compiler, namingCallback, root ) ;^56^^^^^53^59^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  namingCallback ) ;^56^^^^^53^59^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( namingCallback, root, compiler ) ;^56^^^^^53^59^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, root ) ;^56^^^^^53^59^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, namingCallback ) ;^56^^^^^53^59^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^NodeTraversal.traverse (  root, namingCallback ) ;^56^^^^^53^59^NodeTraversal.traverse ( compiler, root, namingCallback ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^logger.info ( "Named " + bytesUsed + " anon functions using " + namedCount + " bytes" ) ;^57^58^^^^53^59^logger.info ( "Named " + namedCount + " anon functions using " + bytesUsed + " bytes" ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  AnonymousFunctionNamingCallback  namingCallback  Node  externs  root  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^return name + DELIMITER + DELIMITER;^80^^^^^79^81^return DELIMITER + name + DELIMITER;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] getLikelyNonConflictingName [RETURN_TYPE] String   String name [VARIABLES] AbstractCompiler  compiler  boolean  char  DELIMITER  NodeNameExtractor  nameExtractor  String  name  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^return node.getName ( nameExtractor ) ;^85^^^^^84^86^return nameExtractor.getName ( node ) ;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  char  DELIMITER  NodeNameExtractor  nameExtractor  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^return DELIMITER + lhs + rhs;^99^^^^^98^100^return lhs + DELIMITER + rhs;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  boolean  char  DELIMITER  NodeNameExtractor  nameExtractor  String  lhs  rhs  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^return rhs + DELIMITER + lhs;^99^^^^^98^100^return lhs + DELIMITER + rhs;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  boolean  char  DELIMITER  NodeNameExtractor  nameExtractor  String  lhs  rhs  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^return lhs + rhs + DELIMITER;^99^^^^^98^100^return lhs + DELIMITER + rhs;^[CLASS] NameAnonymousFunctions AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] AbstractCompiler  compiler  boolean  char  DELIMITER  NodeNameExtractor  nameExtractor  String  lhs  rhs  Logger  logger  int  bytesUsed  namedCount  
[buglab_swap_variables]^return name + DELIMITER + DELIMITER;^80^^^^^79^81^return DELIMITER + name + DELIMITER;^[CLASS] AnonymousFunctionNamer  [METHOD] getLikelyNonConflictingName [RETURN_TYPE] String   String name [VARIABLES] NodeNameExtractor  nameExtractor  String  name  boolean  
[buglab_swap_variables]^return node.getName ( nameExtractor ) ;^85^^^^^84^86^return nameExtractor.getName ( node ) ;^[CLASS] AnonymousFunctionNamer  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] NodeNameExtractor  nameExtractor  Node  node  boolean  
[buglab_swap_variables]^return rhs + DELIMITER + lhs;^99^^^^^98^100^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] NodeNameExtractor  nameExtractor  String  lhs  rhs  boolean  
[buglab_swap_variables]^return DELIMITER + lhs + rhs;^99^^^^^98^100^return lhs + DELIMITER + rhs;^[CLASS] AnonymousFunctionNamer  [METHOD] getCombinedName [RETURN_TYPE] String   String lhs String rhs [VARIABLES] NodeNameExtractor  nameExtractor  String  lhs  rhs  boolean  
