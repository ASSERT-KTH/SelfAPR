[buglab_swap_variables]^return compiler.createInternal ( self ) ;^73^^^^^64^76^return self.createInternal ( compiler ) ;^[CLASS] PassFactory 1  [METHOD] makeOneTimePass [RETURN_TYPE] PassFactory   [VARIABLES] AbstractCompiler  compiler  boolean  $anonymous1  isCreated  isOneTimePass  String  $anonymous0  name  PassFactory  self  
[buglab_swap_variables]^return compiler.createInternal ( self ) ;^73^^^^^72^74^return self.createInternal ( compiler ) ;^[CLASS] PassFactory 1  [METHOD] createInternal [RETURN_TYPE] CompilerPass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  $anonymous1  isCreated  isOneTimePass  String  $anonymous0  name  
[buglab_swap_variables]^Preconditions.checkState ( !isCreated || ! "One-time passes cannot be run multiple times: " + name ) ;^82^83^^^^81^86^Preconditions.checkState ( !isCreated || !isOneTimePass, "One-time passes cannot be run multiple times: " + name ) ;^[CLASS] PassFactory 1  [METHOD] create [RETURN_TYPE] CompilerPass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  $anonymous1  isCreated  isOneTimePass  String  $anonymous0  name  
[buglab_swap_variables]^return compiler.createInternal ( self ) ;^73^^^^^72^74^return self.createInternal ( compiler ) ;^[CLASS] 1  [METHOD] createInternal [RETURN_TYPE] CompilerPass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  
