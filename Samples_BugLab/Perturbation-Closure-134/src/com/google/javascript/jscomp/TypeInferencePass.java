[BugLab_Variable_Misuse]^Node externsAndJs = externsRoot.getParent (  ) ;^56^^^^^55^62^Node externsAndJs = jsRoot.getParent (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^Preconditions.checkState ( jsRoot != null ) ;^57^^^^^55^62^Preconditions.checkState ( externsAndJs != null ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Wrong_Operator]^Preconditions.checkState ( externsAndJs == null ) ;^57^^^^^55^62^Preconditions.checkState ( externsAndJs != null ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^Preconditions.checkState ( jsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^Preconditions.checkState ( externsRoot == null || jsRoot.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^Preconditions.checkState ( externsAndJs == null || externsRoot.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Wrong_Operator]^Preconditions.checkState ( externsRoot == null && externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Wrong_Operator]^Preconditions.checkState ( externsRoot != null || externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^externsRoot == null || jsRoot.hasChild ( externsRoot )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^externsRoot == null || externsAndJs.hasChild ( jsRoot )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^externsRoot == null || externsRoot.hasChild ( externsAndJs )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^inferTypes ( jsRoot ) ;^61^^^^^55^62^inferTypes ( externsAndJs ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^NodeTraversal inferTypes = new NodeTraversal ( scopeCreator, new TypeInferringCallback (  ) , compiler ) ;^66^67^^^^65^69^NodeTraversal inferTypes = new NodeTraversal ( compiler, new TypeInferringCallback (  ) , scopeCreator ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^inferTypes.traverseWithScope ( topScope, node ) ;^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, topScope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^new TypeInference ( n, computeCfg ( compiler ) , reverseInterpreter, scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^new TypeInference ( compiler, computeCfg ( scope ) , reverseInterpreter, n ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^new TypeInference ( reverseInterpreter, computeCfg ( n ) , compiler, scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^new TypeInference ( compiler, computeCfg ( n ) , scope, reverseInterpreter ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, topScope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^TypeInference typeInference = compilerew TypeInference ( n, computeCfg ( n ) , reverseInterpreter, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^TypeInference typeInference = scopeew TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, n ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^TypeInference typeInference = new TypeInference ( scope, computeCfg ( n ) , reverseInterpreter, compiler ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^TypeInference typeInference = reverseInterpreterew TypeInference ( compiler, computeCfg ( n ) , n, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^compiler.getTypeRegistry (  ) .resolveTypesInScope ( topScope ) ;^78^^^^^71^83^compiler.getTypeRegistry (  ) .resolveTypesInScope ( scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( n, t, DATAFLOW_ERROR )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, DATAFLOW_ERROR, n )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( DATAFLOW_ERROR, n, t )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Variable_Misuse]^inferTypes ( t, node, topScope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^inferTypes ( node, t, scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^inferTypes ( t, scope, node ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[BugLab_Wrong_Literal]^return false;^95^^^^^94^96^return true;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  parent  ScopeCreator  scopeCreator  
[BugLab_Wrong_Literal]^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, true ) ;^104^^^^^103^107^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[BugLab_Argument_Swapping]^inferTypes ( scope, node, t ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[BugLab_Argument_Swapping]^inferTypes ( t, scope, node ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[BugLab_Wrong_Literal]^return false;^95^^^^^94^96^return true;^[CLASS] TypeInferringCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
