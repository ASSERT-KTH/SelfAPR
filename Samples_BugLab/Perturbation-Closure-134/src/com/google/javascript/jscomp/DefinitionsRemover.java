[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( value ) ;^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( value.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Argument_Swapping]^Preconditions.checkArgument ( lValue.contains ( ALLOWED_TYPES.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  !=  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^ALLOWED_TYPES.contains ( value.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^ALLOWED_TYPES.contains ( name.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^"Unexpected name type " + Token.name ( lValue.getType (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^"Unexpected value type " + Token.name ( lValue.getType (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^this.lValue = name;^98^^^^^93^99^this.lValue = lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^super ( value ) ;^118^^^^^117^119^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^super ( value ) ;^134^^^^^133^135^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isFunction ( literal )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isFunction ( value )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isName ( literal )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isName ( name )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isFunction ( literal )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^function = value;^171^^^^^169^172^function = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^super ( literal ) ;^191^^^^^190^192^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^super ( literal ) ;^206^^^^^205^209^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( value )  ) ;^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^NodeUtil.isAnonymousFunction ( value )  ) ;^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isAssign ( literal )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isAssign ( value )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^assignment = value;^227^^^^^225^228^assignment = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^this.literal = value;^262^^^^^261^265^this.literal = lit;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^this.name = value;^263^^^^^261^265^this.name = name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^this.value = node;^264^^^^^261^265^this.value = value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( value )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( lit )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( name.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( node.hasChildren (  >=  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of "  >>  node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^"VAR Declaration of " + lit.getString (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^name = value;^301^^^^^296^302^name = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[BugLab_Variable_Misuse]^if  ( literal == null )  {^40^^^^^37^61^if  ( parent == null )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^if  ( parent != null )  {^40^^^^^37^61^if  ( parent == null )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isVarDeclaration ( name )  && n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^if  ( NodeUtil.isVarDeclaration ( n )  || n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( value )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == value )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Argument_Swapping]^} else if ( NodeUtil.isFunction ( n )  && parent.getFirstChild (  )  == parent )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if ( NodeUtil.isFunction ( parent )  || parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  <= n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  != n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( name )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == value )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Argument_Swapping]^} else if  ( NodeUtil.isAssign ( n )  && parent.getFirstChild (  )  == parent )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( NodeUtil.isAssign ( parent )  || parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  >= n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  != n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( name, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( n, node )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Argument_Swapping]^} else if  ( NodeUtil.isObjectLitKey ( parent, n )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( node.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  >= Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return nameew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Argument_Swapping]^return functionew FunctionArgumentDefinition ( n, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new FunctionArgumentDefinition ( parent, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return valueew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node function = node.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node function = value.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new FunctionArgumentDefinition ( value, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new ObjectLiteralPropertyDefinition ( name, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return valueew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Argument_Swapping]^return parentew ObjectLiteralPropertyDefinition ( n, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new ObjectLiteralPropertyDefinition ( literal, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return literalew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  != Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return nodeew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new FunctionArgumentDefinition ( name, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node function = n.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( n, value )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return nodeew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( n.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AssignmentDefinition ( n ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AssignmentDefinition ( value ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( value, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( value.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  <= Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return parentew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new ObjectLiteralPropertyDefinition ( node, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new ObjectLiteralPropertyDefinition ( value, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return nameew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AssignmentDefinition ( node ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new FunctionArgumentDefinition ( node, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AssignmentDefinition ( literal ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( literal )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( node, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( n, name )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( literal.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunction ( node )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunctiovalue ( parent )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AnonymousFunctionDefinition ( n ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AnonymousFunctionDefinition ( value ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new NamedFunctionDefinition ( value ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new NamedFunctionDefinition ( literal ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AnonymousFunctionDefinition ( name ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunction ( value )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunctionode ( parent )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AnonymousFunctionDefinition ( literal ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new AnonymousFunctionDefinition ( node ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new NamedFunctionDefinition ( name ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( n, n )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( name.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node function = literal.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node function = name.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( n )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( name )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return nodeew VarDefinition ( n ) ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return nameew VarDefinition ( n ) ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == node )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  >= n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( value )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == name )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  <= n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  > Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return parentew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( n )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunctioliteral ( parent )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new NamedFunctionDefinition ( node ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new NamedFunctionDefinition ( n ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunction ( literal )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isAnonymousFunction ( name )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( literal, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return literalew VarDefinition ( n ) ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isVarDeclaration ( literal )  && n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( literal )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if ( NodeUtil.isFunction ( node )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isObjectLitKey ( n, literal )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return parent;^103^^^^^102^104^return lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return name.getFirstChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return node.getFirstChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return n;^181^^^^^180^182^return function;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^function.replaceChild ( node.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node parent = name.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node parent = value.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node last = parent.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( assignment, parent ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return name.getFirstChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return parent.getLastChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return value.getLastChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^literal.removeChild ( node ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^literal.removeChild ( name ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , n.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , value.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^return node;^287^^^^^286^288^return value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[BugLab_Variable_Misuse]^Node var = node.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Node var = n.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkState ( var.getFirstChild (  )  != var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( n.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( node.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Node parent = value.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Node rValue = n.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Node rValue = rValue.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( name.getType (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  <= Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( value, NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( var, NodeUtil.newExpr ( value )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Argument_Swapping]^parent.replaceChild ( rValue, NodeUtil.newExpr ( var )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( var, NodeUtil.newExpr ( name )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^return parent.getFirstChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^return node.getFirstChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( 3.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[BugLab_Argument_Swapping]^Preconditions.checkArgument ( lValue.contains ( ALLOWED_TYPES.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  <  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isFunction ( argumentName )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isName ( function )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[BugLab_Variable_Misuse]^function = function;^171^^^^^169^172^function = node;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[BugLab_Variable_Misuse]^return node.getFirstChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] FunctionDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  function  node  boolean  
[BugLab_Variable_Misuse]^return node;^181^^^^^180^182^return function;^[CLASS] FunctionDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  function  node  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isAssign ( assignment )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[BugLab_Variable_Misuse]^assignment = assignment;^227^^^^^225^228^assignment = node;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[BugLab_Variable_Misuse]^Node parent = node.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^Node last = parent.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^assignment.removeChild ( parent ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( node, last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Argument_Swapping]^parent.replaceChild ( last, assignment ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^return parent.getFirstChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^return parent.getLastChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[BugLab_Variable_Misuse]^this.literal = value;^262^^^^^261^265^this.literal = lit;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^this.name = value;^263^^^^^261^265^this.name = name;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^this.value = name;^264^^^^^261^265^this.value = value;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^literal.removeChild ( value ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^literal.removeChild ( name ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , value.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^return name;^287^^^^^286^288^return value;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( name )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( name.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( node.hasChildren (  >  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of "  <<  node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[BugLab_Variable_Misuse]^"VAR Declaration of " + name.getString (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[BugLab_Variable_Misuse]^name = name;^301^^^^^296^302^name = node;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[BugLab_Variable_Misuse]^Node var = rValue.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( parent.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkState ( var.getFirstChild (  )  != var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( rValue.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^Node parent = rValue.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^Node rValue = var.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( var.getType (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Wrong_Operator]^Preconditions.checkState ( parent.getType (  )  <= Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^Preconditions.checkState ( rValue.getType (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^parent.replaceChild ( var, NodeUtil.newExpr ( parent )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Argument_Swapping]^parent.replaceChild ( rValue, NodeUtil.newExpr ( var )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^return var;^317^^^^^316^318^return name;^[CLASS] VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[BugLab_Variable_Misuse]^return var.getFirstChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
