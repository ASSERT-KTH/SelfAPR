[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, this ) ;^49^^^^^47^50^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] GatherRawExports  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  this ) ;^49^^^^^47^50^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] GatherRawExports  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse (  root, this ) ;^49^^^^^47^50^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] GatherRawExports  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  Node  externs  root  
[buglab_swap_variables]^if  ( parent != null && sibling.getType (  )  == Token.STRING && NodeUtil.isGet ( sibling )  )  {^55^56^57^^^53^64^if  ( sibling != null && sibling.getType (  )  == Token.STRING && NodeUtil.isGet ( parent )  )  {^[CLASS] GatherRawExports  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  NodeTraversal  t  Node  n  parent  sibling  
[buglab_swap_variables]^if  ( sibling != parentull && sibling.getType (  )  == Token.STRING && NodeUtil.isGet ( n )  )  {^55^56^57^^^53^64^if  ( sibling != null && sibling.getType (  )  == Token.STRING && NodeUtil.isGet ( parent )  )  {^[CLASS] GatherRawExports  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  NodeTraversal  t  Node  n  parent  sibling  
[buglab_swap_variables]^if  ( isGlobalThisObject (  n )  )  {^60^^^^^53^64^if  ( isGlobalThisObject ( t, n )  )  {^[CLASS] GatherRawExports  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  NodeTraversal  t  Node  n  parent  sibling  
[buglab_swap_variables]^if  ( isGlobalThisObject ( n, t )  )  {^60^^^^^53^64^if  ( isGlobalThisObject ( t, n )  )  {^[CLASS] GatherRawExports  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  NodeTraversal  t  Node  n  parent  sibling  
[buglab_swap_variables]^if  ( isGlobalThisObject ( t )  )  {^60^^^^^53^64^if  ( isGlobalThisObject ( t, n )  )  {^[CLASS] GatherRawExports  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  boolean  NodeTraversal  t  Node  n  parent  sibling  
[buglab_swap_variables]^if  ( GLOBAL_THIS_NAME.equals ( varName )  )  {^71^^^^^66^76^if  ( varName.equals ( GLOBAL_THIS_NAME )  )  {^[CLASS] GatherRawExports  [METHOD] isGlobalThisObject [RETURN_TYPE] boolean   NodeTraversal t Node n [VARIABLES] AbstractCompiler  compiler  Set  exportedVariables  String  GLOBAL_THIS_NAME  varName  boolean  NodeTraversal  t  Node  n  
