[BugLab_Variable_Misuse]^if  ( root != null )  {^73^^^^^67^83^if  ( externs != null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Wrong_Operator]^if  ( externs == null )  {^73^^^^^67^83^if  ( externs != null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( externs, compiler, new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, root, new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Variable_Misuse]^List<Node> rootAndJs = Lists.newArrayList ( externs, root ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Variable_Misuse]^List<Node> externsAndJs = Lists.newArrayList ( externs, externs ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^List<Node> rootAndJs = Lists.newArrayList ( externs, externs ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( root, externs ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverseRoots ( root, Lists.newArrayList ( externs, compiler ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverseRoots ( externs, Lists.newArrayList ( compiler, root ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^compiler, Lists.newArrayList ( root, externs ) , new GatherSignatures (  )  ) ;^80^^^^^67^83^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverseRoots ( externsAndJs, compiler, getActingCallback (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[BugLab_Wrong_Literal]^boolean signatureAdded = true;^102^^^^^87^117^boolean signatureAdded = false;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^if  ( function.getType (  )  == Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^if  ( node.getType (  )  != Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^if  ( node.getType (  )  > Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^} else if  ( function.getType (  )  == Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^} else if  ( node.getType (  )  == Token.this )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  != Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^if  ( v != null )  {^114^^^^^99^129^if  ( v == null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^if  ( node != null && function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^if  ( function != null && function.getType (  )  == Token.null )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^if  ( function != null || function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^if  ( function == null && function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^if  ( function != null && function.getType (  )  != Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Literal]^signatureAdded = false;^127^^^^^124^128^signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( functionName, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( function, name, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( name, v, function.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( v, function, name.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Literal]^signatureAdded = false;^127^^^^^112^142^signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^String functionName = function.getString (  ) ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^Scope.Var v = t.getScope (  ) .getVar ( name ) ;^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^Scope.Var v = functionName.getScope (  ) .getVar ( t ) ;^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^Node function = this.getInitialValue (  ) ;^123^^^^^108^138^Node function = v.getInitialValue (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( functionName, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( name, node, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( v, function, name.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( name, v, function.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( name, node, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Literal]^signatureAdded = false;^107^^^^^92^122^signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( functionName, node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( name, function, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( t, node, name.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( node, name, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Wrong_Operator]^} else if  ( node.getType (  )  >= Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Argument_Swapping]^addSignature ( function, name, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^addSignature ( name, function, null.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^nonMethodProperties.add ( functionName ) ;^132^^^^^117^147^nonMethodProperties.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[BugLab_Variable_Misuse]^if  ( externMethodsWithoutSignatures.contains ( fnSourceName )  )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Variable_Misuse]^if  ( 3.contains ( name )  )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Argument_Swapping]^if  ( name.contains ( externMethodsWithoutSignatures )  )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Argument_Swapping]^getSignatureStore (  ) .addSignature ( fnSourceName, function, name ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Argument_Swapping]^getSignatureStore (  ) .addSignature ( name, fnSourceName, function ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Variable_Misuse]^methodDefinitions.put ( fnSourceName, function ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Argument_Swapping]^methodDefinitions.put ( function, name ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  >= Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.3 && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( n, name.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( parentame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  >= Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = value.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  <= Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^for  ( Node key = value.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^for  ( Node value = n.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^for  ( Node n = key.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( key.getType (  )  == Token.this )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  > Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  >= Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  >= Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = value.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.2 )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  <= Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^key != null; value = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = value.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( parentame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( nameame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^for  ( Node key = parent.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^key != null; parent = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  != Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  <= Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^processPrototypeParent ( t, value ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^processPrototypeParent ( parent, t ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^processPrototypeParent ( t, n ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  >= n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  <= Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^for  ( Node key = value.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^for  ( Node n = key.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( key.getType (  )  == Token.3 )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  >= Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^key != null; parent = key.getNext (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^switch  ( parent.getType (  )  )  {^210^^^^^195^225^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^key != null; value = key.getNext (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^if  ( dest.getType (  )  == Token.STRING && n.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^if  ( parent.getType (  )  == Token.STRING && dest.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  == Token.STRING || parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  <= Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  != Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node assignee = n.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^addPossibleSignature ( assignee.getString (  ) , dest, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t, assignee ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node parent = dest.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , assignee, dest ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  <= Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  < n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( nameame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  >= Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  >= Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = value.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^for  ( Node parent = n.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^for  ( Node n = key.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  <= Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = value.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( value.getType (  )  >= Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^key != null; value = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = value.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^for  ( Node key = value.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^switch  ( value.getType (  )  )  {^153^^^^^138^168^switch  ( n.getType (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Variable_Misuse]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Argument_Swapping]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  > Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  < Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  != Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^processPrototypeParent ( t, value ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^processPrototypeParent ( parent, t ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  <= n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^processPrototypeParent ( t, n ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  < Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  != Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^for  ( Node key = value.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^for  ( Node value = n.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^for  ( Node n = key.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Wrong_Operator]^if  ( key.getType (  )  != Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = parent.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node value = value.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Argument_Swapping]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^key != null; value = key.getNext (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^switch  ( parent.getType (  )  )  {^210^^^^^195^225^switch  ( n.getType (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^for  ( Node key = parent.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^key != null; parent = key.getNext (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( value.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^if  ( dest.getType (  )  == Token.STRING && n.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^if  ( parent.getType (  )  == Token.STRING && dest.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  == Token.STRING || parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  != Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node assignee = n.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^addPossibleSignature ( parent.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^addPossibleSignature ( dest.getString (  ) , parent, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^addPossibleSignature ( assignee.getString (  ) , dest, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Argument_Swapping]^addPossibleSignature ( dest.getString (  ) , t, assignee ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^Node parent = dest.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[BugLab_Variable_Misuse]^switch  ( parent.getType (  )  )  {^255^^^^^254^279^switch  ( n.getType (  )  )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
