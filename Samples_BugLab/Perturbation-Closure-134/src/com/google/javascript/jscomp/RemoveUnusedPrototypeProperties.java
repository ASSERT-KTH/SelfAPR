[BugLab_Variable_Misuse]^this.canModifyExterns = anchorUnusedVars;^54^^^^^51^56^this.canModifyExterns = canModifyExterns;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean canModifyExterns boolean anchorUnusedVars [VARIABLES] AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  Logger  logger  
[BugLab_Variable_Misuse]^this.anchorUnusedVars = canModifyExterns;^55^^^^^51^56^this.anchorUnusedVars = anchorUnusedVars;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean canModifyExterns boolean anchorUnusedVars [VARIABLES] AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  Logger  logger  
[BugLab_Variable_Misuse]^analyzer.process ( root, root ) ;^62^^^^^58^64^analyzer.process ( externRoot, root ) ;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  Logger  logger  Node  externRoot  root  AnalyzePrototypeProperties  analyzer  
[BugLab_Variable_Misuse]^analyzer.process ( externRoot, externRoot ) ;^62^^^^^58^64^analyzer.process ( externRoot, root ) ;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  Logger  logger  Node  externRoot  root  AnalyzePrototypeProperties  analyzer  
[BugLab_Argument_Swapping]^analyzer.process ( root, externRoot ) ;^62^^^^^58^64^analyzer.process ( externRoot, root ) ;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  Logger  logger  Node  externRoot  root  AnalyzePrototypeProperties  analyzer  
[BugLab_Wrong_Literal]^boolean changed = true;^71^^^^^70^86^boolean changed = false;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] removeUnusedSymbols [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Collection  allNameInfo  AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  changed  NameInfo  nameInfo  Logger  logger  Symbol  declaration  
[BugLab_Wrong_Literal]^changed = false;^76^^^^^70^86^changed = true;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] removeUnusedSymbols [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Collection  allNameInfo  AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  changed  NameInfo  nameInfo  Logger  logger  Symbol  declaration  
[BugLab_Wrong_Operator]^logger.fine ( "Removed unused prototype property: "   instanceof   nameInfo.name ) ;^79^^^^^70^86^logger.fine ( "Removed unused prototype property: " + nameInfo.name ) ;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] removeUnusedSymbols [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Collection  allNameInfo  AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  changed  NameInfo  nameInfo  Logger  logger  Symbol  declaration  
[BugLab_Wrong_Operator]^logger.fine ( "Removed unused prototype property: "  <=  nameInfo.name ) ;^79^^^^^70^86^logger.fine ( "Removed unused prototype property: " + nameInfo.name ) ;^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] removeUnusedSymbols [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Collection  allNameInfo  AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  changed  NameInfo  nameInfo  Logger  logger  Symbol  declaration  
[BugLab_Variable_Misuse]^if  ( canModifyExterns )  {^83^^^^^70^86^if  ( changed )  {^[CLASS] RemoveUnusedPrototypeProperties  [METHOD] removeUnusedSymbols [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Collection  allNameInfo  AbstractCompiler  compiler  boolean  anchorUnusedVars  canModifyExterns  changed  NameInfo  nameInfo  Logger  logger  Symbol  declaration  
