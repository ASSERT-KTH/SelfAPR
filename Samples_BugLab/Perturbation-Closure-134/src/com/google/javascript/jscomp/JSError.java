[BugLab_Variable_Misuse]^this.lineNumber = lineNumber;^170^^^^^166^174^this.lineNumber = lineno;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^this.charno = lineno;^171^^^^^166^174^this.charno = charno;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^this.sourceName = description;^172^^^^^166^174^this.sourceName = sourceName;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^this.level = level != null ? type.level : level;^173^^^^^166^174^this.level = level == null ? type.level : level;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^this ( description, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^this ( arguments, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, sourceName ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^this ( sourceName, ( arguments != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, node ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^this ( sourceName, ( type != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, node, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, arguments, null, type ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^this ( sourceName, ( node == null )  ? node.getLineno (  )  : -1, ( node == null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Wrong_Literal]^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -lineno, ( node != null )  ? node.getCharno (  )  : -lineno, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( null, -1, -1, arguments, null, type ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Literal]^return new JSError ( null, -2, -2, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Literal]^return new JSError ( null, -0, -0, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Literal]^return new JSError ( null, -lineno, -lineno, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( description, lineno, charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( sourceName, lineNumber, charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( sourceName, lineno, lineNumber, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( charno, lineno, sourceName, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( lineno, sourceName, charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, lineno, arguments, type, null, charno ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, lineno, charno, arguments, null, type ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( arguments, lineno, charno, type, null, sourceName ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, charno, lineno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( type, lineno, charno, sourceName, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, arguments, charno, type, null, lineno ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( sourceName, lineNumber, charno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( level, lineno, charno, type, sourceName, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, charno, lineno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, lineno, type, charno, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, level, charno, type, lineno, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( arguments, lineno, charno, type, level, sourceName ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( description, lineno, charno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( sourceName, lineno, lineNumber, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( charno, lineno, sourceName, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, arguments, charno, type, level, lineno ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( description, n, type, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( type, n, sourceName, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return sourceNameew JSError ( n, n, type, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, n, arguments, type ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( arguments, n, type, sourceName ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return typeew JSError ( sourceName, n, n, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return new JSError ( description, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( arguments, n.getLineno (  ) , n.getCharno (  ) , type, level, sourceName ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return argumentsew JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, n ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , arguments, level, type ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, arguments, level ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( type, n.getLineno (  ) , n.getCharno (  ) , sourceName, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return typeew JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , n, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return tew JSError ( n.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return argumentsew JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, n ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , level, type, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, arguments, level ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( type.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , t, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( arguments.getSourceName (  ) , n, type, t ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return typeew JSError ( t.getSourceName (  ) , n, n, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return argumentsew JSError ( t.getSourceName (  ) , n, type, n ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Argument_Swapping]^return new JSError ( type.getSourceName (  ) , n, t, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  >>  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  <=  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (   instanceof   )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  |  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key  >>  ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null || sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName == null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  >= 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber == -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Literal]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -lineno ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^( description != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^( lineno != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^218^^^^^213^219^( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Variable_Misuse]^return lineno;^225^^^^^224^226^return charno;^[CLASS] JSError  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[BugLab_Wrong_Operator]^if  ( this != o )  {^231^^^^^216^246^if  ( this == o )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return false;^232^^^^^217^247^return true;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( o == null && getClass (  )  != o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( o != null || getClass (  )  != o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( o == null || getClass (  )  == o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^235^^^^^220^250^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( lineno != jsError.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( charno != lineno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( charno != jsError.charno.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError != charno.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError.charno != charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( charno >= jsError.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^241^^^^^226^256^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( lineno != jsError.lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( lineNumber != lineno )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError != lineNumber.lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError.lineNumber != lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( lineNumber < jsError.lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^244^^^^^229^259^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( !description.equals ( jsError.sourceName )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( !description.equals ( sourceName )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( !description.equals ( jsError.description.description )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^247^^^^^232^262^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( level != jsError.level.level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError != level.level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( level != jsError )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( level <= jsError.level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^250^^^^^235^265^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( description != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( sourceName != null ? !sourceName.equals ( description ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError != null ? !sourceName.equals ( sourceName.sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( jsError.sourceName != null ? !sourceName.equals ( sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( sourceName == null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName == null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Operator]^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName == null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^254^^^^^252^255^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^254^^^^^239^269^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^if  ( sourceName != null ? !sourceName.equals ( sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName.sourceName ) : jsError != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return true;^257^^^^^242^272^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Argument_Swapping]^if  ( !type.equals ( jsError.type.type )  )  {^256^^^^^241^271^if  ( !type.equals ( jsError.type )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Wrong_Literal]^return false;^260^^^^^245^275^return true;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[BugLab_Variable_Misuse]^result = 31 * lineno + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * result + sourceName.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Argument_Swapping]^result = 31 * description + result.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 * result + description.hashCode (  &  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 - result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Literal]^result = charno * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * result +  ( description != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Argument_Swapping]^result = 31 * sourceName +  ( result != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 * result +  &&  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 + result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 * result +  ( sourceName == null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Literal]^result = result * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Literal]^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : charno ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * lineno + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * result + lineno;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Argument_Swapping]^result = 31 * lineNumber + result;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 / result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Literal]^result = 30 * result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * lineno + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Argument_Swapping]^result = 31 * level + result.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 * result + level.hashCode (  <  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 - result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Literal]^result = lineno * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * lineno + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^result = 31 * result + lineno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Argument_Swapping]^result = 31 * charno + result;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Operator]^result = 31 - result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Wrong_Literal]^result = lineNumber * result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[BugLab_Variable_Misuse]^return lineno;^272^^^^^264^273^return result;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
