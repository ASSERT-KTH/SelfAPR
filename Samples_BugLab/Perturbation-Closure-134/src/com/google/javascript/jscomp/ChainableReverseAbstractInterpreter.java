[BugLab_Variable_Misuse]^Preconditions.checkArgument ( nextLink.nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Variable_Misuse]^Preconditions.checkArgument ( nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Argument_Swapping]^Preconditions.checkArgument ( lastLink.nextLink.nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Argument_Swapping]^Preconditions.checkArgument ( lastLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Wrong_Operator]^Preconditions.checkArgument ( lastLink.nextLink != null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Variable_Misuse]^this.nextLink = nextLink;^81^^^^^78^84^this.nextLink = lastLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Variable_Misuse]^lastLink.firstLink = nextLink;^82^^^^^78^84^lastLink.firstLink = this.firstLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Variable_Misuse]^return nextLink;^83^^^^^78^84^return lastLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Variable_Misuse]^return nextLink;^90^^^^^89^91^return firstLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getFirst [RETURN_TYPE] ChainableReverseAbstractInterpreter   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[BugLab_Variable_Misuse]^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, resultEqualsValue ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Variable_Misuse]^return nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return firstLink.getPreciserScopeKnowingConditionOutcome ( blindScope, condition, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return outcome.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, firstLink ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return condition.getPreciserScopeKnowingConditionOutcome ( firstLink, blindScope, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return firstLink.getPreciserScopeKnowingConditionOutcome ( outcome, blindScope, condition ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, outcome, blindScope ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return blindScope.getPreciserScopeKnowingConditionOutcome ( condition, firstLink, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Variable_Misuse]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, resultEqualsValue )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Variable_Misuse]^return lastLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( blindScope, condition, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return blindScope != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, nextLink, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return outcome != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, nextLink )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Wrong_Operator]^return nextLink == null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return condition != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( nextLink, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Argument_Swapping]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, outcome, blindScope )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[BugLab_Variable_Misuse]^if  ( 3 != null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^if  ( nameVar == null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^if  ( propVarType == null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^if  ( nameVarType != null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^return propVarType;^126^^^^^111^141^return nameVarType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^if  ( value == null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^if  ( qualifiedName != null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^if  ( propVar == null )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^if  ( nameVarType == null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^if  ( propVarType != null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^if  ( propVarType != null )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^return nameVarType;^146^^^^^131^161^return propVarType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Argument_Swapping]^StaticSlot<JSType> nameVar = node.getSlot ( scope.getString (  )  ) ;^120^^^^^105^135^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^StaticSlot<JSType> propVar = scope.getSlot ( value ) ;^135^^^^^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Argument_Swapping]^StaticSlot<JSType> propVar = qualifiedName.getSlot ( scope ) ;^135^^^^^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^origType = type == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Wrong_Operator]^origType = origType != null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^scope.inferSlotType ( node.getString (  ) , origType ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Argument_Swapping]^scope.inferSlotType ( type.getString (  ) , node ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Variable_Misuse]^scope.inferQualifiedSlot ( value, origType, type ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Argument_Swapping]^scope.inferQualifiedSlot ( origType, qualifiedName, type ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Argument_Swapping]^scope.inferQualifiedSlot ( qualifiedName, type, origType ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[BugLab_Argument_Swapping]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Argument_Swapping]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Variable_Misuse]^if  ( alternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Argument_Swapping]^if  ( restricted != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Argument_Swapping]^if  ( restrictedAlternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Wrong_Operator]^if  ( restrictedAlternate == null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^if  ( alternate == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Wrong_Operator]^if  ( restricted != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^restricted = alternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Argument_Swapping]^restricted = restricted.getLeastSupertype ( restrictedAlternate ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Argument_Swapping]^restricted = restrictedAlternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^restricted = alternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^restricted = restricted;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^JSType restrictedAlternate = restricted.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^JSType restrictedAlternate = restrictedAlternate.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Variable_Misuse]^return restrictedAlternate;^342^^^^^330^343^return restricted;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[BugLab_Argument_Swapping]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[BugLab_Variable_Misuse]^return qualifiedName.equals ( value )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return result.equals ( qualifiedName )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return result.equals ( value )  == outcome;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return value.equals ( result )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return result.equals ( resultEqualsValue )  == value;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return result.equals ( value )  > resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^if  ( outcome )  {^487^^^^^486^501^if  ( resultEqualsValue )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^if  ( result.equals ( "number" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "boolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "string" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "undefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return  ( result.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == outcome ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return  ( resultEqualsValue.equals ( "object" )  || value.equals ( "function" )  )  == value ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  != resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return  ( value.equals ( "object" )  && value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^if  ( result.equals ( "function" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return outcome && ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return ctorType && resultEqualsValue.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return type && ctorType.isSubtype ( resultEqualsValue )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return resultEqualsValue || ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return resultEqualsValue && type.isSubtype ( ctorType )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return restrictUndefinedVisitor == null ? null : type.visit ( type ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return type != null ? null : type.visit ( restrictUndefinedVisitor ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return restrictNullVisitor == null ? null : type.visit ( type ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return type != null ? null : type.visit ( restrictNullVisitor ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( result, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, outcome )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return resultEqualsValue == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, type )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return value == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( type, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( resultEqualsValue, value )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Wrong_Operator]^return type != null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, outcome )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^type.visit ( new RestrictByOneTypeOfResultVisitor ( resultEqualsValue, value )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Variable_Misuse]^type.visit ( new RestrictByOneTypeOfResultVisitor ( result, resultEqualsValue )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[BugLab_Argument_Swapping]^return typeId.getNativeType ( typeRegistry ) ;^590^^^^^589^591^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  
[BugLab_Argument_Swapping]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Argument_Swapping]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Variable_Misuse]^if  ( alternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^if  ( alternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Argument_Swapping]^if  ( restricted != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Argument_Swapping]^if  ( restrictedAlternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Wrong_Operator]^if  ( restrictedAlternate == null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^if  ( alternate == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Wrong_Operator]^if  ( restricted != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^restricted = alternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^restricted = alternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Argument_Swapping]^restricted = restricted.getLeastSupertype ( restrictedAlternate ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Argument_Swapping]^restricted = restrictedAlternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^restricted = restricted;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^JSType restrictedAlternate = restricted.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^JSType restrictedAlternate = restrictedAlternate.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Variable_Misuse]^return restrictedAlternate;^342^^^^^330^343^return restricted;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[BugLab_Argument_Swapping]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Wrong_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[BugLab_Argument_Swapping]^return value.equals ( result )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Argument_Swapping]^return resultEqualsValue.equals ( value )  == result;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Wrong_Operator]^return result.equals ( value )  >= resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Variable_Misuse]^if  ( result.equals ( "number" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "boolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "undefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[BugLab_Variable_Misuse]^} else if  ( result.equals ( "string" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[BugLab_Variable_Misuse]^return  ( result.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Argument_Swapping]^return  ( resultEqualsValue.equals ( "object" )  || value.equals ( "function" )  )  == value ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Wrong_Operator]^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  != resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Wrong_Operator]^return  ( value.equals ( "object" )  && value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[BugLab_Variable_Misuse]^if  ( result.equals ( "function" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[BugLab_Argument_Swapping]^return resultEqualsValue && type.isSubtype ( ctorType )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[BugLab_Argument_Swapping]^return type && ctorType.isSubtype ( resultEqualsValue )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[BugLab_Argument_Swapping]^return ctorType && resultEqualsValue.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[BugLab_Wrong_Operator]^return resultEqualsValue || ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
