[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] CheckMissingGetCssName  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  externs  root  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] CheckMissingGetCssName  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  externs  root  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  
[buglab_swap_variables]^NodeTraversal.traverse (  root, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] CheckMissingGetCssName  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  externs  root  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey (  parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideGetCssNameCall ( parent, n )  )  {^73^^^^^65^86^if  ( insideGetCssNameCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideGetCssNameCall (  parent )  )  {^73^^^^^65^86^if  ( insideGetCssNameCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideGetCssNameCall ( n )  )  {^73^^^^^65^86^if  ( insideGetCssNameCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideGetUniqueIdCall ( parent, n )  )  {^76^^^^^65^86^if  ( insideGetUniqueIdCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideGetUniqueIdCall (  parent )  )  {^76^^^^^65^86^if  ( insideGetUniqueIdCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideGetUniqueIdCall ( n )  )  {^76^^^^^65^86^if  ( insideGetUniqueIdCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideAssignmentToIdConstant ( parent, n )  )  {^79^^^^^65^86^if  ( insideAssignmentToIdConstant ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideAssignmentToIdConstant (  parent )  )  {^79^^^^^65^86^if  ( insideAssignmentToIdConstant ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^if  ( insideAssignmentToIdConstant ( n )  )  {^79^^^^^65^86^if  ( insideAssignmentToIdConstant ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^for  ( s.reset ( blacklist ) ; blacklist.find (  ) ; )  {^72^^^^^65^86^for  ( blacklist.reset ( s ) ; blacklist.find (  ) ; )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( MISSING_GETCSSNAME, n, level, t, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, level, n, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, level,  blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( level, n, t, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, level, blacklist, MISSING_GETCSSNAME.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( blacklist, n, level, MISSING_GETCSSNAME, t.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, MISSING_GETCSSNAME, level, n, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, blacklist, MISSING_GETCSSNAME, level.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n, MISSING_GETCSSNAME, level, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^!NodeUtil.isObjectLitKey ( parent, n )  )  {^69^^^^^65^86^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^!NodeUtil.isObjectLitKey (  parent )  )  {^69^^^^^65^86^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^!NodeUtil.isObjectLitKey ( n )  )  {^69^^^^^65^86^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^return GET_CSS_NAME_FUNCTION.getType (  )  == Token.CALL && parent.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^90^91^92^^^89^93^return parent.getType (  )  == Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetCssNameCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[buglab_swap_variables]^return GET_UNIQUE_ID_FUNCTION.getType (  )  == Token.CALL && parent.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^100^101^102^^^99^103^return parent.getType (  )  == Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetUniqueIdCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
