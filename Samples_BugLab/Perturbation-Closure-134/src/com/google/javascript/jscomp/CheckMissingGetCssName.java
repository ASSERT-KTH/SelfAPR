[BugLab_Variable_Misuse]^this.blacklist = Pattern.compile ( "\\b ( ?:" + GET_UNIQUE_ID_FUNCTION + " ) " ) .matcher ( "" ) ;^49^50^^^^45^51^this.blacklist = Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^this.blacklist = Pattern.compile ( "\\b ( ?:"  ==  blacklistRegex  ==  " ) " ) .matcher ( "" ) ;^49^50^^^^45^51^this.blacklist = Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^this.blacklist = Pattern.compile ( "\\b ( ?:"  !=  blacklistRegex + " ) " ) .matcher ( "" ) ;^49^50^^^^45^51^this.blacklist = Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Variable_Misuse]^Pattern.compile ( "\\b ( ?:" + GET_UNIQUE_ID_FUNCTION + " ) " ) .matcher ( "" ) ;^50^^^^^45^51^Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^Pattern.compile ( "\\b ( ?:"  ^  blacklistRegex  ^  " ) " ) .matcher ( "" ) ;^50^^^^^45^51^Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^Pattern.compile ( "\\b ( ?:"  &&  blacklistRegex + " ) " ) .matcher ( "" ) ;^50^^^^^45^51^Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^Pattern.compile ( "\\b ( ?:"  <  blacklistRegex  <  " ) " ) .matcher ( "" ) ;^50^^^^^45^51^Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^Pattern.compile ( "\\b ( ?:"  <=  blacklistRegex + " ) " ) .matcher ( "" ) ;^50^^^^^45^51^Pattern.compile ( "\\b ( ?:" + blacklistRegex + " ) " ) .matcher ( "" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler CheckLevel level String blacklistRegex [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, externs, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] CheckMissingGetCssName  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  externs  root  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] CheckMissingGetCssName  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  externs  root  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.STRING && n.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.0 && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^if  ( parent.getType (  )  == Token.STRING && n.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  == Token.STRING || parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  == Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^if  ( insideGetCssNameCall ( parent, n )  )  {^73^^^^^65^86^if  ( insideGetCssNameCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^if  ( insideGetUniqueIdCall ( parent, n )  )  {^76^^^^^65^86^if  ( insideGetUniqueIdCall ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^if  ( insideAssignmentToIdConstant ( parent, n )  )  {^79^^^^^65^86^if  ( insideAssignmentToIdConstant ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^for  ( blacklist.reset ( blacklistRegex ) ; blacklist.find (  ) ; )  {^72^^^^^65^86^for  ( blacklist.reset ( s ) ; blacklist.find (  ) ; )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( MISSING_GETCSSNAME, n, level, t, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, n, blacklist, MISSING_GETCSSNAME, level.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, n, level, blacklist, MISSING_GETCSSNAME.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( n, t, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, MISSING_GETCSSNAME, level, n, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( blacklist, n, level, MISSING_GETCSSNAME, t.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^String s = parent.getString (  ) ;^70^^^^^65^86^String s = n.getString (  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^for  ( s.reset ( blacklist ) ; blacklist.find (  ) ; )  {^72^^^^^65^86^for  ( blacklist.reset ( s ) ; blacklist.find (  ) ; )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^compiler.report ( JSError.make ( t, parent, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, level, n, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( level, n, t, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^compiler.report ( JSError.make ( t, n, MISSING_GETCSSNAME, level, blacklist.group (  )  )  ) ;^82^83^^^^65^86^compiler.report ( JSError.make ( t, n, level, MISSING_GETCSSNAME, blacklist.group (  )  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^parent.getType (  )  != Token.GETPROP && n.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^67^68^69^^^65^86^parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, n )  )  {^68^69^^^^65^86^parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^!NodeUtil.isObjectLitKey ( parent, n )  )  {^69^^^^^65^86^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] CheckMissingGetCssName  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  NodeTraversal  t  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^90^91^92^^^89^93^return parent.getType (  )  == Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetCssNameCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Argument_Swapping]^return GET_CSS_NAME_FUNCTION.getType (  )  == Token.CALL && parent.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^90^91^92^^^89^93^return parent.getType (  )  == Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetCssNameCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^return parent.getType (  )  == Token.CALL || GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^90^91^92^^^89^93^return parent.getType (  )  == Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetCssNameCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^return parent.getType (  )  >= Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^90^91^92^^^89^93^return parent.getType (  )  == Token.CALL && GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetCssNameCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^GET_CSS_NAME_FUNCTION.equals ( n.getFirstChild (  ) .getQualifiedName (  )  ) ;^91^92^^^^89^93^GET_CSS_NAME_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetCssNameCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^return n.getType (  )  == Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^100^101^102^^^99^103^return parent.getType (  )  == Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetUniqueIdCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^return parent.getType (  )  == Token.CALL && s.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^100^101^102^^^99^103^return parent.getType (  )  == Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetUniqueIdCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^return parent.getType (  )  == Token.CALL || GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^100^101^102^^^99^103^return parent.getType (  )  == Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetUniqueIdCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Wrong_Operator]^return parent.getType (  )  != Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^100^101^102^^^99^103^return parent.getType (  )  == Token.CALL && GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetUniqueIdCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^GET_UNIQUE_ID_FUNCTION.equals ( n.getFirstChild (  ) .getQualifiedName (  )  ) ;^101^102^^^^99^103^GET_UNIQUE_ID_FUNCTION.equals ( parent.getFirstChild (  ) .getQualifiedName (  )  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideGetUniqueIdCall [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.ASSIGN )  {^110^^^^^109^124^if  ( parent.getType (  )  == Token.ASSIGN )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  <= Token.ASSIGN )  {^110^^^^^109^124^if  ( parent.getType (  )  == Token.ASSIGN )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN )  {^110^^^^^109^124^if  ( parent.getType (  )  == Token.ASSIGN )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^if  ( parent.getType (  )  != Token.ASSIGN )  {^110^^^^^109^124^if  ( parent.getType (  )  == Token.ASSIGN )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^} else if  ( n.getType (  )  == Token.NAME )  {^113^^^^^109^124^} else if  ( parent.getType (  )  == Token.NAME )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  != Token.NAME )  {^113^^^^^109^124^} else if  ( parent.getType (  )  == Token.NAME )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Literal]^return true;^122^^^^^109^124^return false;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^if  ( parent != null && grandParent.getType (  )  == Token.VAR )  {^115^^^^^109^124^if  ( grandParent != null && grandParent.getType (  )  == Token.VAR )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^if  ( grandParent != null || grandParent.getType (  )  == Token.VAR )  {^115^^^^^109^124^if  ( grandParent != null && grandParent.getType (  )  == Token.VAR )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^if  ( grandParent == null && grandParent.getType (  )  == Token.VAR )  {^115^^^^^109^124^if  ( grandParent != null && grandParent.getType (  )  == Token.VAR )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^if  ( grandParent != null && grandParent.getType (  )  != Token.VAR )  {^115^^^^^109^124^if  ( grandParent != null && grandParent.getType (  )  == Token.VAR )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Literal]^return true;^119^^^^^109^124^return false;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^return isIdName ( s ) ;^117^^^^^109^124^return isIdName ( name ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^String name = n.getString (  ) ;^116^^^^^109^124^String name = parent.getString (  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^return isIdName ( qname ) ;^117^^^^^109^124^return isIdName ( name ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^Node grandParent = n.getParent (  ) ;^114^^^^^109^124^Node grandParent = parent.getParent (  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^return name != null && isIdName ( qname ) ;^112^^^^^109^124^return qname != null && isIdName ( qname ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^return qname != null || isIdName ( qname ) ;^112^^^^^109^124^return qname != null && isIdName ( qname ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^return qname == null && isIdName ( qname ) ;^112^^^^^109^124^return qname != null && isIdName ( qname ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^String qname = n.getFirstChild (  ) .getQualifiedName (  ) ;^111^^^^^109^124^String qname = parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Wrong_Operator]^} else if  ( parent.getType (  )  <= Token.NAME )  {^113^^^^^109^124^} else if  ( parent.getType (  )  == Token.NAME )  {^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^return s != null && isIdName ( qname ) ;^112^^^^^109^124^return qname != null && isIdName ( qname ) ;^[CLASS] CheckMissingGetCssName  [METHOD] insideAssignmentToIdConstant [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  Node  grandParent  n  parent  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  
[BugLab_Variable_Misuse]^return s.endsWith ( "ID" )  || name.endsWith ( "ID_" ) ;^127^^^^^126^128^return name.endsWith ( "ID" )  || name.endsWith ( "ID_" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] isIdName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
[BugLab_Wrong_Operator]^return name.endsWith ( "ID" )  && name.endsWith ( "ID_" ) ;^127^^^^^126^128^return name.endsWith ( "ID" )  || name.endsWith ( "ID_" ) ;^[CLASS] CheckMissingGetCssName  [METHOD] isIdName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  String  GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  name  qname  s  boolean  Matcher  blacklist  CheckLevel  level  DiagnosticType  MISSING_GETCSSNAME  
