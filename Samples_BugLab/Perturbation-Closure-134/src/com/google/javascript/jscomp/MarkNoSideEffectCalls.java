[BugLab_Variable_Misuse]^defFinder.process ( root, root ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Argument_Swapping]^defFinder.process ( root, externs ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Wrong_Literal]^compiler, externs, new GatherNoSideEffectFunctions ( false )  ) ;^66^^^^^59^72^compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( externs, compiler, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Wrong_Literal]^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( false )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Wrong_Literal]^compiler, root, new GatherNoSideEffectFunctions ( true )  ) ;^68^^^^^59^72^compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Wrong_Literal]^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( true )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, externs, new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( compiler, defFinder, new SetNoSideEffectCallProperty ( root )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( defFinder, root, new SetNoSideEffectCallProperty ( compiler )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^80^^^^^78^99^if  ( rhs == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Literal]^return false;^81^^^^^78^99^return true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Literal]^return false;^95^^^^^78^99^return true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Literal]^return true;^97^^^^^78^99^return false;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^return docInfo != null || docInfo.isNoSideEffects (  ) ;^107^^^^^105^108^return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^return docInfo == null && docInfo.isNoSideEffects (  ) ;^107^^^^^105^108^return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^if  ( !inExterns && hasNoSideEffectsAnnotation ( parent )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( !hasAnnotation && hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^if  ( !inExterns || hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^traversal.report ( parent, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Argument_Swapping]^traversal.report ( INVALID_NO_SIDE_EFFECT_ANNOTATION, node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isGetProp ( parent )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isFunction ( parent )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isName ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( hasNoSideEffectsAnnotation ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Literal]^hasAnnotation = false;^152^^^^^137^167^hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^nameNodes.add ( node.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isVar ( parent )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^if  ( NodeUtil.isVar ( gramp )  || gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Literal]^hasAnnotation = false;^146^^^^^143^147^hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Literal]^hasAnnotation = false;^146^^^^^131^161^hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^Node gramp = node.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( parent )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^hasNoSideEffectsAnnotation ( parent )  )  {^145^^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^nameNodes.add ( node ) ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( inExterns )  {^158^^^^^143^173^if  ( hasAnnotation )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^boolean hasAnnotation = hasNoSideEffectsAnnotation ( parent ) ;^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^nameNodes.add ( parent.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^noSideEffectFunctionNames.addAll ( 4 ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( nameNode )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^if  ( NodeUtil.isExpressionNode ( parent )  || hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^hasNoSideEffectsAnnotation ( parent )  )  {^128^^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( nameNode )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Argument_Swapping]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isCall ( parent )  && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^if  ( !NodeUtil.isCall ( node )  || !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Argument_Swapping]^Collection<Definition> definitions = node.getDefinitionsReferencedAt ( defFinder.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^if  ( definitions != null )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( !noSideEffectFunctionNames.contains ( parent )  && definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Argument_Swapping]^if  ( !noSideEffectFunctionNames.contains ( def )  && lValueinitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Wrong_Operator]^if  ( !noSideEffectFunctionNames.contains ( lValue )  || definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( parent ) ;^190^^^^^177^198^Preconditions.checkNotNull ( lValue ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[BugLab_Variable_Misuse]^if  ( !inExterns && hasNoSideEffectsAnnotation ( parent )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( !hasAnnotation && hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Wrong_Operator]^if  ( !inExterns || hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^traversal.report ( parent, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isGetProp ( parent )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isFunction ( parent )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isName ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isAssign ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( hasNoSideEffectsAnnotation ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Wrong_Literal]^hasAnnotation = false;^152^^^^^137^167^hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^nameNodes.add ( node.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isVar ( parent )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Wrong_Operator]^if  ( NodeUtil.isVar ( gramp )  || gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Wrong_Literal]^hasAnnotation = false;^146^^^^^143^147^hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Wrong_Literal]^hasAnnotation = false;^146^^^^^131^161^hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^Node gramp = node.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( parent )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^hasNoSideEffectsAnnotation ( parent )  )  {^145^^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( inExterns )  {^158^^^^^143^173^if  ( hasAnnotation )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^boolean hasAnnotation = hasNoSideEffectsAnnotation ( parent ) ;^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^nameNodes.add ( parent.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^nameNodes.add ( node ) ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^noSideEffectFunctionNames.addAll ( this ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( nameNode )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( nameNode )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Argument_Swapping]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Wrong_Operator]^if  ( NodeUtil.isExpressionNode ( parent )  || hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^hasNoSideEffectsAnnotation ( parent )  )  {^128^^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[BugLab_Variable_Misuse]^if  ( !NodeUtil.isCall ( parent )  && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Wrong_Operator]^if  ( !NodeUtil.isCall ( node )  || !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Variable_Misuse]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Argument_Swapping]^Collection<Definition> definitions = node.getDefinitionsReferencedAt ( defFinder.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Variable_Misuse]^defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Wrong_Operator]^if  ( definitions != null )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Variable_Misuse]^if  ( !noSideEffectFunctionNames.contains ( parent )  && definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Argument_Swapping]^if  ( !noSideEffectFunctionNames.contains ( def )  && lValueinitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Wrong_Operator]^if  ( !noSideEffectFunctionNames.contains ( lValue )  || definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( parent ) ;^190^^^^^177^198^Preconditions.checkNotNull ( lValue ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
