[buglab_swap_variables]^defFinder.process ( root, externs ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^defFinder.process (  root ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^defFinder.process ( externs ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( externs, compiler, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse (  externs, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, defFinder, new SetNoSideEffectCallProperty ( root )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[buglab_swap_variables]^traversal.report ( INVALID_NO_SIDE_EFFECT_ANNOTATION, node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[buglab_swap_variables]^traversal.report (  INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[buglab_swap_variables]^traversal.report ( node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[buglab_swap_variables]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[buglab_swap_variables]^Collection<Definition> definitions = node.getDefinitionsReferencedAt ( defFinder.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[buglab_swap_variables]^if  ( !noSideEffectFunctionNames.contains ( def )  && lValueinitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[buglab_swap_variables]^traversal.report (  INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[buglab_swap_variables]^traversal.report ( node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[buglab_swap_variables]^traversal.report ( INVALID_NO_SIDE_EFFECT_ANNOTATION, node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[buglab_swap_variables]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[buglab_swap_variables]^Collection<Definition> definitions = node.getDefinitionsReferencedAt ( defFinder.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
