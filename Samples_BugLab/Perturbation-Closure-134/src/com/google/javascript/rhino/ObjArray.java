[BugLab_Wrong_Literal]^sealed = false;^63^^^^^61^64^sealed = true;^[CLASS] ObjArray  [METHOD] seal [RETURN_TYPE] void   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[BugLab_Variable_Misuse]^return FIELDS_STORE_SIZE == 0;^68^^^^^66^69^return size == 0;^[CLASS] ObjArray  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[BugLab_Wrong_Operator]^return size != 0;^68^^^^^66^69^return size == 0;^[CLASS] ObjArray  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[BugLab_Variable_Misuse]^return FIELDS_STORE_SIZE;^73^^^^^71^74^return size;^[CLASS] ObjArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[BugLab_Variable_Misuse]^int N = newSize;^80^^^^^76^91^int N = size;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size < N )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( newSize < size )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( newSize <= N )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^} else if  ( size > N )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^} else if  ( newSize > size )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^} else if  ( newSize >= N )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size > FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( newSize > size )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE > newSize )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( newSize == FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^ensureCapacity ( i ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^ensureCapacity ( size ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( newSize < FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( int i = size; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( newSizent i = newSize; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( int i = newSize; i != size; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^for  ( int i = N; i != newSize; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^for  ( Nnt i = newSize; i != i; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = newSize; i <= N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( size, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( newSize, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^} else if  ( N > newSize )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( newSize >= FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( sizent i = newSize; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^for  ( newSizent i = i; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = newSize; i == N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^size = i;^90^^^^^76^91^size = newSize;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= newSize && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( ! ( 0 <= size && index < index )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index || index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 < index && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( ! ( 1 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= index && index < newSize )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return getImpl ( size ) ;^96^^^^^93^97^return getImpl ( index ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= newSize && index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( ! ( 0 <= size && index < index )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index || index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 > index && index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= index && index < newSize )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( size, value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( index, f4 ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^setImpl ( value, index ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 0: return value;^110^^^^^107^117^case 0: return f0;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 2: return f4;^112^^^^^107^117^case 2: return f2;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 3: return value;^113^^^^^107^117^case 3: return f3;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 4: return value;^114^^^^^107^117^case 4: return f4;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return data[size - FIELDS_STORE_SIZE];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return data[index - size];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^return FIELDS_STORE_SIZE[index - data];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^return data[index  ||  FIELDS_STORE_SIZE];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 0: f0 = f4; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 1: f1 = f4; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 3: f3 = f4; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 4: f4 = f3; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^default: data[size - FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^default: data[index - FIELDS_STORE_SIZE] = f4;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^default: data[index - size] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^default: data[index - value] = FIELDS_STORE_SIZE;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^default: data[index  ^  FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^int N = newSize;^135^^^^^133^143^int N = size;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( f4 == obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( obj == current ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current == obj &&  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current != obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current == obj ||  ( current != null || current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current == obj ||  ( current == null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return newSize;^139^^^^^133^143^return i;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( int i = 0; i != size; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^for  ( Nnt i = 0; i != i; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = 0; i >= N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( value == obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( current == value ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return size;^139^^^^^133^143^return i;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^Object current = getImpl ( size ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^for  ( int i = i; i != N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^Object current = getImpl ( newSize ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^return -2;^142^^^^^133^143^return -1;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( f4 == obj ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( current == value ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( obj == current ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current == obj &&  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current != obj ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current == obj ||  ( current != null || current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( current == obj ||  ( current == null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return size;^151^^^^^145^155^return i;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( int i = newSize; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^for  ( sizent i = i; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = size; i <= 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = size; i >= 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( value == obj ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( current == f4 ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^Object current = getImpl ( size ) ;^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return newSize;^151^^^^^145^155^return i;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^return -N;^154^^^^^145^155^return -1;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 0 )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N <= 0 )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return getImpl ( newSize - 1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^return getImpl ( N  |  1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^return getImpl ( N - FIELDS_STORE_SIZE ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^return getImpl ( N  <<  1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^return getImpl ( N  ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^int N = newSize;^168^^^^^165^184^int N = size;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 0: top = obj; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 1: top = value; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 2: top = value; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 3: top = top; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^case 4: top = value; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^top = data[size - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^top = data[N - size];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^top = data[N  !=  FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[size - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[N - newSize] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^data[N   instanceof   FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^return obj;^183^^^^^165^184^return top;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^add ( f4 ) ;^188^^^^^186^189^add ( value ) ;^[CLASS] ObjArray  [METHOD] push [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^int N = newSize;^194^^^^^191^200^int N = size;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N >= size )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE >= N )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N > FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^ensureCapacity ( N  !=  1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^ensureCapacity ( N + size ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^ensureCapacity ( N  ^  1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^ensureCapacity ( N + FIELDS_STORE_SIZE ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^size = size + 1;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^size = N ;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( size, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( N, f3 ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^setImpl ( value, N ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= size && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= index && index <= size )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( ! ( 0 <= N && index <= index )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index || index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 < index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  >=  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( ! ( newSize <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  &  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  >>  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  |  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + newSize ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + i ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 0 )  { f0 = value; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 0 )  { f0 = top; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( value == 0 )  { f0 = N; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 0 )  { f0 = value; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == -1 )  { f-1 = value; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( newSize == 1 )  { f1 = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 1 )  { f1 = f4; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( value == 1 )  { f1 = N; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N > 1 )  { f1 = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == newSize )  { fnewSize = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 2 )  { f2 = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 2 )  { f2 = f4; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( value == 2 )  { f2 = N; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 2 )  { f2 = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N ==  )  { f = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 2 )  { f2 = tmp; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( newSize == 3 )  { f3 = value; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 3 )  { f3 = top; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( value == 3 )  { f3 = N; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N < 3 )  { f3 = value; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == N )  { fN = value; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 3 )  { f3 = f4; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 4 )  { f4 = value; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 4 )  { f4 = tmp; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( value == 4 )  { f4 = N; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N < 4 )  { f4 = value; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 4 )  { f4 = top; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size != N )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( index != size )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( N != index )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( index == N )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^System.arraycopy ( data, size - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^System.arraycopy ( data, index - size, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, FIELDS_STORE_SIZE - index, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, index - N, data, index - FIELDS_STORE_SIZE + 1, FIELDS_STORE_SIZE - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( N, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, data - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index  &&  FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index  ==  FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N  ||  index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + index, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 0 )  { f0 = f4; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = obj; f0 = value; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f0; f0 = tmp; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f0; f0 = value; value = value;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 1 )  { f1 = top; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = obj; f1 = value; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f1; f1 = top; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f1; f1 = value; value = top;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( N == 2 )  { f2 = top; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = obj; f2 = value; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f2; f2 = obj; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f2; f2 = value; value = f4;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = value; f3 = value; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f3; f3 = f4; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f3; f3 = value; value = obj;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = top; f4 = value; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f4; f4 = top; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^tmp = f4; f4 = value; value = obj;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^index = size;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[size - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[index - FIELDS_STORE_SIZE] = top;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[index - size] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^data[index  &&  FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^ensureCapacity ( newSize + 1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^ensureCapacity ( N  <<  1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^ensureCapacity ( N + i ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( FIELDS_STORE_SIZE, index - data, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index  ||  FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE , N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^size = size + 1;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^size = N ;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^int N = newSize;^242^^^^^227^257^int N = size;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= size && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( ! ( 0 <= N && index < index )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index || index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 == index && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( ! ( -1 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 0 )  { f0 = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 0 )  { f0 = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == -1 )  { f-1 = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( newSize == 1 )  { f1 = null; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 1 )  { f1 = null; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == 2 )  { f2 = null; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 2 )  { f2 = null; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 2 )  { f2 = null; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == 1 )  { f1 = null; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( size == 3 )  { f3 = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 3 )  { f3 = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^if  ( N == size )  { fsize = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( newSize == 4 )  { f4 = null; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( N != 4 )  { f4 = null; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^if  ( index != size )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^if  ( N != index )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^if  ( index < N )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, size - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, FIELDS_STORE_SIZE - index + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, N - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, index - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( index, data - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index  >  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index  !=  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N  >>  index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE , data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^f0 = obj;^249^^^^^234^264^f0 = f1;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^f1 = value;^252^^^^^237^267^f1 = f2;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^f3 = obj;^258^^^^^243^273^f3 = f4;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^index = size;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[size - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^data[N - size] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^data[N  &&  FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^System.arraycopy ( data, size - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( N, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, data - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, index - N + 1, data, index - FIELDS_STORE_SIZE, FIELDS_STORE_SIZE - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index  <<  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index  <=  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N  >=  index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + i, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^size = size;^272^^^^^257^287^size = N;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^int N = newSize;^278^^^^^275^283^int N = size;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( newSizent i = 0; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^for  ( int i = 0; i != size; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Argument_Swapping]^for  ( Nnt i = 0; i != i; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Operator]^for  ( int i = 0; i >= N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^for  ( int i = FIELDS_STORE_SIZE; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( newSize, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^for  ( int i = 1; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^setImpl ( size, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Wrong_Literal]^size = i;^282^^^^^275^283^size = 0;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[BugLab_Variable_Misuse]^toArray ( data, 0 ) ;^288^^^^^285^290^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[BugLab_Wrong_Literal]^toArray ( array,  ) ;^288^^^^^285^290^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[BugLab_Variable_Misuse]^return data;^289^^^^^285^290^return array;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[BugLab_Variable_Misuse]^toArray ( data, 0 ) ;^294^^^^^292^295^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[BugLab_Wrong_Literal]^toArray ( array, newSize ) ;^294^^^^^292^295^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[BugLab_Variable_Misuse]^int N = offset;^300^^^^^298^312^int N = size;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 5: data[offset + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 5: array[size + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 5: array[offset + 4] = obj;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^case 5: f4[offset + 4] = array;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Literal]^case 5: array[offset + size] = fsize;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 4: data[offset + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 4: array[size + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 4: array[offset + 3] = top;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^case 4: f3[offset + 3] = array;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Literal]^case 4: array[offset + size] = fsize;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 3: data[offset + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 3: array[size + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^case 3: f2[offset + 2] = array;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Literal]^case 3: array[offset ] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 2: data[offset + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 2: array[offset + 1] = value;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^case 2: f1[offset + 1] = array;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Literal]^case 2: array[offset + N] = fN;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 1: data[offset + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 1: array[newSize + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^case 1: array[offset + 0] = value;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Literal]^case 1: array[offset + index] = findex;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, size - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, array, offset + size, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^System.arraycopy ( array, 0, data, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, array, FIELDS_STORE_SIZE + offset, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, array, offset + N, FIELDS_STORE_SIZE - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Argument_Swapping]^System.arraycopy ( FIELDS_STORE_SIZE, 0, array, offset + data, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N  ||  FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Wrong_Literal]^System.arraycopy ( data, i, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[BugLab_Variable_Misuse]^int required = size - FIELDS_STORE_SIZE;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^int required = minimalCapacity - offset;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^int required = FIELDS_STORE_SIZE - minimalCapacity;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^int required = minimalCapacity  ||  FIELDS_STORE_SIZE;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( tmp == null )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( data != null )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size < required )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < minimalCapacity )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc <= required )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( required <= FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc <= size )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE <= alloc )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc < FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc *= 3;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = newSize * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^alloc - = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc = FIELDS_STORE_SIZE * i;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( newSize < required )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < offset )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( required < alloc )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc <= required )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( required > FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size > newSize )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE > size )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( size < FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, array, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( array, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, required - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, size - offset ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( tmp, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, tmp, 0, FIELDS_STORE_SIZE - size ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  ||  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, 1, tmp, 1, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, i, tmp, i, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = required * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = size;^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^data = data;^340^^^^^318^342^data = tmp;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, size - size ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, size, 0, tmp - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  <<  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size <= FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc > FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc *= ;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^alloc + = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc = FIELDS_STORE_SIZE * 1;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < newSize )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = minimalCapacity;^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size > required )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( size >= FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, minimalCapacity - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( FIELDS_STORE_SIZE, 0, tmp, 0, size - data ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, offset, tmp, offset, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, index, tmp, index, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^alloc / = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc = FIELDS_STORE_SIZE * newSize;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^int alloc = required;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^int alloc = tmp.length;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^int alloc = data;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^int alloc = data.length.length;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, size - newSize ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  ==  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, -1, tmp, -1, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, size, tmp, size, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( offset < required )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < size )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( required < alloc )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc <= required )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = minimalCapacity;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = newSize;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^int alloc = size * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^int / alloc = FIELDS_STORE_SIZE * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^int alloc = FIELDS_STORE_SIZE * alloc;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < newSize )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc == required )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = size;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( newSize < required )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < offset )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc <= required )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( offset <= FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE <= alloc )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc < FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc *= newSize;^330^^^^^327^331^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = size * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^alloc + = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc = FIELDS_STORE_SIZE * 1;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( offset < required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < size )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( required < alloc )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc <= required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( newSize > FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size > offset )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE > size )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( size >= FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, array, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( array, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, required - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, size - offset ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( tmp, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( size, 0, tmp, 0, data - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, tmp, 0, FIELDS_STORE_SIZE - size ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  ==  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = newSize * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc = FIELDS_STORE_SIZE * ;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc *= size;^330^^^^^315^343^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = size;^333^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( tmp, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, offset - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, size - required ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( FIELDS_STORE_SIZE, 0, tmp, 0, size - data ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  >=  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, required, tmp, required, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size <= FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc <= offset )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc *= index;^330^^^^^327^331^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^alloc - = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^alloc = FIELDS_STORE_SIZE * required;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size < required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( alloc < newSize )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^if  ( alloc == required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = minimalCapacity;^333^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( required > FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size > newSize )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, tmp, 0, size - newSize ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  !=  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^alloc = required * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^alloc / = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^data = data;^340^^^^^315^343^data = tmp;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^int alloc = offset * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^int alloc = FIELDS_STORE_SIZE * offset;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^int alloc = data;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^int alloc = data.length.length;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^System.arraycopy ( data, 0, tmp, 0, size  |  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, 1, tmp, 1, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( data, i, tmp, i, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^String msg = offset+" \u2209 [0, "+upperBound+' ) ';^348^^^^^345^350^String msg = index+" \u2209 [0, "+upperBound+' ) ';^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^int N = newSize;^365^^^^^362^370^int N = size;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^for  ( upperBoundnt i = 0; i != N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i != upperBound; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Argument_Swapping]^for  ( Nnt i = 0; i != i; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^Object obj = getImpl ( required ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^os.writeObject ( tmp ) ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Wrong_Literal]^for  ( int i = -1; i != N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^Object obj = getImpl ( upperBound ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^os.writeObject ( value ) ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[BugLab_Variable_Misuse]^if  ( size > FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^if  ( N > required )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Argument_Swapping]^if  ( FIELDS_STORE_SIZE > N )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Wrong_Operator]^if  ( N == FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^data = new Object[required - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^data = new Object[N - upperBound];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Wrong_Operator]^data = new Object[N  &  FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Wrong_Operator]^data = new Object[N  >=  FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^for  ( upperBoundnt i = 0; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^for  ( int i = 0; i != offset; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Argument_Swapping]^for  ( Nnt i = 0; i != i; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Wrong_Literal]^for  ( int i = index; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^setImpl ( i, top ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Argument_Swapping]^setImpl ( obj, i ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Wrong_Literal]^for  ( int i = upperBound; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^setImpl ( newSize, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[BugLab_Variable_Misuse]^setImpl ( i, value ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
