[BugLab_Wrong_Literal]^public static final Object[] emptyArgs = new Object[-1];^609^^^^^604^614^public static final Object[] emptyArgs = new Object[0];^[CLASS] ScriptRuntime   [VARIABLES] 
[BugLab_Wrong_Operator]^if  (  ( c & 0xDFD0 )  == 0 )  {^72^^^^^68^76^if  (  ( c & 0xDFD0 )  != 0 )  {^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^if  (  ( c  ==  0xDFD0 )  != 0 )  {^72^^^^^68^76^if  (  ( c & 0xDFD0 )  != 0 )  {^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Literal]^if  (  ( c & cxDFDc )  != c )  {^72^^^^^68^76^if  (  ( c & 0xDFD0 )  != 0 )  {^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Literal]^return true;^73^^^^^68^76^return false;^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^return c == '\n' && c == '\r' || c == 0x2028 || c == 0x2029;^75^^^^^68^76^return c == '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^return c <= '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^75^^^^^68^76^return c == '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^return c == '\n' || c != '\r' || c == 0x2028 || c == 0x2029;^75^^^^^68^76^return c == '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^return c < '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^75^^^^^68^76^return c == '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^return c != '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^75^^^^^68^76^return c == '\n' || c == '\r' || c == 0x2028 || c == 0x2029;^[CLASS] ScriptRuntime  [METHOD] isJSLineTerminator [RETURN_TYPE] boolean   int c [VARIABLES] String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  negativeZero  Object[]  emptyArgs  int  c  
[BugLab_Wrong_Operator]^if  ( radix <= 10 )  {^100^^^^^85^115^if  ( radix < 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix < MIXED_AFTER_54 )  {^100^^^^^85^115^if  ( radix < 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix < 20 )  {^100^^^^^85^115^if  ( radix < 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digitMax =  ( char )   ( '0' + radix  !=  1 ) ;^101^^^^^86^116^digitMax =  ( char )   ( '0' + radix - 1 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digitMax =  ( char )   ( '0'  >>  radix - 1 ) ;^101^^^^^86^116^digitMax =  ( char )   ( '0' + radix - 1 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digitMax =  ( char )   ( '0' + radix  ) ;^101^^^^^86^116^digitMax =  ( char )   ( '0' + radix - 1 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^digitMax =  ( char )   ( '0' + state - 1 ) ;^101^^^^^86^116^digitMax =  ( char )   ( '0' + radix - 1 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digitMax =  ( char )   ( '0' + radix  >>  1 ) ;^101^^^^^86^116^digitMax =  ( char )   ( '0' + radix - 1 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digitMax =  ( char )   ( '0'  <=  radix - 1 ) ;^101^^^^^86^116^digitMax =  ( char )   ( '0' + radix - 1 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( newDigit > 10 )  {^103^^^^^88^118^if  ( radix > 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( radix >= 10 )  {^103^^^^^88^118^if  ( radix > 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix > 11 )  {^103^^^^^88^118^if  ( radix > 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix > 9 )  {^103^^^^^88^118^if  ( radix > 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^lowerCaseBound =  ( char )   ( 'a' + state - 10 ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^lowerCaseBound =  ( char )   ( 'a' + radix  >  10 ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^lowerCaseBound =  ( char )   ( 'a'  ^  radix - 10 ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^lowerCaseBound =  ( char )   ( 'a' + radix - len ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^upperCaseBound =  ( char )   ( 'A' + exactBitsLimit - 10 ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^upperCaseBound =  ( char )   ( 'A' + radix  <=  10 ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^upperCaseBound =  ( char )   ( 'A'  ==  radix - 10 ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^upperCaseBound =  ( char )   ( 'A' + radix  ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^lowerCaseBound =  ( char )   ( 'a' + newDigit - 10 ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^lowerCaseBound =  ( char )   ( 'a' + radix  >>  10 ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^lowerCaseBound =  ( char )   ( 'a'  >>  radix - 10 ) ;^104^^^^^89^119^lowerCaseBound =  ( char )   ( 'a' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^upperCaseBound =  ( char )   ( 'A' + len - 10 ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^upperCaseBound =  ( char )   ( 'A' + radix  >>  10 ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^upperCaseBound =  ( char )   ( 'A'  |  radix - 10 ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^upperCaseBound =  ( char )   ( 'A' + radix - start ) ;^105^^^^^90^120^upperCaseBound =  ( char )   ( 'A' + radix - 10 ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= c && c <= upperCaseBound ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c || c <= digitMax ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' == c && c <= digitMax ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c < digitMax ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c <= digitMax ) newDigit = c  ||  '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' > c && c <= digitMax ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c <= digitMax ) newDigit = c  ^  '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' < c && c <= digitMax ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c <= digitMax ) newDigit = c  &  '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= c && c < digitMax ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^else if  ( 'a' <= lowerCaseBound && c < c ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c || c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' < c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c <= lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  <<  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  <<  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' > c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ||  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  <=  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' ;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'A' <= lowerCaseBound && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^else if  ( 'A' <= upperCaseBound && c < c ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c || c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' < c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c == upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  &&  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c  >  'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + len;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^newDigit = upperCaseBound - 'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  !=  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' + radix;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  <<  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' + AFTER_BIT_53;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^newDigit = upperCaseBound - 'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  |  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'a' + exactBitsLimit;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'A' <= c && c < lowerCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c <= upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c  <<  'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' ;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  ^  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' + len;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c   instanceof   'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'a' + FIRST_EXACT_53_BITS;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' ;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^newDigit = upperCaseBound - '0';^113^^^^^98^128^newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  |  '0';^113^^^^^98^128^newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= c && c < upperCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  >>  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  >=  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c > lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  &&  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + ZEROS_AFTER_54;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + SKIP_LEADING_ZEROS;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if   instanceof   ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c  ||  'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + start;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  &&  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  >  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  ==  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'a' + SKIP_LEADING_ZEROS;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  <  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c   instanceof   'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  ||  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' + ZEROS_AFTER_54;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^for  ( exactBitsLimit=start; end < len; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^for  ( end=start; end < end; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^for  ( len=start; end < end; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^for  ( end=start; end <= len; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^for  >  ( end=start; end < len; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^for  <=  ( end=start; end < len; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^for  <<  ( end=start; end < len; end++ )  {^109^^^^^94^124^for  ( end=start; end < len; end++ )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= upperCaseBound && c <= digitMax ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^if  ( '0' <= digitMax && c <= c ) newDigit = c - '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c <= digitMax ) newDigit = c  ==  '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c <= digitMax ) newDigit = c  >>  '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= c && c <= digitMax ) newDigit = c  <<  '0';^112^113^^^^97^127^if  ( '0' <= c && c <= digitMax ) newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= lowerCaseBound && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  <  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  |  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if   instanceof   ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  ||  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + end;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c > upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  >  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c  ^  'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  ==  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' + state;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  >=  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  <<  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'a' + radix;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  <<  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c  >=  'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  >>  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  >  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  ==  '0';^113^^^^^98^128^newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= upperCaseBound && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  !=  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c  >>  'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ^  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + bitShiftInChar;^114^115^^^^99^129^else if  ( 'a' <= c && c < lowerCaseBound ) newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ==  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  &&  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'a' ;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c  !=  'A' + 10;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + ZEROS_AFTER_54;^116^117^^^^101^131^else if  ( 'A' <= c && c < upperCaseBound ) newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  <  'A' + 10;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  <=  '0';^113^^^^^98^128^newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  <  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^sum = negativeZero*radix + newDigit;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^sum = sum*start + newDigit;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^sum = sum*radix + len;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^sum = newDigit*radix + sum;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^sum - = sum*radix + newDigit;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^char c = s.charAt ( exactBitsLimit ) ;^110^^^^^95^125^char c = s.charAt ( end ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^char c = end.charAt ( s ) ;^110^^^^^95^125^char c = s.charAt ( end ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^char c = s.charAt ( start ) ;^110^^^^^95^125^char c = s.charAt ( end ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  ||  '0';^113^^^^^98^128^newDigit = c - '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^newDigit = c  !=  'a' + 10;^115^^^^^100^130^newDigit = c - 'a' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^newDigit = c - 'A' + FIRST_EXACT_53_BITS;^117^^^^^102^132^newDigit = c - 'A' + 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^sum = sum*end + newDigit;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^sum / = sum*radix + newDigit;^120^^^^^105^135^sum = sum*radix + newDigit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( radix == end )  {^122^^^^^107^137^if  ( start == end )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == len )  {^122^^^^^107^137^if  ( start == end )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^if  ( end == start )  {^122^^^^^107^137^if  ( start == end )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( start <= end )  {^122^^^^^107^137^if  ( start == end )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return sum;^123^^^^^108^138^return NaN;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( negativeZero >= 9007199254740992.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( sum > 9007199254740992.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9007199len5474099len.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9007299254740992.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9-1-1719925474-1992.-1 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9007start99254740992.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9007199253730992.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9007radix99254740992.0 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9117199254741992.1 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( sum >= 9ZEROS_AFTER_54ZEROS_AFTER_54719925474ZEROS_AFTER_54992.ZEROS_AFTER_54 )  {^125^^^^^110^140^if  ( sum >= 9007199254740992.0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( len == 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( radix >= 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( radix != 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( radix <= 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( radix < 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == radix )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == 1radix )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == exactBitsLimit0 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == ZEROS_AFTER_540 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == 11 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix ==  )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == 1 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^} else if  ( exactBitsLimit == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 && radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix < 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix <= 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix <= 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix > 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix != 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix <= 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix >= 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix != 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 3 || radix == 4 || radix == 8 || radix == 16 || radix == 33 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 3 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == ZEROS_AFTER_54 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == ZEROS_AFTER_546 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == MIXED_AFTER_54 || radix == 4 || radix == 8 || radix == 16 || radix == 3MIXED_AFTER_54 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == MIXED_AFTER_542 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == newDigit || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 06 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bitShiftInChar < 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bitShiftInChar != 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( newDigit == end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == exactBitsLimit ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^if  ( end == start ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( start >= end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= len && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= digit || digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' < digit && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= digit && digit < '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= digit && digit <= '9' ) digit += '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= exactBitsLimit && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit || digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' < digit && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit < 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  &  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  ^  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit += 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit = 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' ;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  >=  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit = 'A' - 10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - digit;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  ||  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit = 'a' - 10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' ;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  >  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  >>  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' ;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit += '0';^172^^^^^157^187^digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  |  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  <=  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - len;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  ||  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit += 'A' - 10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - start;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  |  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit += 'a' - 10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  <<  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - radix;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  ^  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bitShiftInChar = start;^177^^^^^162^192^bitShiftInChar = radix;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( start < end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= newDigit && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' == digit && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= digit && digit <= '9' ) digit = '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= state && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  &&  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - exactBitsLimit;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  >  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  <  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  ^  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  |  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit = '0';^172^^^^^157^187^digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' > digit && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - radix;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  !=  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - MIXED_AFTER_54;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( bit54 )  {^184^^^^^169^199^if  ( bit )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = start;^187^^^^^172^202^state = FIRST_EXACT_53_BITS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( bit54 ) sum += 1.0;^192^193^^^^177^207^if  ( bit ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( exactBitsLimit <= 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == FIRST_EXACT_53_BITS )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bit53 = bit54;^196^^^^^181^211^bit53 = bit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = exactBitsLimit;^197^^^^^182^212^state = AFTER_BIT_53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( bit54 )  {^206^^^^^191^221^if  ( bit )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = start;^207^^^^^192^222^state = MIXED_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( bit & bit53 ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( bit54 & bit ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^if  ( bit53 & bit54 ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bit54  ^  bit53 ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( bit53 ) sum += 1.0;^233^234^^^^218^248^if  ( bit54 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bitShiftInChar <= 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == digit )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == newDigit ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( start <= end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' > digit && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= len && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  >>  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  >=  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - bitShiftInChar;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - end;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  >>  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - radix;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= radix && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - ZEROS_AFTER_54;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - state;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  ==  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - AFTER_BIT_53;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - MIXED_AFTER_54;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bitShiftInChar = state;^177^^^^^162^192^bitShiftInChar = radix;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( state == end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == state ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( start != end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= state && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' == digit && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  <  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - FIRST_EXACT_53_BITS;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  <=  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  &  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  ||  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  ==  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = radix;^187^^^^^172^202^state = FIRST_EXACT_53_BITS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( state == 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( exactBitsLimit != 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == -1 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = newDigit;^207^^^^^192^222^state = MIXED_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  &  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - ;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  &&  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - bitShiftInChar;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bitShiftInChar = end;^177^^^^^162^192^bitShiftInChar = radix;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = newDigit;^187^^^^^172^202^state = FIRST_EXACT_53_BITS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = start;^197^^^^^182^212^state = AFTER_BIT_53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bit54 = bit54;^201^^^^^186^216^bit54 = bit;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = start;^203^^^^^188^218^state = ZEROS_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( digit & exactBitsLimit )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^boolean bit =  ( bitShiftInChar & digit )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit & bitShiftInChar )  == 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  ||  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != FIRST_EXACT_53_BITS;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  !=  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  <  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= 2;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = exactBitsLimit;^203^^^^^188^218^state = ZEROS_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = exactBitsLimit;^207^^^^^192^222^state = MIXED_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= end;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^sum *= sum;^228^^^^^213^243^sum *= factor;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int bitShiftInChar = radix;^150^^^^^135^165^int bitShiftInChar = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = state;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int SKIP_LEADING_ZEROS = exactBitsLimit;^153^^^^^138^168^final int SKIP_LEADING_ZEROS = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int FIRST_EXACT_53_BITS = bitShiftInChar;^154^^^^^139^169^final int FIRST_EXACT_53_BITS = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int AFTER_BIT_53         = MIXED_AFTER_54;^155^^^^^140^170^final int AFTER_BIT_53         = 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int ZEROS_AFTER_54 = exactBitsLimit;^156^^^^^141^171^final int ZEROS_AFTER_54 = 3;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int MIXED_AFTER_53 = 3;^157^^^^^142^172^final int MIXED_AFTER_54 = 4;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^int state = exactBitsLimit;^159^^^^^144^174^int state = SKIP_LEADING_ZEROS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int exactBitsLimit = MIXED_AFTER_54;^160^^^^^145^175^int exactBitsLimit = 53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit53 = true;^162^^^^^147^177^boolean bit53 = false;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit54 = true;^164^^^^^149^179^boolean bit54 = false;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( digit & radix )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit & bitShiftInChar )  < 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  |  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != ;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( newDigit == 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bitShiftInChar >= 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == end )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( exactBitsLimit == end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( start > end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= digit && digit > '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= newDigit && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  !=  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - digit;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  ==  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - state;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  >=  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  <<  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - newDigit;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'   instanceof   10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == radix ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= radix && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - ;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit == 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'   instanceof   10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = exactBitsLimit;^187^^^^^172^202^state = FIRST_EXACT_53_BITS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( radix == 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( exactBitsLimit < 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = state;^207^^^^^192^222^state = MIXED_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bit54  <  bit53 ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == SKIP_LEADING_ZEROS )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= exactBitsLimit && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit > 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'  >  10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - MIXED_AFTER_54;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - len;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'a'  &&  10;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  <<  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bitShiftInChar = newDigit;^177^^^^^162^192^bitShiftInChar = radix;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - SKIP_LEADING_ZEROS;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - ;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - exactBitsLimit;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^else if  ( 'a' <= start && digit <= 'z' ) digit -= 'a' - 10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - len;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( exactBitsLimit >= 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == newDigit )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = newDigit;^197^^^^^182^212^state = AFTER_BIT_53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= SKIP_LEADING_ZEROS;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = state;^197^^^^^182^212^state = AFTER_BIT_53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = radix;^203^^^^^188^218^state = ZEROS_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = radix;^207^^^^^192^222^state = MIXED_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( digit & state )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit & bitShiftInChar )  > 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit   instanceof   bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bitShiftInChar = len;^177^^^^^162^192^bitShiftInChar = radix;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= AFTER_BIT_53;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = len;^187^^^^^172^202^state = FIRST_EXACT_53_BITS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = radix;^197^^^^^182^212^state = AFTER_BIT_53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = state;^203^^^^^188^218^state = ZEROS_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= len;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^sum *= sum;^235^^^^^220^250^sum *= factor;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = start;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int FIRST_EXACT_53_BITS = 0;^154^^^^^139^169^final int FIRST_EXACT_53_BITS = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int MIXED_AFTER_5len = len;^157^^^^^142^172^final int MIXED_AFTER_54 = 4;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int exactBitsLimit = 54;^160^^^^^145^175^int exactBitsLimit = 53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( len & bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( digit & newDigit )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit & bitShiftInChar )  >= 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  >  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != -1;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( state, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( start, exactBitsLimit )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^return Double.valueOf ( end.substring ( start, s )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^return Double.valueOf ( s.substring ( end, start )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( radix, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( newDigit, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Argument_Swapping]^return Double.valueOf ( start.substring ( s, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( exactBitsLimit, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( start, newDigit )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return sum;^135^^^^^120^150^return NaN;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( start, len )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( end, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^} else if  ( len == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix != 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix >= 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix >= 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == digit || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == exactBitsLimit || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 33 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix ==  || radix == 4 || radix == 8 || radix == 16 || radix == 3 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == MIXED_AFTER_54 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == radix6 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == len || radix == 4 || radix == 8 || radix == 16 || radix == 3len ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( state == 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( '0' <= digit && digit == '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - start;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - state;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - end;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == len ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - newDigit;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bit54  >>  bit53 ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - end;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - start;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - FIRST_EXACT_53_BITS;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( len == 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == 1 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - SKIP_LEADING_ZEROS;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^bitShiftInChar = exactBitsLimit;^177^^^^^162^192^bitShiftInChar = radix;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= 3;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( start & bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  >=  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= 0;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = len;^207^^^^^192^222^state = MIXED_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int bitShiftInChar = bitShiftInChar;^150^^^^^135^165^int bitShiftInChar = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = -1;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int FIRST_EXACT_53_BITS = end;^154^^^^^139^169^final int FIRST_EXACT_53_BITS = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int AFTER_BIT_53         = FIRST_EXACT_53_BITS;^155^^^^^140^170^final int AFTER_BIT_53         = 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int ZEROS_AFTER_54 = newDigit;^156^^^^^141^171^final int ZEROS_AFTER_54 = 3;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int MIXED_AFTER_5SKIP_LEADING_ZEROS = SKIP_LEADING_ZEROS;^157^^^^^142^172^final int MIXED_AFTER_54 = 4;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int exactBitsLimit = end;^160^^^^^145^175^int exactBitsLimit = 53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( exactBitsLimit & bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bitShiftInChar > 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == newDigit )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^digit -= 'A'  <=  10;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - newDigit;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( '0' <= start && digit <= '9' ) digit -= '0';^171^172^^^^156^186^if  ( '0' <= digit && digit <= '9' ) digit -= '0';^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - exactBitsLimit;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a'   instanceof   10;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - bitShiftInChar;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == start )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = len;^197^^^^^182^212^state = AFTER_BIT_53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( exactBitsLimit == 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == 0 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( radix == end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( len == end ) break;^168^169^^^^153^183^if  ( start == end ) break;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( newDigit == 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= len;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  ^  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( start, radix )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( start, state )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = len;^203^^^^^188^218^state = ZEROS_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= AFTER_BIT_53;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int bitShiftInChar = start;^150^^^^^135^165^int bitShiftInChar = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int AFTER_BIT_53         = exactBitsLimit;^155^^^^^140^170^final int AFTER_BIT_53         = 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int ZEROS_AFTER_54 = 4;^156^^^^^141^171^final int ZEROS_AFTER_54 = 3;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int MIXED_AFTER_5MIXED_AFTER_54 = MIXED_AFTER_54;^157^^^^^142^172^final int MIXED_AFTER_54 = 4;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int exactBitsLimit = newDigit;^160^^^^^145^175^int exactBitsLimit = 53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != len;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( len, end )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( exactBitsLimit == 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( radix > 10 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == FIRST_EXACT_53_BITS )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == state0 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == FIRST_EXACT_53_BITS0 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == start )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == 9 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == 00 )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( radix == 1FIRST_EXACT_53_BITS )  {^126^^^^^111^141^if  ( radix == 10 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix > 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix < 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix <= 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix ==  || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == bitShiftInChar6 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == MIXED_AFTER_546 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 1 || radix == 4 || radix == 8 || radix == 16 || radix == 31 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == end2 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == exactBitsLimit || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 26 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - SKIP_LEADING_ZEROS;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - FIRST_EXACT_53_BITS;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == radix )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( bit54  >=  bit53 ) sum += 1.0;^226^227^^^^211^241^if  ( bit54 & bit53 ) sum += 1.0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( radix == 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == MIXED_AFTER_54 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - ZEROS_AFTER_54;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( end == 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( exactBitsLimit == digit )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= bitShiftInChar;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= radix;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit & bitShiftInChar )  <= 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= ZEROS_AFTER_54;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = newDigit;^203^^^^^188^218^state = ZEROS_AFTER_54;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int bitShiftInChar = 0;^150^^^^^135^165^int bitShiftInChar = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = radix;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int SKIP_LEADING_ZEROS = radix;^153^^^^^138^168^final int SKIP_LEADING_ZEROS = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int MIXED_AFTER_55 = 5;^157^^^^^142^172^final int MIXED_AFTER_54 = 4;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  <  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != exactBitsLimit;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == 2 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= start;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = digit;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int SKIP_LEADING_ZEROS = 1;^153^^^^^138^168^final int SKIP_LEADING_ZEROS = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int FIRST_EXACT_53_BITS = 2;^154^^^^^139^169^final int FIRST_EXACT_53_BITS = 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^int state = radix;^159^^^^^144^174^int state = SKIP_LEADING_ZEROS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int exactBitsLimit = exactBitsLimit;^160^^^^^145^175^int exactBitsLimit = 53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix >= 4 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix != 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix > 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == end || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == start2 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == AFTER_BIT_53 || radix == 8 || radix == 16 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 6 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == FIRST_EXACT_53_BITS6 || radix == 32 ) {^137^138^139^^^122^152^} else if  ( radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32 ) {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == exactBitsLimit )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - digit;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'A' - AFTER_BIT_53;^176^^^^^161^191^digit -= 'A' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - AFTER_BIT_53;^173^174^^^^158^188^else if  ( 'a' <= digit && digit <= 'z' ) digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^if  ( bitShiftInChar == AFTER_BIT_53 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( start == 0 )  {^195^^^^^180^210^if  ( exactBitsLimit == 0 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^bitShiftInChar >>= state;^179^^^^^164^194^bitShiftInChar >>= 1;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^state = state;^187^^^^^172^202^state = FIRST_EXACT_53_BITS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != state;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^factor *= 1;^211^^^^^196^226^factor *= 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = MIXED_AFTER_54;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int SKIP_LEADING_ZEROS = -1;^153^^^^^138^168^final int SKIP_LEADING_ZEROS = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int AFTER_BIT_53         = SKIP_LEADING_ZEROS;^155^^^^^140^170^final int AFTER_BIT_53         = 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int MIXED_AFTER_5 = ;^157^^^^^142^172^final int MIXED_AFTER_54 = 4;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^int state = len;^159^^^^^144^174^int state = SKIP_LEADING_ZEROS;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int exactBitsLimit = digit;^160^^^^^145^175^int exactBitsLimit = 53;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^boolean bit =  ( digit & bitShiftInChar )  != AFTER_BIT_53;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^digit -= 'a' - ZEROS_AFTER_54;^174^^^^^159^189^digit -= 'a' - 10;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^if  ( len == 1 )  {^167^^^^^152^182^if  ( bitShiftInChar == 1 )  {^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^boolean bit =  ( newDigit & bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  <<  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return Double.valueOf ( s.substring ( start, start )  ) .doubleValue (  ) ;^133^^^^^118^148^return Double.valueOf ( s.substring ( start, end )  ) .doubleValue (  ) ;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^int digit = ;^151^^^^^136^166^int digit = 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int AFTER_BIT_53         = state;^155^^^^^140^170^final int AFTER_BIT_53         = 2;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Literal]^final int ZEROS_AFTER_54 = SKIP_LEADING_ZEROS;^156^^^^^141^171^final int ZEROS_AFTER_54 = 3;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^boolean bit =  ( digit  !=  bitShiftInChar )  != 0;^180^^^^^165^195^boolean bit =  ( digit & bitShiftInChar )  != 0;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Variable_Misuse]^return negativeZero;^241^^^^^226^256^return sum;^[CLASS] ScriptRuntime  [METHOD] stringToNumber [RETURN_TYPE] double   String s int start int radix [VARIABLES] boolean  bit  bit53  bit54  double  NaN  factor  negativeZero  sum  char  c  digitMax  lowerCaseBound  upperCaseBound  NumberFormatException  nfe  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  AFTER_BIT_53  FIRST_EXACT_53_BITS  MIXED_AFTER_54  SKIP_LEADING_ZEROS  ZEROS_AFTER_54  bitShiftInChar  digit  end  exactBitsLimit  len  newDigit  radix  start  state  
[BugLab_Wrong_Operator]^if  ( ! ( escapeQuote == '"' && escapeQuote == '\'' )  )  Kit.codeBug (  ) ;^255^^^^^240^270^if  ( ! ( escapeQuote == '"' || escapeQuote == '\'' )  )  Kit.codeBug (  ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ! ( escapeQuote != '"' || escapeQuote == '\'' )  )  Kit.codeBug (  ) ;^255^^^^^240^270^if  ( ! ( escapeQuote == '"' || escapeQuote == '\'' )  )  Kit.codeBug (  ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ! ( escapeQuote == '"' || escapeQuote >= '\'' )  )  Kit.codeBug (  ) ;^255^^^^^240^270^if  ( ! ( escapeQuote == '"' || escapeQuote == '\'' )  )  Kit.codeBug (  ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( ' ' <= hexSize && c <= '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c || c <= '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' < c && c <= '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c && c > '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c && c <= '~' && c <= escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c >= '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( sb == null )  {^264^^^^^249^279^if  ( sb != null )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^if  ( sbb == null )  {^269^^^^^254^284^if  ( sb == null )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( sb != null )  {^269^^^^^254^284^if  ( sb == null )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^sb = new StringBuffer ( L  >>  3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^sb = new StringBuffer ( L  ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^sb = new StringBuffer ( shift + 3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^sb = new StringBuffer ( L  ==  3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^sb.setLength ( shift ) ;^272^^^^^257^287^sb.setLength ( i ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( shift >= 0 )  {^286^^^^^271^301^if  ( escape >= 0 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( escape > 0 )  {^286^^^^^271^301^if  ( escape >= 0 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( escape >= digit )  {^286^^^^^271^301^if  ( escape >= 0 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( escape >= hc )  {^286^^^^^271^301^if  ( escape >= 0 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^} else if  ( i == escapeQuote )  {^290^^^^^275^305^} else if  ( c == escapeQuote )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^} else if  ( c < escapeQuote )  {^290^^^^^275^305^} else if  ( c == escapeQuote )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( i < 256 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( c > 256 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < L )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < hexSize56 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = hexSize;^302^^^^^290^310^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = hc;^298^^^^^290^310^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int i =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for / ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  ==  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift > 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  ||  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift = 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - i )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( i >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( c >> i ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^int digit = 0xf &  ( shift >> c ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  !=   ( c >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  !=  shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int hc =  ( shift < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit > 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  |  digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  &&  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  !=  10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < i )  ? '0' + digit : 'a' - i + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = 3;^298^^^^^290^310^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * hexSize; shift >= 0; shift -= hexSize )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  >>  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize  )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * c; shift >= 0; shift -= c )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( shift >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  |  shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int hc =  ( i < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit == 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  ^  digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  <=  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < hexSize )  ? '0' + digit : 'a' - hexSize + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( shift < 256 )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( c > 256 )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < i )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = digit;^298^^^^^283^313^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int shift =  ( hc - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int i =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for + ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  >>  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift == 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  &  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift += 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize  )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * hc; shift >= 0; shift -= hc )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= -1; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * ; shift >= 0; shift -=  )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( shift >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( c >> hexSize ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^int digit = 0xf &  ( shift >> c ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  ^   ( c >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  <<  shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int hc =  ( shift < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit <= 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  <  digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  >>  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  &  10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = 3;^298^^^^^283^313^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * c; shift >= 0; shift -= c )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int shift =  ( i - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for - ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  ^  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  !=   ( c >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  !=  shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  &&  digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  &&  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  |  10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < digit )  ? '0' + digit : 'a' - digit + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < escape )  ? '0' + digit : 'a' - escape + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^} else if  ( c <= escapeQuote )  {^290^^^^^275^305^} else if  ( c == escapeQuote )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < 255 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < digit56 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = c;^302^^^^^290^310^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int shift =  ( i - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^for  ( int hexSize =  ( shift - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for + ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  |  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift < 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  <=  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift += 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 3; shift >= 0; shift -= 3 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= ; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * shift; shift >= 0; shift -= shift )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  >>   ( c >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  <<  shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ||  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  ^  10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit <  )  ? '0' + digit : 'a' -  + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < c )  ? '0' + digit : 'a' - c + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = escape;^298^^^^^290^310^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = escape;^302^^^^^290^310^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - digit )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * hc; shift >= 0; shift -= hc )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( c >> hexSize ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  ^   ( c >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  >=  shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit <= 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  &&  digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =   instanceof   ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  ||  10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < shift )  ? '0' + digit : 'a' - shift + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( i < 256 )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( c <= 256 )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < c )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < L56 )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = shift;^302^^^^^295^303^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for ( shiftnt i = 0, L = s.length (  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for ( int i = 0, shift = s.length (  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^for ( snt i = 0, L = i.length (  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for ( int i = 0, L = s.length (  ) ; i <= L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for ( int i = 0, L = s.length (  ) ; i >= L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for ( int i = 0, L = s.length (  &&  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for ( int i = 0, L = s.length (   instanceof   ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for ( int i = 0, L = s.length (  &  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for ( int i = 1, L = s.length (  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for ( int i = escape, L = s.length (  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for ( int i = c, L = s.length (  ) ; i != L; ++i )  {^258^^^^^243^273^for ( int i = 0, L = s.length (  ) ; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( ' ' <= shift && c <= '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' == c && c <= '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c && c < '~' && c != escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c && c <= '~' && c > escapeQuote && c != '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c == '\\' )  {^261^^^^^246^276^if  ( ' ' <= c && c <= '~' && c != escapeQuote && c != '\\' )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^sb = new StringBuffer ( L  <<  3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^sb = new StringBuffer ( L + escape ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^sb = new StringBuffer ( L   instanceof   3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( escape >= shift )  {^286^^^^^271^301^if  ( escape >= 0 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^} else if  ( shift == escapeQuote )  {^290^^^^^275^305^} else if  ( c == escapeQuote )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( shift < 256 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( c == 256 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < hc )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < 56 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = ;^302^^^^^290^310^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int shift =  ( hc - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int hc =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for - ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  <  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift == 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= -1; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  ||   ( c >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c   instanceof   shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  ==  10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = shift;^298^^^^^290^310^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = 3;^302^^^^^290^310^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  <<  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - hexSize )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * digit; shift >= 0; shift -= digit )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  >   ( c >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  >>  digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  &  10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < escape )  ? '0' + digit : 'a' - escape + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int hc =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize   instanceof   1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  >=  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * escape; shift >= 0; shift -= escape )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 1; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  <=   ( c >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c   instanceof   shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit > 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  ||  digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  <<  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  >=  10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = escape;^298^^^^^283^313^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = shift;^302^^^^^287^317^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  |  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - hc )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 5; shift >= 0; shift -= 5 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int digit = 0xf &  ( c >> i ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  >>   ( c >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  ==  shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int hc =  ( i < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  >  digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ^  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  !=  10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit <  )  ? '0' + digit : 'a' -  + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^} else if  ( c != escapeQuote )  {^290^^^^^275^305^} else if  ( c == escapeQuote )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^if  ( c <= 256 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < L56 )  {^295^^^^^290^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  ==   ( c >> shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  >  shift ) ;^306^^^^^290^310^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'   instanceof   digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  |  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = c;^298^^^^^290^310^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  &&  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^310^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'  >=  digit : 'a' - 10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  |  10 + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < digit )  ? '0' + digit : 'a' - digit + digit;^307^^^^^290^310^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^if  ( c < hc56 )  {^295^^^^^280^310^if  ( c < 256 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = i;^302^^^^^295^303^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = c;^298^^^^^283^313^hexSize = 2;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^for  ( int hexSize =  ( shift - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift > 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize  ==  1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift = 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - L )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * shift; shift >= 0; shift -= shift )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  |  shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit == 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  <=  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  >  10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < hc )  ? '0' + digit : 'a' - hc + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^sb = new StringBuffer ( i + 3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^sb = new StringBuffer ( L + shift ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = L;^302^^^^^287^317^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 3; shift >= 0; shift -= 3 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^sb = new StringBuffer ( hexSize + 3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^sb = new StringBuffer ( L  &  3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^sb = new StringBuffer ( L + i ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int c = s.charAt ( hexSize ) ;^259^^^^^244^274^int c = s.charAt ( i ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^int c = i.charAt ( s ) ;^259^^^^^244^274^int c = s.charAt ( i ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * hexSize; shift >= 0; shift -= hexSize )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  >=   ( c >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ||  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'  ==  10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int hc =  ( digit < c )  ? '0' + digit : 'a' - c + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int c = s.charAt ( hc ) ;^259^^^^^244^274^int c = s.charAt ( i ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^for  ( int hexSize =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^for / ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= c; shift -= 4 )  {^305^^^^^290^320^for  ( int shift =  ( hexSize - 1 )  * 4; shift >= 0; shift -= 4 )  {^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  >  shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =   instanceof   ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^sb = new StringBuffer ( L  <  3 ) ;^270^^^^^255^285^sb = new StringBuffer ( L + 3 ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^hexSize = 3;^302^^^^^287^317^hexSize = 4;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^int c = s.charAt ( shift ) ;^259^^^^^244^274^int c = s.charAt ( i ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Literal]^int escape = -shift;^275^^^^^260^290^int escape = -1;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf  ==   ( c >> shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int digit = 0xf &  ( c  ^  shift ) ;^306^^^^^291^321^int digit = 0xf &  ( c >> shift ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0'   instanceof   digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ==  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^int hc =  ( digit < 10 )  ? '0' + digit : 'a'   instanceof   10 + digit;^307^^^^^292^322^int hc =  ( digit < 10 )  ? '0' + digit : 'a' - 10 + digit;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^return  ( s == null )  ? sb : sb.toString (  ) ;^312^^^^^297^327^return  ( sb == null )  ? s : sb.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Argument_Swapping]^return  ( sbb == null )  ? s : s.toString (  ) ;^312^^^^^297^327^return  ( sb == null )  ? s : sb.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Wrong_Operator]^return  ( sb != null )  ? s : sb.toString (  ) ;^312^^^^^297^327^return  ( sb == null )  ? s : sb.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] escapeString [RETURN_TYPE] String   String s char escapeQuote [VARIABLES] StringBuffer  sb  boolean  double  NaN  factor  negativeZero  sum  char  escapeQuote  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  c  digit  escape  hc  hexSize  i  shift  
[BugLab_Variable_Misuse]^if  ( i == 0 ) return false;^318^319^^^^315^327^if  ( L == 0 ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Operator]^if  ( L != 0 ) return false;^318^319^^^^315^327^if  ( L == 0 ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^if  ( L == L ) return false;^318^319^^^^315^327^if  ( L == 0 ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^if  ( L == 0 ) return true;^318^319^^^^315^327^if  ( L == 0 ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^return true;^319^^^^^315^327^return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^if  ( !Character.isJavaIdentifierStart ( s.charAt ( 0 )  )  ) return true;^320^321^^^^315^327^if  ( !Character.isJavaIdentifierStart ( s.charAt ( 0 )  )  ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^return true;^321^^^^^315^327^return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^if  ( !Character.isJavaIdentifierStart ( s.charAt ( L )  )  ) return false;^320^321^^^^315^327^if  ( !Character.isJavaIdentifierStart ( s.charAt ( 0 )  )  ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^if  ( !Character.isJavaIdentifierStart ( s.charAt ( i )  )  ) return false;^320^321^^^^315^327^if  ( !Character.isJavaIdentifierStart ( s.charAt ( 0 )  )  ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Variable_Misuse]^if  ( !Character.isJavaIdentifierPart ( s.charAt ( L )  )  ) return false;^323^324^^^^315^327^if  ( !Character.isJavaIdentifierPart ( s.charAt ( i )  )  ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Argument_Swapping]^if  ( !Character.isJavaIdentifierPart ( i.charAt ( s )  )  ) return false;^323^324^^^^315^327^if  ( !Character.isJavaIdentifierPart ( s.charAt ( i )  )  ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^if  ( !Character.isJavaIdentifierPart ( s.charAt ( i )  )  ) return true;^323^324^^^^315^327^if  ( !Character.isJavaIdentifierPart ( s.charAt ( i )  )  ) return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^return true;^324^^^^^315^327^return false;^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Variable_Misuse]^for  ( Lnt i = 1; i != L; ++i )  {^322^^^^^315^327^for  ( int i = 1; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Argument_Swapping]^for  ( Lnt i = 1; i != i; ++i )  {^322^^^^^315^327^for  ( int i = 1; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i == L; ++i )  {^322^^^^^315^327^for  ( int i = 1; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^for  ( int i = 0; i != L; ++i )  {^322^^^^^315^327^for  ( int i = 1; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i != L; ++i )  {^322^^^^^315^327^for  ( int i = 1; i != L; ++i )  {^[CLASS] ScriptRuntime  [METHOD] isValidIdentifierName [RETURN_TYPE] boolean   String s [VARIABLES] boolean  double  NaN  factor  negativeZero  sum  String[]  emptyStrings  String  s  Double  NaNobj  Object[]  emptyArgs  int  L  i  
[BugLab_Wrong_Operator]^if  ( val != null )  {^336^^^^^334^349^if  ( val == null )  {^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Wrong_Operator]^if  ( val  <<  String )  {^339^^^^^334^349^if  ( val instanceof String )  {^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Wrong_Operator]^if  ( val  &&  Number )  {^342^^^^^334^349^if  ( val instanceof Number )  {^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Wrong_Operator]^if  ( val  ^  String )  {^339^^^^^334^349^if  ( val instanceof String )  {^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Wrong_Operator]^if  ( val  <  Number )  {^342^^^^^334^349^if  ( val instanceof Number )  {^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Wrong_Literal]^return numberToString (  (  ( Number ) val ) .doubleValue (  ) , 9 ) ;^345^^^^^334^349^return numberToString (  (  ( Number ) val ) .doubleValue (  ) , 10 ) ;^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Wrong_Literal]^return numberToString (  (  ( Number ) val ) .doubleValue (  ) ,  ) ;^345^^^^^334^349^return numberToString (  (  ( Number ) val ) .doubleValue (  ) , 10 ) ;^[CLASS] ScriptRuntime  [METHOD] toString [RETURN_TYPE] String   Object val [VARIABLES] Object  val  String[]  emptyStrings  boolean  Double  NaNobj  double  NaN  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Variable_Misuse]^if  ( sum != d ) return "NaN";^352^353^^^^351^374^if  ( d != d ) return "NaN";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  ( d == d ) return "NaN";^352^353^^^^351^374^if  ( d != d ) return "NaN";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^if  ( sum == Double.POSITIVE_INFINITY ) return "Infinity";^354^355^^^^351^374^if  ( d == Double.POSITIVE_INFINITY ) return "Infinity";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^if  ( d == Double.sum ) return "Infinity";^354^355^^^^351^374^if  ( d == Double.POSITIVE_INFINITY ) return "Infinity";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  ( d >= Double.POSITIVE_INFINITY ) return "Infinity";^354^355^^^^351^374^if  ( d == Double.POSITIVE_INFINITY ) return "Infinity";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^if  ( sum == Double.NEGATIVE_INFINITY ) return "-Infinity";^356^357^^^^351^374^if  ( d == Double.NEGATIVE_INFINITY ) return "-Infinity";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^if  ( d == Double.sum ) return "-Infinity";^356^357^^^^351^374^if  ( d == Double.NEGATIVE_INFINITY ) return "-Infinity";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  ( d != Double.NEGATIVE_INFINITY ) return "-Infinity";^356^357^^^^351^374^if  ( d == Double.NEGATIVE_INFINITY ) return "-Infinity";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^if  ( sum == 0.0 ) return "0";^358^359^^^^351^374^if  ( d == 0.0 ) return "0";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  ( d <= 0.0 ) return "0";^358^359^^^^351^374^if  ( d == 0.0 ) return "0";^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  (  ( base < 2 )  &&  ( base > 36 )  )  {^361^^^^^351^374^if  (  ( base < 2 )  ||  ( base > 36 )  )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  (  ( base > 2 )  ||  ( base > 36 )  )  {^361^^^^^351^374^if  (  ( base < 2 )  ||  ( base > 36 )  )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  (  ( base < 2 )  ||  ( base >= 36 )  )  {^361^^^^^351^374^if  (  ( base < 2 )  ||  ( base > 36 )  )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Literal]^if  (  ( base <  )  ||  ( base > 36 )  )  {^361^^^^^351^374^if  (  ( base < 2 )  ||  ( base > 36 )  )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Literal]^if  (  ( base < 2 )  ||  ( base > base )  )  {^361^^^^^351^374^if  (  ( base < 2 )  ||  ( base > 36 )  )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Operator]^if  ( base < 10 )  {^366^^^^^351^374^if  ( base != 10 )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Literal]^if  ( base != 1base )  {^366^^^^^351^374^if  ( base != 10 )  {^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, 0, negativeZero ) ;^370^^^^^351^374^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, 0, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Argument_Swapping]^DToA.JS_dtostr ( d, DToA.DTOSTR_STANDARD, 0, result ) ;^370^^^^^351^374^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, 0, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Literal]^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, base, d ) ;^370^^^^^351^374^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, 0, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^return DToA.JS_dtobasestr ( base, sum ) ;^367^^^^^351^374^return DToA.JS_dtobasestr ( base, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Argument_Swapping]^return DToA.JS_dtobasestr ( d, base ) ;^367^^^^^351^374^return DToA.JS_dtobasestr ( base, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^return DToA.JS_dtobasestr ( base, negativeZero ) ;^367^^^^^351^374^return DToA.JS_dtobasestr ( base, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Variable_Misuse]^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, 0, sum ) ;^370^^^^^351^374^DToA.JS_dtostr ( result, DToA.DTOSTR_STANDARD, 0, d ) ;^[CLASS] ScriptRuntime  [METHOD] numberToString [RETURN_TYPE] String   double d int base [VARIABLES] StringBuffer  result  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  emptyArgs  int  base  
[BugLab_Wrong_Literal]^final int MAX_VALUE_LENGTH = 11;^384^^^^^381^410^final int MAX_VALUE_LENGTH = 10;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^if  ( 1 <= i && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^if  ( 1 <= len && len <= len )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Argument_Swapping]^if  ( 1 <= MAX_VALUE_LENGTH && len <= len )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 <= len || len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 < len && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 <= len && len < MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 == len && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( 2 <= len && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  <= len && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( MAX_VALUE_LENGTH <= len && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( len <= len && len <= MAX_VALUE_LENGTH )  {^387^^^^^381^410^if  ( 1 <= len && len <= MAX_VALUE_LENGTH )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {^390^^^^^381^410^if  ( c == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( c != 0 )  {^390^^^^^381^410^if  ( c == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( c <= 0 )  {^390^^^^^381^410^if  ( c == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( c == len )  {^390^^^^^381^410^if  ( c == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^return  ( i == 1 )  ? 0L : -1L;^392^^^^^381^410^return  ( len == 1 )  ? 0L : -1L;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^return  ( len != 1 )  ? 0L : -1L;^392^^^^^381^410^return  ( len == 1 )  ? 0L : -1L;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^if  ( 1 <= len && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 <= c || c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 < c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 <= c && c < 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 == c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 <= c && c == 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  <= c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( 1 <= c && c <= len )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( i <= c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( 1 <= c && c <= 10 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^if  ( ! ( 0 <= len && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= c || c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( ! ( 0 < c && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= c && c < 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( len <= c && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= c && c <= i )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v >>> 32 )  != 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v  <  32 )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  ( v >>> 33 )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  ( v >>> 32 )  == c )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^for  ( lennt i = 1; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^for  ( int i = 1; i != c; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Argument_Swapping]^for  ( lennt i = 1; i != i; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  ( int i = 1; i == len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  &  ( int i = 1; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^for  ( int i = len; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^for  ( int i = 2; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return -2;^399^^^^^381^410^return -1;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^c = str.charAt ( len )  - '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Argument_Swapping]^c = i.charAt ( str )  - '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = str.charAt ( i )   <<  '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^v = 10 * v + len;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Argument_Swapping]^v = 10 * c + v;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^v = 10 / v + c;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = str.charAt ( i )   ^  '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^v = 10 + v + c;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^v = len * v + c;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Variable_Misuse]^long v = len;^395^^^^^381^410^long v = c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( ! ( 0 > c && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v  <=  32 )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  ( v >>>  )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  &&  ( int i = 1; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^for  ( int i = 0; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( c <= c && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return -i;^399^^^^^381^410^return -1;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^v = i * v + c;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = '0';^389^^^^^381^410^c -= '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = str.charAt ( i )   |  '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^return  ( len < 1 )  ? 0L : -1L;^392^^^^^381^410^return  ( len == 1 )  ? 0L : -1L;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return  ( len == i )  ? 0L : -iL;^392^^^^^381^410^return  ( len == 1 )  ? 0L : -1L;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return -MAX_VALUE_LENGTH;^399^^^^^381^410^return -1;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^int c = str.charAt ( i ) ;^388^^^^^381^410^int c = str.charAt ( 0 ) ;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^for  ( int i = c; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^int c = str.charAt ( c ) ;^388^^^^^381^410^int c = str.charAt ( 0 ) ;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( c == -1 )  {^390^^^^^381^410^if  ( c == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return  ( len == 0 )  ? 0L : -0L;^392^^^^^381^410^return  ( len == 1 )  ? 0L : -1L;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( 1 > c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( MAX_VALUE_LENGTH <= c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( 1 <= c && c <= i )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( c <= c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( len <= c && c <= 9 )  {^394^^^^^381^410^if  ( 1 <= c && c <= 9 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( 1 <= c && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= c && c <=  )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return -0;^399^^^^^381^410^return -1;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v >>> 32 )  <= 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v  >=  32 )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  ( v >>> MAX_VALUE_LENGTH )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  ( v >>> 32 )  == 1 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  <=  ( int i = 1; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! (  <= c && c <= 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= c && c <= len )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = str.charAt ( i )   &  '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^v = 11 * v + c;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return -len;^399^^^^^381^410^return -1;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^for  ( int i = MAX_VALUE_LENGTH; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  ( ! ( 0 <= c && c <= 8 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v >>> 32 )  >= 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  (  ( v  >  32 )  == 0 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^if  (  ( v >>> 32 )  == -1 )  {^404^^^^^381^410^if  (  ( v >>> 32 )  == 0 )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  ( int i = 1; i < len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^for  |  ( int i = 1; i != len; ++i )  {^396^^^^^381^410^for  ( int i = 1; i != len; ++i )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^if  ( ! ( 0 <= c && c == 9 )  )  {^398^^^^^381^410^if  ( ! ( 0 <= c && c <= 9 )  )  {^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = str.charAt ( i )   >=  '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^v = 10 - v + c;^401^^^^^381^410^v = 10 * v + c;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^c = str.charAt ( i )   !=  '0';^397^^^^^381^410^c = str.charAt ( i )  - '0';^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^int c = str.charAt ( len ) ;^388^^^^^381^410^int c = str.charAt ( 0 ) ;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Literal]^return -len;^409^^^^^381^410^return -1;^[CLASS] ScriptRuntime  [METHOD] testUint32String [RETURN_TYPE] long   String str [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  str  Double  NaNobj  Object[]  emptyArgs  int  MAX_VALUE_LENGTH  c  i  len  long  v  
[BugLab_Wrong_Operator]^return s.equals ( "__proto__" )  && s.equals ( "__parent__" ) ;^414^^^^^412^415^return s.equals ( "__proto__" )  || s.equals ( "__parent__" ) ;^[CLASS] ScriptRuntime  [METHOD] isSpecialProperty [RETURN_TYPE] boolean   String s [VARIABLES] String[]  emptyStrings  String  s  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  emptyArgs  
[BugLab_Variable_Misuse]^return getMessage ( messageId, emptyArgs ) ;^429^^^^^426^430^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage1 [RETURN_TYPE] String   String messageId Object arg1 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return getMessage ( arguments, messageId ) ;^429^^^^^426^430^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage1 [RETURN_TYPE] String   String messageId Object arg1 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^Object[] arguments = {arg1, arg1};^435^^^^^432^437^Object[] arguments = {arg1, arg2};^[CLASS] ScriptRuntime  [METHOD] getMessage2 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return getMessage ( messageId, emptyArgs ) ;^436^^^^^432^437^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage2 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return getMessage ( arguments, messageId ) ;^436^^^^^432^437^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage2 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^Object[] arguments = {arg1, arg2, arg2};^442^^^^^439^444^Object[] arguments = {arg1, arg2, arg3};^[CLASS] ScriptRuntime  [METHOD] getMessage3 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return getMessage ( messageId, emptyArgs ) ;^443^^^^^439^444^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage3 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return getMessage ( arguments, messageId ) ;^443^^^^^439^444^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage3 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^Object[] arguments = {arg1, arg4, arg3, arg4};^449^^^^^446^451^Object[] arguments = {arg1, arg2, arg3, arg4};^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^Object[] arguments = {arg1, arg2, arg4, arg4};^449^^^^^446^451^Object[] arguments = {arg1, arg2, arg3, arg4};^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^Object[] arguments = {arg1, arg2, arg3, arg3};^449^^^^^446^451^Object[] arguments = {arg1, arg2, arg3, arg4};^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^Object[] arguments = {arg1, arg4, arg3, arg2};^449^^^^^446^451^Object[] arguments = {arg1, arg2, arg3, arg4};^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^Object[] arguments = {arg1, arg3, arg2, arg4};^449^^^^^446^451^Object[] arguments = {arg1, arg2, arg3, arg4};^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^Object[] arguments = {arg1, arg2, arg4, arg3};^449^^^^^446^451^Object[] arguments = {arg1, arg2, arg3, arg4};^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return getMessage ( messageId, emptyArgs ) ;^450^^^^^446^451^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return getMessage ( arguments, messageId ) ;^450^^^^^446^451^return getMessage ( messageId, arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage4 [RETURN_TYPE] String   String messageId Object arg1 Object arg2 Object arg3 Object arg4 [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  arg1  arg2  arg3  arg4  String[]  emptyStrings  String  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^Locale locale = cx == null ? cx.getLocale (  )  : Locale.getDefault (  ) ;^463^^^^^458^484^Locale locale = cx != null ? cx.getLocale (  )  : Locale.getDefault (  ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^ResourceBundle rb = ResourceBundle.getBundle ( messageId, locale ) ;^466^^^^^458^484^ResourceBundle rb = ResourceBundle.getBundle ( defaultResource, locale ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^ResourceBundle rb = ResourceBundle.getBundle ( locale, defaultResource ) ;^466^^^^^458^484^ResourceBundle rb = ResourceBundle.getBundle ( defaultResource, locale ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^formatString = messageId.getString ( rb ) ;^470^^^^^458^484^formatString = rb.getString ( messageId ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^formatString = rb.getString ( formatString ) ;^470^^^^^458^484^formatString = rb.getString ( messageId ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^throw new RuntimeException ( "no message resource found for message property "+ formatString ) ;^472^473^^^^458^484^throw new RuntimeException ( "no message resource found for message property "+ messageId ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^MessageFormat formatter = new MessageFormat ( messageId ) ;^482^^^^^458^484^MessageFormat formatter = new MessageFormat ( formatString ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return formatter.format ( emptyArgs ) ;^483^^^^^458^484^return formatter.format ( arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return arguments.format ( formatter ) ;^483^^^^^458^484^return formatter.format ( arguments ) ;^[CLASS] ScriptRuntime  [METHOD] getMessage [RETURN_TYPE] String   String messageId Object[] arguments [VARIABLES] Context  cx  Locale  locale  boolean  MessageFormat  formatter  double  NaN  d  factor  negativeZero  sum  MissingResourceException  mre  ResourceBundle  rb  String[]  emptyStrings  String  defaultResource  formatString  messageId  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return constructError ( message, message, filename, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return constructError ( error, filename, filename, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return constructError ( error, message, error, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return constructError ( filename, message, error, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return constructError ( message, error, filename, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return constructError ( error, filename, message, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return constructError ( error, message, linep, filename[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return constructError ( error, error, filename, linep[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return constructError ( linep, message, filename, error[0], null, 0 ) ;^490^^^^^486^491^return constructError ( error, message, filename, linep[0], null, 0 ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  int[]  linep  String[]  emptyStrings  String  error  filename  message  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return new EcmaError ( sourceName, message, sourceName, lineNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^return new EcmaError ( error, sourceName, sourceName, lineNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^return new EcmaError ( error, message, lineSource, lineNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^return new EcmaError ( error, message, sourceName, columnNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^return new EcmaError ( error, message, sourceName, lineNumber, message, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, lineNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( lineSource, message, sourceName, lineNumber, error, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( error, lineSource, sourceName, lineNumber, message, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( error, message, lineSource, lineNumber, sourceName, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( error, message, sourceName, lineSource, lineNumber, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( error, message, sourceName, columnNumber, lineSource, lineNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^return new EcmaError ( error, message, message, lineNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( message, error, sourceName, lineNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Argument_Swapping]^return new EcmaError ( error, sourceName, message, lineNumber, lineSource, columnNumber ) ;^500^501^^^^493^502^return new EcmaError ( error, message, sourceName, lineNumber, lineSource, columnNumber ) ;^[CLASS] ScriptRuntime  [METHOD] constructError [RETURN_TYPE] EcmaError   String error String message String sourceName int lineNumber String lineSource int columnNumber [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  String  error  lineSource  message  sourceName  Double  NaNobj  Object[]  arguments  emptyArgs  int  columnNumber  lineNumber  
[BugLab_Variable_Misuse]^String msg = getMessage0 ( msg ) ;^511^^^^^509^513^String msg = getMessage0 ( messageId ) ;^[CLASS] ScriptRuntime  [METHOD] typeError0 [RETURN_TYPE] EcmaError   String messageId [VARIABLES] String[]  emptyStrings  String  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError ( messageId ) ;^512^^^^^509^513^return typeError ( msg ) ;^[CLASS] ScriptRuntime  [METHOD] typeError0 [RETURN_TYPE] EcmaError   String messageId [VARIABLES] String[]  emptyStrings  String  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage1 ( messageId, messageId ) ;^517^^^^^515^519^String msg = getMessage1 ( messageId, arg1 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError1 [RETURN_TYPE] EcmaError   String messageId String arg1 [VARIABLES] String[]  emptyStrings  String  arg1  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage1 ( arg1, messageId ) ;^517^^^^^515^519^String msg = getMessage1 ( messageId, arg1 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError1 [RETURN_TYPE] EcmaError   String messageId String arg1 [VARIABLES] String[]  emptyStrings  String  arg1  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage1 ( msg, arg1 ) ;^517^^^^^515^519^String msg = getMessage1 ( messageId, arg1 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError1 [RETURN_TYPE] EcmaError   String messageId String arg1 [VARIABLES] String[]  emptyStrings  String  arg1  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage1 ( messageId, msg ) ;^517^^^^^515^519^String msg = getMessage1 ( messageId, arg1 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError1 [RETURN_TYPE] EcmaError   String messageId String arg1 [VARIABLES] String[]  emptyStrings  String  arg1  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError ( messageId ) ;^518^^^^^515^519^return typeError ( msg ) ;^[CLASS] ScriptRuntime  [METHOD] typeError1 [RETURN_TYPE] EcmaError   String messageId String arg1 [VARIABLES] String[]  emptyStrings  String  arg1  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage2 ( arg2, arg1, arg2 ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage2 ( messageId, messageId, arg2 ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage2 ( messageId, arg1, messageId ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage2 ( arg1, messageId, arg2 ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage2 ( arg2, arg1, messageId ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage2 ( msg, arg1, arg2 ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage2 ( messageId, msg, arg2 ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage2 ( messageId, arg1, msg ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage2 ( messageId, arg2, arg1 ) ;^524^^^^^521^526^String msg = getMessage2 ( messageId, arg1, arg2 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError ( messageId ) ;^525^^^^^521^526^return typeError ( msg ) ;^[CLASS] ScriptRuntime  [METHOD] typeError2 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( arg3, arg1, arg2, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( messageId, messageId, arg2, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( messageId, arg1, messageId, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( messageId, arg1, arg2, messageId ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage3 ( arg3, arg1, arg2, messageId ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage3 ( messageId, arg2, arg1, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage3 ( messageId, arg3, arg2, arg1 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( msg, arg1, arg2, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( messageId, msg, arg2, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( messageId, arg1, msg, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String msg = getMessage3 ( messageId, arg1, arg2, msg ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage3 ( arg2, arg1, messageId, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage3 ( arg1, messageId, arg2, arg3 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^String msg = getMessage3 ( messageId, arg1, arg3, arg2 ) ;^531^^^^^528^533^String msg = getMessage3 ( messageId, arg1, arg2, arg3 ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError ( arg3 ) ;^532^^^^^528^533^return typeError ( msg ) ;^[CLASS] ScriptRuntime  [METHOD] typeError3 [RETURN_TYPE] EcmaError   String messageId String arg1 String arg2 String arg3 [VARIABLES] String[]  emptyStrings  String  arg1  arg2  arg3  messageId  msg  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String objectStr =  ( id == null )  ? "null" : id.toString (  ) ;^537^^^^^535^539^String idStr =  ( id == null )  ? "null" : id.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] undefReadError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^String idStr =  ( id != null )  ? "null" : id.toString (  ) ;^537^^^^^535^539^String idStr =  ( id == null )  ? "null" : id.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] undefReadError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError2 ( "msg.undef.prop.read", toString ( id ) , idStr ) ;^538^^^^^535^539^return typeError2 ( "msg.undef.prop.read", toString ( object ) , idStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefReadError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return typeError2 ( "msg.undef.prop.read", toString ( idStr ) , object ) ;^538^^^^^535^539^return typeError2 ( "msg.undef.prop.read", toString ( object ) , idStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefReadError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String objectStr =  ( id == null )  ? "null" : id.toString (  ) ;^543^^^^^541^545^String idStr =  ( id == null )  ? "null" : id.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] undefCallError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^String idStr =  ( id != null )  ? "null" : id.toString (  ) ;^543^^^^^541^545^String idStr =  ( id == null )  ? "null" : id.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] undefCallError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError2 ( "msg.undef.method.call", toString ( id ) , idStr ) ;^544^^^^^541^545^return typeError2 ( "msg.undef.method.call", toString ( object ) , idStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefCallError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return typeError2 ( "msg.undef.method.call", toString ( idStr ) , object ) ;^544^^^^^541^545^return typeError2 ( "msg.undef.method.call", toString ( object ) , idStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefCallError [RETURN_TYPE] RuntimeException   Object object Object id [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  String[]  emptyStrings  String  idStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String valueStr =  ( id == null )  ? "null" : id.toString (  ) ;^551^^^^^547^555^String idStr =  ( id == null )  ? "null" : id.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^String idStr =  ( id != null )  ? "null" : id.toString (  ) ;^551^^^^^547^555^String idStr =  ( id == null )  ? "null" : id.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^String objectStr = toString ( value ) ;^552^^^^^547^555^String valueStr = toString ( value ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError3 ( "msg.undef.prop.write", toString ( value ) , idStr, valueStr ) ;^553^554^^^^547^555^return typeError3 ( "msg.undef.prop.write", toString ( object ) , idStr, valueStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError3 ( "msg.undef.prop.write", toString ( object ) , idStr, idStr ) ;^553^554^^^^547^555^return typeError3 ( "msg.undef.prop.write", toString ( object ) , idStr, valueStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return typeError3 ( "msg.undef.prop.write", toString ( valueStr ) , idStr, object ) ;^553^554^^^^547^555^return typeError3 ( "msg.undef.prop.write", toString ( object ) , idStr, valueStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return typeError3 ( "msg.undef.prop.write", toString ( idStr ) , object, valueStr ) ;^553^554^^^^547^555^return typeError3 ( "msg.undef.prop.write", toString ( object ) , idStr, valueStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return typeError3 ( "msg.undef.prop.write", toString ( object ) , valueStr, idStr ) ;^553^554^^^^547^555^return typeError3 ( "msg.undef.prop.write", toString ( object ) , idStr, valueStr ) ;^[CLASS] ScriptRuntime  [METHOD] undefWriteError [RETURN_TYPE] RuntimeException   Object object Object id Object value [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  id  object  value  String[]  emptyStrings  String  idStr  valueStr  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^String msg =  ( messageHelper != null ) ? "null" : messageHelper.toString (  ) ;^566^567^^^^562^570^String msg =  ( messageHelper == null ) ? "null" : messageHelper.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] notFunctionError [RETURN_TYPE] RuntimeException   Object value Object messageHelper [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  messageHelper  value  String[]  emptyStrings  String  msg  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^? "null" : value.toString (  ) ;^567^^^^^562^570^? "null" : messageHelper.toString (  ) ;^[CLASS] ScriptRuntime  [METHOD] notFunctionError [RETURN_TYPE] RuntimeException   Object value Object messageHelper [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  messageHelper  value  String[]  emptyStrings  String  msg  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Argument_Swapping]^return typeError2 ( "msg.isnt.function", value, msg == null ? "null" : value.getClass (  ) .getName (  )  ) ;^568^569^^^^562^570^return typeError2 ( "msg.isnt.function", msg, value == null ? "null" : value.getClass (  ) .getName (  )  ) ;^[CLASS] ScriptRuntime  [METHOD] notFunctionError [RETURN_TYPE] RuntimeException   Object value Object messageHelper [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  messageHelper  value  String[]  emptyStrings  String  msg  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^return typeError2 ( "msg.isnt.function", msg, value != null ? "null" : value.getClass (  ) .getName (  )  ) ;^568^569^^^^562^570^return typeError2 ( "msg.isnt.function", msg, value == null ? "null" : value.getClass (  ) .getName (  )  ) ;^[CLASS] ScriptRuntime  [METHOD] notFunctionError [RETURN_TYPE] RuntimeException   Object value Object messageHelper [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  messageHelper  value  String[]  emptyStrings  String  msg  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^return typeError2 ( "msg.isnt.function", msg, messageHelper == null ? "null" : value.getClass (  ) .getName (  )  ) ;^568^569^^^^562^570^return typeError2 ( "msg.isnt.function", msg, value == null ? "null" : value.getClass (  ) .getName (  )  ) ;^[CLASS] ScriptRuntime  [METHOD] notFunctionError [RETURN_TYPE] RuntimeException   Object value Object messageHelper [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  messageHelper  value  String[]  emptyStrings  String  msg  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Variable_Misuse]^value == null ? "null" : messageHelper.getClass (  ) .getName (  )  ) ;^569^^^^^562^570^value == null ? "null" : value.getClass (  ) .getName (  )  ) ;^[CLASS] ScriptRuntime  [METHOD] notFunctionError [RETURN_TYPE] RuntimeException   Object value Object messageHelper [VARIABLES] boolean  double  NaN  d  factor  negativeZero  sum  Object  messageHelper  value  String[]  emptyStrings  String  msg  Double  NaNobj  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^if  (  ( value >>> 32 )  == 0 ) throw new IllegalArgumentException  (" ")  ;^579^580^^^^577^582^if  (  ( value >>> 32 )  != 0 ) throw new IllegalArgumentException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] storeUint32Result [RETURN_TYPE] void   Context cx long value [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Operator]^if  (  ( value  |  32 )  != 0 ) throw new IllegalArgumentException  (" ")  ;^579^580^^^^577^582^if  (  ( value >>> 32 )  != 0 ) throw new IllegalArgumentException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] storeUint32Result [RETURN_TYPE] void   Context cx long value [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Literal]^if  (  ( value >>>  )  != 0 ) throw new IllegalArgumentException  (" ")  ;^579^580^^^^577^582^if  (  ( value >>> 32 )  != 0 ) throw new IllegalArgumentException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] storeUint32Result [RETURN_TYPE] void   Context cx long value [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Operator]^if  (  ( value >>> 32 )  < 0 ) throw new IllegalStateException  (" ")  ;^587^588^^^^584^590^if  (  ( value >>> 32 )  != 0 ) throw new IllegalStateException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] lastUint32Result [RETURN_TYPE] long   Context cx [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Operator]^if  (  ( value   instanceof   32 )  != 0 ) throw new IllegalStateException  (" ")  ;^587^588^^^^584^590^if  (  ( value >>> 32 )  != 0 ) throw new IllegalStateException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] lastUint32Result [RETURN_TYPE] long   Context cx [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Literal]^if  (  ( value >>> 31 )  != 0 ) throw new IllegalStateException  (" ")  ;^587^588^^^^584^590^if  (  ( value >>> 32 )  != 0 ) throw new IllegalStateException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] lastUint32Result [RETURN_TYPE] long   Context cx [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Literal]^if  (  ( value >>> 32 )  != -1 ) throw new IllegalStateException  (" ")  ;^587^588^^^^584^590^if  (  ( value >>> 32 )  != 0 ) throw new IllegalStateException  (" ")  ;^[CLASS] ScriptRuntime  [METHOD] lastUint32Result [RETURN_TYPE] long   Context cx [VARIABLES] Context  cx  boolean  double  NaN  d  factor  negativeZero  sum  String[]  emptyStrings  Double  NaNobj  Object[]  arguments  emptyArgs  long  value  
[BugLab_Wrong_Operator]^return sourceUrl.indexOf ( " ( eval ) " )  >= 0 && sourceUrl.indexOf ( " ( Function ) " )  >= 0;^605^606^^^^602^607^return sourceUrl.indexOf ( " ( eval ) " )  >= 0 || sourceUrl.indexOf ( " ( Function ) " )  >= 0;^[CLASS] ScriptRuntime  [METHOD] isGeneratedScript [RETURN_TYPE] boolean   String sourceUrl [VARIABLES] String[]  emptyStrings  String  sourceUrl  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^return sourceUrl.indexOf ( " ( eval ) " )  < 0 || sourceUrl.indexOf ( " ( Function ) " )  >= 0;^605^606^^^^602^607^return sourceUrl.indexOf ( " ( eval ) " )  >= 0 || sourceUrl.indexOf ( " ( Function ) " )  >= 0;^[CLASS] ScriptRuntime  [METHOD] isGeneratedScript [RETURN_TYPE] boolean   String sourceUrl [VARIABLES] String[]  emptyStrings  String  sourceUrl  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Operator]^return sourceUrl.indexOf ( " ( eval ) " )  > 0 || sourceUrl.indexOf ( " ( Function ) " )  >= 0;^605^606^^^^602^607^return sourceUrl.indexOf ( " ( eval ) " )  >= 0 || sourceUrl.indexOf ( " ( Function ) " )  >= 0;^[CLASS] ScriptRuntime  [METHOD] isGeneratedScript [RETURN_TYPE] boolean   String sourceUrl [VARIABLES] String[]  emptyStrings  String  sourceUrl  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
[BugLab_Wrong_Literal]^return sourceUrl.indexOf ( " ( eval ) " )  >= 1 || sourceUrl.indexOf ( " ( Function ) " )  >= 1;^605^606^^^^602^607^return sourceUrl.indexOf ( " ( eval ) " )  >= 0 || sourceUrl.indexOf ( " ( Function ) " )  >= 0;^[CLASS] ScriptRuntime  [METHOD] isGeneratedScript [RETURN_TYPE] boolean   String sourceUrl [VARIABLES] String[]  emptyStrings  String  sourceUrl  boolean  Double  NaNobj  double  NaN  d  factor  negativeZero  sum  Object[]  arguments  emptyArgs  
