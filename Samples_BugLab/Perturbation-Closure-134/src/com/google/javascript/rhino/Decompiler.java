[buglab_swap_variables]^if  ( ! ( 0 <= Token.LAST_TOKEN && token <= token )  ) throw new IllegalArgumentException  (" ")  ;^136^137^^^^134^140^if  ( ! ( 0 <= token && token <= Token.LAST_TOKEN )  ) throw new IllegalArgumentException  (" ")  ;^[CLASS] Decompiler  [METHOD] addToken [RETURN_TYPE] void   int token [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( ! ( 0 <= Token.LAST_TOKEN && token <= token )  ) throw new IllegalArgumentException  (" ")  ;^144^145^^^^142^149^if  ( ! ( 0 <= token && token <= Token.LAST_TOKEN )  ) throw new IllegalArgumentException  (" ")  ;^[CLASS] Decompiler  [METHOD] addEOL [RETURN_TYPE] void   int token [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^appendString ( '/' + flags + '/' + regexp ) ;^166^^^^^163^167^appendString ( '/' + regexp + '/' + flags ) ;^[CLASS] Decompiler  [METHOD] addRegexp [RETURN_TYPE] void   String regexp String flags [VARIABLES] boolean  printSource  String  flags  regexp  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^int nextTop = lengthEncodingSize + sourceTop + L;^229^^^^^222^243^int nextTop = sourceTop + lengthEncodingSize + L;^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^int nextTop = L + lengthEncodingSize + sourceTop;^229^^^^^222^243^int nextTop = sourceTop + lengthEncodingSize + L;^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( sourceBuffer.length > nextTop )  {^230^^^^^222^243^if  ( nextTop > sourceBuffer.length )  {^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( sourceBuffer > nextTop.length )  {^230^^^^^222^243^if  ( nextTop > sourceBuffer.length )  {^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^str.getChars ( 0, sourceTop, sourceBuffer, L ) ;^241^^^^^222^243^str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^str.getChars ( 0,  sourceBuffer, sourceTop ) ;^241^^^^^222^243^str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^str.getChars ( 0, L,  sourceTop ) ;^241^^^^^222^243^str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^str.getChars ( 0, L, sourceBuffer ) ;^241^^^^^222^243^str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[CLASS] Decompiler  [METHOD] appendString [RETURN_TYPE] void   String str [VARIABLES] boolean  printSource  String  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( sourceBuffer == sourceTop.length )  {^247^^^^^245^252^if  ( sourceTop == sourceBuffer.length )  {^[CLASS] Decompiler  [METHOD] append [RETURN_TYPE] void   char c [VARIABLES] char  c  boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( sourceBuffer.length == sourceTop )  {^247^^^^^245^252^if  ( sourceTop == sourceBuffer.length )  {^[CLASS] Decompiler  [METHOD] append [RETURN_TYPE] void   char c [VARIABLES] char  c  boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( sourceTop == sourceBuffer.length.length )  {^247^^^^^245^252^if  ( sourceTop == sourceBuffer.length )  {^[CLASS] Decompiler  [METHOD] append [RETURN_TYPE] void   char c [VARIABLES] char  c  boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  
[buglab_swap_variables]^if  ( sourceBuffer <= minimalCapacity.length )  Kit.codeBug (  ) ;^257^^^^^254^265^if  ( minimalCapacity <= sourceBuffer.length )  Kit.codeBug (  ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( sourceBuffer.length <= minimalCapacity )  Kit.codeBug (  ) ;^257^^^^^254^265^if  ( minimalCapacity <= sourceBuffer.length )  Kit.codeBug (  ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( minimalCapacity <= sourceBuffer.length.length )  Kit.codeBug (  ) ;^257^^^^^254^265^if  ( minimalCapacity <= sourceBuffer.length )  Kit.codeBug (  ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int newCapacity = sourceBuffer * 2;^258^^^^^254^265^int newCapacity = sourceBuffer.length * 2;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int newCapacity = sourceBuffer.length.length * 2;^258^^^^^254^265^int newCapacity = sourceBuffer.length * 2;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( minimalCapacity < newCapacity )  {^259^^^^^254^265^if  ( newCapacity < minimalCapacity )  {^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.arraycopy ( tmp, 0, sourceBuffer, 0, sourceTop ) ;^263^^^^^254^265^System.arraycopy ( sourceBuffer, 0, tmp, 0, sourceTop ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.arraycopy ( sourceBuffer, 0,  0, sourceTop ) ;^263^^^^^254^265^System.arraycopy ( sourceBuffer, 0, tmp, 0, sourceTop ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.arraycopy (  0, tmp, 0, sourceTop ) ;^263^^^^^254^265^System.arraycopy ( sourceBuffer, 0, tmp, 0, sourceTop ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.arraycopy ( sourceBuffer, 0, sourceTop, 0, tmp ) ;^263^^^^^254^265^System.arraycopy ( sourceBuffer, 0, tmp, 0, sourceTop ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.arraycopy ( sourceBuffer, 0, tmp, 0 ) ;^263^^^^^254^265^System.arraycopy ( sourceBuffer, 0, tmp, 0, sourceTop ) ;^[CLASS] Decompiler  [METHOD] increaseSourceCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( sourceTop < 0 || offset < offset )  Kit.codeBug (  ) ;^269^^^^^267^271^if  ( offset < 0 || sourceTop < offset )  Kit.codeBug (  ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return new String ( offset, sourceBuffer, sourceTop - offset ) ;^270^^^^^267^271^return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return new String ( sourceBuffer,  sourceTop - offset ) ;^270^^^^^267^271^return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return new String ( sourceTop, offset, sourceBuffer - offset ) ;^270^^^^^267^271^return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return new String (  offset, sourceTop - offset ) ;^270^^^^^267^271^return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return new String ( sourceBuffer, sourceTop, offset - offset ) ;^270^^^^^267^271^return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return new String ( sourceBuffer, offset - offset ) ;^270^^^^^267^271^return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[CLASS] Decompiler  [METHOD] sourceToString [RETURN_TYPE] String   int offset [VARIABLES] boolean  printSource  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int indent = INITIAL_INDENT_PROP.getInt ( properties, 0 ) ;^295^^^^^280^310^int indent = properties.getInt ( INITIAL_INDENT_PROP, 0 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int indent = properties.getInt (  0 ) ;^295^^^^^280^310^int indent = properties.getInt ( INITIAL_INDENT_PROP, 0 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int indentGap = INDENT_GAP_PROP.getInt ( properties, 4 ) ;^297^^^^^282^312^int indentGap = properties.getInt ( INDENT_GAP_PROP, 4 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int indentGap = properties.getInt (  4 ) ;^297^^^^^282^312^int indentGap = properties.getInt ( INDENT_GAP_PROP, 4 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int caseGap = CASE_GAP_PROP.getInt ( properties, 2 ) ;^299^^^^^284^314^int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int caseGap = properties.getInt (  2 ) ;^299^^^^^284^314^int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^tokenname = Token.name ( i.charAt ( source )  ) ;^315^^^^^300^330^tokenname = Token.name ( source.charAt ( i )  ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.err.println ( source + pad +  ( int ) tokenname.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^323^324^325^326^^308^338^System.err.println ( tokenname + pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.err.println ( pad + tokenname +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^323^324^325^326^^308^338^System.err.println ( tokenname + pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.err.println ( tokenname + pad +  ( sourcent ) i.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^323^324^325^326^^308^338^System.err.println ( tokenname + pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^+ pad +  ( sourcent ) i.charAt ( i ) + "\t'" + ScriptRuntime.escapeString ( source.substring ( i, i+1 )  ) + "'" ) ;^325^326^327^328^^310^340^+ pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString ( source.substring ( i, i+1 )  ) + "'" ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^+ pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString ( source.substring (  i+1 )  ) + "'" ) ;^325^326^327^328^^310^340^+ pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString ( source.substring ( i, i+1 )  ) + "'" ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^+ "\t'" + ScriptRuntime.escapeString ( i.substring ( source, i+1 )  ) + "'" ) ;^326^327^328^^^311^341^+ "\t'" + ScriptRuntime.escapeString ( source.substring ( i, i+1 )  ) + "'" ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^+ "\t'" + ScriptRuntime.escapeString ( source.substring (  i+1 )  ) + "'" ) ;^326^327^328^^^311^341^+ "\t'" + ScriptRuntime.escapeString ( source.substring ( i, i+1 )  ) + "'" ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^( i.substring ( source, i+1 )  ) + "'" ) ;^327^328^^^^312^342^( source.substring ( i, i+1 )  ) + "'" ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^( source.substring (  i+1 )  ) + "'" ) ;^327^328^^^^312^342^( source.substring ( i, i+1 )  ) + "'" ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.err.println ( tokenname + source +  ( int ) pad.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^323^324^325^326^^308^338^System.err.println ( tokenname + pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^System.err.println ( tokenname + i +  ( padnt ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^323^324^325^326^^308^338^System.err.println ( tokenname + pad +  ( int ) source.charAt ( i ) + "\t'" + ScriptRuntime.escapeString^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( lengthnt i = 0; i < i; ++i )  {^310^^^^^295^325^for  ( int i = 0; i < length; ++i )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SCRIPT.charAt ( i )  == source )  {^337^^^^^322^352^if  ( source.charAt ( i )  == Token.SCRIPT )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source.charAt ( Token.SCRIPT )  == i )  {^337^^^^^322^352^if  ( source.charAt ( i )  == Token.SCRIPT )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^topFunctionType = i.charAt ( source + 1 ) ;^341^^^^^337^342^topFunctionType = source.charAt ( i + 1 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^topFunctionType = i.charAt ( source + 1 ) ;^341^^^^^326^356^topFunctionType = source.charAt ( i + 1 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( i.charAt ( source )  == Token.SCRIPT )  {^337^^^^^322^352^if  ( source.charAt ( i )  == Token.SCRIPT )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( FunctionNode.FUNCTION_EXPRESSION == topFunctionType )  {^350^^^^^344^353^if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( int indent = 0; j < j; j++ ) result.append ( ' ' ) ;^347^348^^^^332^362^for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( int j = 0; j < result; j++ ) indent.append ( ' ' ) ;^347^348^^^^332^362^for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( FunctionNode.FUNCTION_EXPRESSION == topFunctionType )  {^350^^^^^335^365^if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( int result = 0; j < indent; j++ ) j.append ( ' ' ) ;^347^348^^^^332^362^for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source == getNext ( Token.EOL, length, i )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext (  length, i )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source, i, length )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source,  i )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source, length )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source, indentGap, i )  ) indent += length;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( braceNesting && justFunctionBody == 0 ) break;^421^422^^^^406^436^if  ( justFunctionBody && braceNesting == 0 ) break;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source == getNext ( Token.LC, length, i )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext (  length, i )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext ( source, i, length )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext ( source,  i )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( i == getNext ( source, length, Token.LC )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext ( source, length )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext ( source, length, result )  ) i.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( result == getNext ( source, length, i )  ) Token.LC.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( nextToken == Token.DEFAULT || nextToken == Token.CASE ) {^481^482^483^^^466^496^if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT ) {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^} else nextTokenf  ( i == Token.RC )  {^485^^^^^470^500^} else if  ( nextToken == Token.RC )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( afterName.charAt ( source )  == Token.COLON ) less = indentGap;^494^495^^^^479^509^if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source.charAt ( Token.COLON )  == afterName ) less = indentGap;^494^495^^^^479^509^if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source.charAt ( indentGap )  == Token.COLON ) less = afterName;^494^495^^^^479^509^if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int afterName = getSourceStringEnd ( i, source + 2 ) ;^493^^^^^478^508^int afterName = getSourceStringEnd ( source, i + 2 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int afterName = getSourceStringEnd (  i + 2 ) ;^493^^^^^478^508^int afterName = getSourceStringEnd ( source, i + 2 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int afterName = getSourceStringEnd ( source + 2 ) ;^493^^^^^478^508^int afterName = getSourceStringEnd ( source, i + 2 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.COLON.charAt ( afterName )  == source ) less = indentGap;^494^495^^^^479^509^if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( indentGap.charAt ( afterName )  == Token.COLON ) less = source;^494^495^^^^479^509^if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source.charAt ( afterName )  == indentGap ) less = Token.COLON;^494^495^^^^479^509^if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^less = caseGap - indentGap;^484^^^^^481^496^less = indentGap - caseGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^else nextTokenf  ( i == Token.NAME )  {^492^^^^^477^507^else if  ( nextToken == Token.NAME )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( ; indent < less; less++ ) result.append ( ' ' ) ;^498^499^^^^483^513^for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( ; result < indent; less++ ) less.append ( ' ' ) ;^498^499^^^^483^513^for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^less = caseGap - indentGap;^484^^^^^469^499^less = indentGap - caseGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int nextToken = i.charAt ( source + 1 ) ;^480^^^^^465^495^int nextToken = source.charAt ( i + 1 ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^else Token.NAMEf  ( nextToken == i )  {^492^^^^^477^507^else if  ( nextToken == Token.NAME )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( i, length, source )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext (  length, i )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source, i, length )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source,  i )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source, length )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source, result, i )  ) length.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( i == getNext ( source, length, Token.NAME )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source == getNext ( Token.NAME, length, i )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext (  length, i )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source, i, length )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source,  i )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source, length, result )  ) i.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( source, length )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( result, length, i )  ) source.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( i == getNext ( source, length, Token.NAME )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext ( length, source, i )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext (  length, i )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext ( source, i, length )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext ( source,  i )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( i != getNext ( source, length, Token.SEMI )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext ( source, length )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( result != getNext ( source, length, i )  ) Token.SEMI.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( length != getNext ( source, Token.SEMI, i )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source != getNext ( Token.EOL, length, i )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL != getNext (  length, i )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( length != getNext ( source, Token.EOL, i )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL != getNext ( source,  i )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL != getNext ( source, i, length )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL != getNext ( source, length )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( i != getNext ( source, length, Token.EOL )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( source == getNext ( Token.EOL, length, i )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext (  length, i )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source, i, length )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source,  i )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source, length )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( result == getNext ( source, length, i )  )  Token.EOL.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( length == getNext ( source, Token.EOL, i )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( i, source + 1, false, result ) ;^361^^^^^346^376^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString (  i + 1, false, result ) ;^361^^^^^346^376^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source + 1, false, result ) ;^361^^^^^346^376^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( result, i + 1, false, source ) ;^361^^^^^346^376^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source, i + 1, false ) ;^361^^^^^346^376^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( result, i + 1, false, source ) ;^368^^^^^353^383^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString (  i + 1, false, result ) ;^368^^^^^353^383^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source, result + 1, false, i ) ;^368^^^^^353^383^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source + 1, false, result ) ;^368^^^^^353^383^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source, i + 1, false ) ;^368^^^^^353^383^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( i, source + 1, true, result ) ;^372^^^^^357^387^i = printSourceString ( source, i + 1, true, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString (  i + 1, true, result ) ;^372^^^^^357^387^i = printSourceString ( source, i + 1, true, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source + 1, true, result ) ;^372^^^^^357^387^i = printSourceString ( source, i + 1, true, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source, result + 1, true, i ) ;^372^^^^^357^387^i = printSourceString ( source, i + 1, true, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source, i + 1, true ) ;^372^^^^^357^387^i = printSourceString ( source, i + 1, true, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceNumber ( result, i + 1, source ) ;^376^^^^^361^391^i = printSourceNumber ( source, i + 1, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceNumber (  i + 1, result ) ;^376^^^^^361^391^i = printSourceNumber ( source, i + 1, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceNumber ( i, source + 1, result ) ;^376^^^^^361^391^i = printSourceNumber ( source, i + 1, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceNumber ( source + 1, result ) ;^376^^^^^361^391^i = printSourceNumber ( source, i + 1, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceNumber ( source, i + 1 ) ;^376^^^^^361^391^i = printSourceNumber ( source, i + 1, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^throw new RuntimeException ( "Token: " + Token.name ( i.charAt ( source )  )  ) ;^813^814^^^^798^828^throw new RuntimeException ( "Token: " + Token.name ( source.charAt ( i )  )  ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch ( i.charAt ( source )  )  {^356^^^^^341^371^switch ( source.charAt ( i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^result.append ( Token.GET.charAt ( i )  == source ? "get " : "set " ) ;^359^^^^^344^374^result.append ( source.charAt ( i )  == Token.GET ? "get " : "set " ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^result.append ( i.charAt ( source )  == Token.GET ? "get " : "set " ) ;^359^^^^^344^374^result.append ( source.charAt ( i )  == Token.GET ? "get " : "set " ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( source, result + 1, false, i ) ;^361^^^^^346^376^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( i, source + 1, false, result ) ;^368^^^^^353^383^i = printSourceString ( source, i + 1, false, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceString ( result, i + 1, true, source ) ;^372^^^^^357^387^i = printSourceString ( source, i + 1, true, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^i = printSourceNumber ( source, result + 1, i ) ;^376^^^^^361^391^i = printSourceNumber ( source, i + 1, result ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( i, length, source )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch  ( getNext ( i, length, source )  )  {^425^^^^^410^440^switch  ( getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch  ( getNext (  length, i )  )  {^425^^^^^410^440^switch  ( getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch  ( getNext ( length, source, i )  )  {^425^^^^^410^440^switch  ( getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch  ( getNext ( source,  i )  )  {^425^^^^^410^440^switch  ( getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch  ( getNext ( source, i, length )  )  {^425^^^^^410^440^switch  ( getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^switch  ( getNext ( source, length )  )  {^425^^^^^410^440^switch  ( getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext ( length, source, i )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( length, source, i )  ) result.append ( ' ' ) ;^571^572^^^^556^586^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL != getNext ( i, length, source )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( length, source, i )  )  result.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^Token.name ( i.charAt ( source )  )  ) ;^814^^^^^799^829^Token.name ( source.charAt ( i )  )  ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( indentGap == getNext ( source, length, i )  ) indent += Token.EOL;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^else if  ( Token.NAME == nextToken )  {^492^^^^^477^507^else if  ( nextToken == Token.NAME )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^for  ( ; less < result; less++ ) indent.append ( ' ' ) ;^498^499^^^^483^513^for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^} else if  ( Token.RC == nextToken )  {^485^^^^^470^500^} else if  ( nextToken == Token.RC )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( result, length, i )  ) source.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( result == getNext ( source, length, i )  ) Token.NAME.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( length == getNext ( source, Token.NAME, i )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext ( result, length, i )  ) source.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( result, length, i )  )  source.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( source, length, result )  )  i.append ( ':' ) ;^663^664^665^^^648^678^if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^result.append ( source.charAt ( Token.GET )  == i ? "get " : "set " ) ;^359^^^^^344^374^result.append ( source.charAt ( i )  == Token.GET ? "get " : "set " ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL == getNext ( length, source, i )  ) indent += indentGap;^410^411^^^^395^425^if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.LC == getNext ( i, length, source )  ) result.append ( ' ' ) ;^444^445^^^^429^459^if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.NAME == getNext ( length, source, i )  ) result.append ( ' ' ) ;^565^566^^^^550^580^if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.SEMI != getNext ( i, length, source )  ) result.append ( ' ' ) ;^585^586^^^^570^600^if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( Token.EOL != getNext ( length, source, i )  )  {^595^^^^^580^610^if  ( Token.EOL != getNext ( source, length, i )  )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( FunctionNode.FUNCTION_EXPRESSION == topFunctionType )  {^824^^^^^819^827^if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^if  ( FunctionNode.FUNCTION_EXPRESSION == topFunctionType )  {^824^^^^^809^839^if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[CLASS] Decompiler  [METHOD] decompile [RETURN_TYPE] String   String source int flags UintMap properties [VARIABLES] UintMap  properties  StringBuffer  result  boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  pad  source  tokenname  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return  ( length + 1 < i )  ? source.charAt ( i + 1 )  : Token.EOF;^834^^^^^832^835^return  ( i + 1 < length )  ? source.charAt ( i + 1 )  : Token.EOF;^[CLASS] Decompiler  [METHOD] getNext [RETURN_TYPE] int   String source int length int i [VARIABLES] boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return  ( source + 1 < length )  ? i.charAt ( i + 1 )  : Token.EOF;^834^^^^^832^835^return  ( i + 1 < length )  ? source.charAt ( i + 1 )  : Token.EOF;^[CLASS] Decompiler  [METHOD] getNext [RETURN_TYPE] int   String source int length int i [VARIABLES] boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return  ( i + 1 < Token.EOF )  ? source.charAt ( i + 1 )  : length;^834^^^^^832^835^return  ( i + 1 < length )  ? source.charAt ( i + 1 )  : Token.EOF;^[CLASS] Decompiler  [METHOD] getNext [RETURN_TYPE] int   String source int length int i [VARIABLES] boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return printSourceString ( offset, source, false, null ) ;^839^^^^^837^840^return printSourceString ( source, offset, false, null ) ;^[CLASS] Decompiler  [METHOD] getSourceStringEnd [RETURN_TYPE] int   String source int offset [VARIABLES] boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return printSourceString (  offset, false, null ) ;^839^^^^^837^840^return printSourceString ( source, offset, false, null ) ;^[CLASS] Decompiler  [METHOD] getSourceStringEnd [RETURN_TYPE] int   String source int offset [VARIABLES] boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return printSourceString ( source,  false, null ) ;^839^^^^^837^840^return printSourceString ( source, offset, false, null ) ;^[CLASS] Decompiler  [METHOD] getSourceStringEnd [RETURN_TYPE] int   String source int offset [VARIABLES] boolean  afterFirstEOL  justFunctionBody  newLine  printSource  toSource  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int length = offset.charAt ( source ) ;^846^^^^^842^863^int length = source.charAt ( offset ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^length =  (  ( 0x7FFF & source )  << 16 )  | length.charAt ( offset ) ;^849^^^^^842^863^length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^length =  (  ( 0x7FFF & length )  << 16 )  | offset.charAt ( source ) ;^849^^^^^842^863^length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^length =  (  ( 0x7FFF & offset )  << 16 )  | source.charAt ( length ) ;^849^^^^^842^863^length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^String str = length.substring ( offset, offset + source ) ;^853^^^^^842^863^String str = source.substring ( offset, offset + length ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^String str = offset.substring ( source, offset + length ) ;^853^^^^^842^863^String str = source.substring ( offset, offset + length ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^String str = source.substring (  offset + length ) ;^853^^^^^842^863^String str = source.substring ( offset, offset + length ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^String str = source.substring ( length, offset + offset ) ;^853^^^^^842^863^String str = source.substring ( offset, offset + length ) ;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^return length + offset;^862^^^^^842^863^return offset + length;^[CLASS] Decompiler  [METHOD] printSourceString [RETURN_TYPE] int   String source int offset boolean asQuotedString StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  String  source  str  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^char type = offset.charAt ( source ) ;^869^^^^^854^884^char type = source.charAt ( offset ) ;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^lbits =  ( long ) offset.charAt ( source )  << 48;^880^^^^^865^895^lbits =  ( long ) source.charAt ( offset )  << 48;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^lbits |=  ( long ) offset.charAt ( source + 1 )  << 32;^881^^^^^866^896^lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^lbits |=  ( long ) offset.charAt ( source + 2 )  << 16;^882^^^^^867^897^lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^lbits |= offset.charAt ( source + 3 ) ;^883^^^^^868^898^lbits |= source.charAt ( offset + 3 ) ;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^int ival = offset.charAt ( source ) ;^873^^^^^858^888^int ival = source.charAt ( offset ) ;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
[buglab_swap_variables]^sb.append ( ScriptRuntime.numberToString (  10 )  ) ;^896^^^^^881^911^sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ;^[CLASS] Decompiler  [METHOD] printSourceNumber [RETURN_TYPE] int   String source int offset StringBuffer sb [VARIABLES] StringBuffer  sb  boolean  afterFirstEOL  asQuotedString  justFunctionBody  newLine  printSource  toSource  double  number  char  type  String  source  int  CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  long  lbits  char[]  sourceBuffer  tmp  
