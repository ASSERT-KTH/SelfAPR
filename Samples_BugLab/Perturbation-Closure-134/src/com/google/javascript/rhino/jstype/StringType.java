[BugLab_Wrong_Operator]^if  ( that.isUnknownType (  )  && that.isSubtype ( getNativeType ( JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN )  )  )  {^62^63^^^^58^67^if  ( that.isUnknownType (  )  || that.isSubtype ( getNativeType ( JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN )  )  )  {^[CLASS] StringType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] long  serialVersionUID  JSType  that  boolean  
[BugLab_Wrong_Literal]^return false;^71^^^^^70^72^return true;^[CLASS] StringType  [METHOD] isStringValueType [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^76^^^^^75^77^return true;^[CLASS] StringType  [METHOD] matchesNumberContext [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^81^^^^^80^82^return true;^[CLASS] StringType  [METHOD] matchesStringContext [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^87^^^^^85^88^return true;^[CLASS] StringType  [METHOD] matchesObjectContext [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return null.caseStringType (  ) ;^107^^^^^106^108^return visitor.caseStringType (  ) ;^[CLASS] StringType  [METHOD] visit [RETURN_TYPE] <T>   Visitor<T> visitor [VARIABLES] Visitor  visitor  long  serialVersionUID  boolean  
