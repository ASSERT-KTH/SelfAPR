[buglab_swap_variables]^return that.testForEquality ( primitiveType ) ;^108^^^^^107^109^return primitiveType.testForEquality ( that ) ;^[CLASS] EnumElementType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] ObjectType  primitiveObjectType  JSType  elementType  primitiveType  that  String  name  boolean  long  serialVersionUID  
[buglab_swap_variables]^if  ( JSType.isSubtype ( this )  )  {^169^^^^^168^174^if  ( JSType.isSubtype ( this, that )  )  {^[CLASS] EnumElementType  [METHOD] isSubtype [RETURN_TYPE] boolean   JSType that [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  String  name  boolean  long  serialVersionUID  
[buglab_swap_variables]^return that.isSubtype ( primitiveType ) ;^172^^^^^168^174^return primitiveType.isSubtype ( that ) ;^[CLASS] EnumElementType  [METHOD] isSubtype [RETURN_TYPE] boolean   JSType that [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  String  name  boolean  long  serialVersionUID  
[buglab_swap_variables]^return propertyName == null ? false : primitiveObjectType.isPropertyTypeDeclared ( primitiveObjectType ) ;^190^191^^^^189^192^return primitiveObjectType == null ? false : primitiveObjectType.isPropertyTypeDeclared ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] isPropertyTypeDeclared [RETURN_TYPE] boolean   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
[buglab_swap_variables]^false : propertyName.isPropertyTypeDeclared ( primitiveObjectType ) ;^191^^^^^189^192^false : primitiveObjectType.isPropertyTypeDeclared ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] isPropertyTypeDeclared [RETURN_TYPE] boolean   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
[buglab_swap_variables]^return propertyName == null ? false : primitiveObjectType.isPropertyTypeInferred ( primitiveObjectType ) ;^196^197^^^^195^198^return primitiveObjectType == null ? false : primitiveObjectType.isPropertyTypeInferred ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] isPropertyTypeInferred [RETURN_TYPE] boolean   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
[buglab_swap_variables]^false : propertyName.isPropertyTypeInferred ( primitiveObjectType ) ;^197^^^^^195^198^false : primitiveObjectType.isPropertyTypeInferred ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] isPropertyTypeInferred [RETURN_TYPE] boolean   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
[buglab_swap_variables]^return propertyName.findPropertyType ( primitiveType ) ;^220^^^^^219^221^return primitiveType.findPropertyType ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] findPropertyType [RETURN_TYPE] JSType   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
[buglab_swap_variables]^return propertyName == null ? getNativeType ( JSTypeNative.UNKNOWN_TYPE )  : primitiveObjectType.getPropertyType ( primitiveObjectType ) ;^225^226^227^^^224^228^return primitiveObjectType == null ? getNativeType ( JSTypeNative.UNKNOWN_TYPE )  : primitiveObjectType.getPropertyType ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] getPropertyType [RETURN_TYPE] JSType   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
[buglab_swap_variables]^return propertyName == null ? false : primitiveObjectType.hasProperty ( primitiveObjectType ) ;^232^233^234^^^231^235^return primitiveObjectType == null ? false : primitiveObjectType.hasProperty ( propertyName ) ;^[CLASS] EnumElementType  [METHOD] hasProperty [RETURN_TYPE] boolean   String propertyName [VARIABLES] ObjectType  primitiveObjectType  thatObj  JSType  elementType  primitiveType  that  type  String  name  propertyName  boolean  long  serialVersionUID  
