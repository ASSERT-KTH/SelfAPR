[BugLab_Wrong_Literal]^return true;^64^^^^^62^71^return false;^[CLASS] FunctionParamBuilder  [METHOD] addRequiredParams [RETURN_TYPE] boolean    types [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  JSType[]  types  Node  root  
[BugLab_Wrong_Literal]^return false;^70^^^^^62^71^return true;^[CLASS] FunctionParamBuilder  [METHOD] addRequiredParams [RETURN_TYPE] boolean    types [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  JSType[]  types  Node  root  
[BugLab_Wrong_Literal]^return true;^81^^^^^79^88^return false;^[CLASS] FunctionParamBuilder  [METHOD] addOptionalParams [RETURN_TYPE] boolean    types [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  JSType[]  types  Node  root  
[BugLab_Argument_Swapping]^newParameter ( type.createOptionalType ( registry )  ) .setOptionalArg ( true ) ;^85^^^^^79^88^newParameter ( registry.createOptionalType ( type )  ) .setOptionalArg ( true ) ;^[CLASS] FunctionParamBuilder  [METHOD] addOptionalParams [RETURN_TYPE] boolean    types [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  JSType[]  types  Node  root  
[BugLab_Wrong_Literal]^newParameter ( registry.createOptionalType ( type )  ) .setOptionalArg ( false ) ;^85^^^^^79^88^newParameter ( registry.createOptionalType ( type )  ) .setOptionalArg ( true ) ;^[CLASS] FunctionParamBuilder  [METHOD] addOptionalParams [RETURN_TYPE] boolean    types [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  JSType[]  types  Node  root  
[BugLab_Wrong_Literal]^return false;^87^^^^^79^88^return true;^[CLASS] FunctionParamBuilder  [METHOD] addOptionalParams [RETURN_TYPE] boolean    types [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  JSType[]  types  Node  root  
[BugLab_Wrong_Literal]^return true;^96^^^^^94^109^return false;^[CLASS] FunctionParamBuilder  [METHOD] addVarArgs [RETURN_TYPE] boolean   JSType type [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  Node  root  
[BugLab_Argument_Swapping]^type = type.createOptionalType ( registry ) ;^105^^^^^94^109^type = registry.createOptionalType ( type ) ;^[CLASS] FunctionParamBuilder  [METHOD] addVarArgs [RETURN_TYPE] boolean   JSType type [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  Node  root  
[BugLab_Wrong_Literal]^newParameter ( type ) .setVarArgs ( false ) ;^107^^^^^94^109^newParameter ( type ) .setVarArgs ( true ) ;^[CLASS] FunctionParamBuilder  [METHOD] addVarArgs [RETURN_TYPE] boolean   JSType type [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  Node  root  
[BugLab_Wrong_Literal]^return false;^108^^^^^94^109^return true;^[CLASS] FunctionParamBuilder  [METHOD] addVarArgs [RETURN_TYPE] boolean   JSType type [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  Node  root  
[BugLab_Variable_Misuse]^Node rootewParam = newParameter ( n.getJSType (  )  ) ;^115^^^^^114^118^Node newParam = newParameter ( n.getJSType (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] newParameterFromNode [RETURN_TYPE] void   Node n [VARIABLES] JSTypeRegistry  registry  Node  n  newParam  root  boolean  
[BugLab_Variable_Misuse]^newParam.setVarArgs ( root.isVarArgs (  )  ) ;^116^^^^^114^118^newParam.setVarArgs ( n.isVarArgs (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] newParameterFromNode [RETURN_TYPE] void   Node n [VARIABLES] JSTypeRegistry  registry  Node  n  newParam  root  boolean  
[BugLab_Variable_Misuse]^newParam.setOptionalArg ( root.isOptionalArg (  )  ) ;^117^^^^^114^118^newParam.setOptionalArg ( n.isOptionalArg (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] newParameterFromNode [RETURN_TYPE] void   Node n [VARIABLES] JSTypeRegistry  registry  Node  n  newParam  root  boolean  
[BugLab_Variable_Misuse]^root.addChildToBack ( newParam ) ;^124^^^^^121^126^root.addChildToBack ( paramNode ) ;^[CLASS] FunctionParamBuilder  [METHOD] newParameter [RETURN_TYPE] Node   JSType type [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  Node  n  newParam  paramNode  root  
[BugLab_Variable_Misuse]^return root;^125^^^^^121^126^return paramNode;^[CLASS] FunctionParamBuilder  [METHOD] newParameter [RETURN_TYPE] Node   JSType type [VARIABLES] JSTypeRegistry  registry  JSType  type  boolean  Node  n  newParam  paramNode  root  
[BugLab_Variable_Misuse]^return paramNode;^129^^^^^128^130^return root;^[CLASS] FunctionParamBuilder  [METHOD] build [RETURN_TYPE] Node   [VARIABLES] JSTypeRegistry  registry  Node  n  newParam  paramNode  root  boolean  
[BugLab_Variable_Misuse]^Node lastChild = paramNode.getLastChild (  ) ;^133^^^^^132^136^Node lastChild = root.getLastChild (  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasOptionalOrVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Variable_Misuse]^return root != null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^134^135^^^^132^136^return lastChild != null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasOptionalOrVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Wrong_Operator]^return lastChild != null || ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^134^135^^^^132^136^return lastChild != null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasOptionalOrVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Wrong_Operator]^return lastChild == null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^134^135^^^^132^136^return lastChild != null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasOptionalOrVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Wrong_Operator]^return lastChild != null && ( lastChild.isOptionalArg (  )  && lastChild.isVarArgs (  )  ) ;^134^135^^^^132^136^return lastChild != null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasOptionalOrVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Variable_Misuse]^( root.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^135^^^^^132^136^( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasOptionalOrVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Variable_Misuse]^Node lastChild = paramNode.getLastChild (  ) ;^139^^^^^138^141^Node lastChild = root.getLastChild (  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Variable_Misuse]^return paramNode != null && lastChild.isVarArgs (  ) ;^140^^^^^138^141^return lastChild != null && lastChild.isVarArgs (  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Wrong_Operator]^return lastChild != null || lastChild.isVarArgs (  ) ;^140^^^^^138^141^return lastChild != null && lastChild.isVarArgs (  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Wrong_Operator]^return lastChild == null && lastChild.isVarArgs (  ) ;^140^^^^^138^141^return lastChild != null && lastChild.isVarArgs (  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
[BugLab_Variable_Misuse]^return root != null && lastChild.isVarArgs (  ) ;^140^^^^^138^141^return lastChild != null && lastChild.isVarArgs (  ) ;^[CLASS] FunctionParamBuilder  [METHOD] hasVarArgs [RETURN_TYPE] boolean   [VARIABLES] JSTypeRegistry  registry  Node  lastChild  n  newParam  paramNode  root  boolean  
