[BugLab_Wrong_Literal]^super ( registry, null, null, null, null, null, null, false, false ) ;^211^^^^^210^212^super ( registry, null, null, null, null, null, null, true, true ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   JSTypeRegistry registry [VARIABLES] JSTypeRegistry  registry  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^return type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^119^120^^^^118^121^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^return type.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , primitive ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[BugLab_Argument_Swapping]^return primitive.isObject (  )  ? primitive : type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[BugLab_Argument_Swapping]^if  ( that.isSubtype ( anyObjectType )  )  {^188^^^^^186^195^if  ( anyObjectType.isSubtype ( that )  )  {^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^} else if  ( anyObjectType.isSubtype ( that )  )  {^190^^^^^186^195^} else if  ( that.isSubtype ( anyObjectType )  )  {^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^return TernaryValue.UNKNOWN.isEmptyType (  )  ? TernaryValue.TRUE : that;^226^^^^^225^227^return that.isEmptyType (  )  ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^return TernaryValue.TRUE.isEmptyType (  )  ? that : TernaryValue.UNKNOWN;^226^^^^^225^227^return that.isEmptyType (  )  ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^return that.isEmptyType (  )  ? TernaryValue.UNKNOWN : TernaryValue.TRUE;^226^^^^^225^227^return that.isEmptyType (  )  ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Operator]^return that.isObject (  )  || !that.isNoType (  ) ;^234^^^^^230^236^return that.isObject (  )  && !that.isNoType (  ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] isSubtype [RETURN_TYPE] boolean   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^232^^^^^230^236^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] isSubtype [RETURN_TYPE] boolean   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^240^^^^^239^241^return false;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] isFunctionType [RETURN_TYPE] boolean   [VARIABLES] Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^245^^^^^244^246^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] isNoObjectType [RETURN_TYPE] boolean   [VARIABLES] Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return leastSupertypeVisitor.visit ( that ) ;^250^^^^^249^251^return that.visit ( leastSupertypeVisitor ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] getLeastSupertype [RETURN_TYPE] JSType   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Argument_Swapping]^return greatestSubtypeVisitor.visit ( that ) ;^255^^^^^254^256^return that.visit ( greatestSubtypeVisitor ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] getGreatestSubtype [RETURN_TYPE] JSType   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^270^^^^^269^271^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] matchesNumberContext [RETURN_TYPE] boolean   [VARIABLES] Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^275^^^^^274^276^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] matchesObjectContext [RETURN_TYPE] boolean   [VARIABLES] Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^280^^^^^279^281^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] matchesStringContext [RETURN_TYPE] boolean   [VARIABLES] Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return this >= that;^285^^^^^284^286^return this == that;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] Object  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^309^^^^^307^310^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] hasProperty [RETURN_TYPE] boolean   String propertyName [VARIABLES] String  propertyName  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^316^^^^^313^317^return true;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] defineProperty [RETURN_TYPE] boolean   String propertyName JSType type boolean inferred boolean inExterns [VARIABLES] String  propertyName  JSType  type  boolean  inExterns  inferred  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^332^^^^^331^333^return false;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] isPropertyTypeInferred [RETURN_TYPE] boolean   String propertyName [VARIABLES] String  propertyName  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[BugLab_Variable_Misuse]^return null.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NULL_TYPE ) ;^100^101^^^^99^102^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NULL_TYPE ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return null.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NUMBER_TYPE ) ;^105^106^^^^104^107^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NUMBER_TYPE ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^119^120^^^^118^121^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return this.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^128^129^^^^127^130^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return type.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , primitive ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  long  serialVersionUID  EnumElementType  type  
[BugLab_Argument_Swapping]^return registry.isObject (  )  ? primitive : primitive.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  long  serialVersionUID  EnumElementType  type  
[BugLab_Argument_Swapping]^if  ( that.isSubtype ( anyObjectType )  )  {^188^^^^^186^195^if  ( anyObjectType.isSubtype ( that )  )  {^[CLASS] GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^} else if  ( anyObjectType.isSubtype ( that )  )  {^190^^^^^186^195^} else if  ( that.isSubtype ( anyObjectType )  )  {^[CLASS] GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  long  serialVersionUID  
