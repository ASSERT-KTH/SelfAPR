[buglab_swap_variables]^return type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^119^120^^^^118^121^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ) ;^119^120^^^^118^121^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return registry.isObject (  )  ? primitive : primitive.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^return type.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , primitive ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^return primitive.isObject (  )  ? primitive : type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ) ;^135^136^^^^132^137^registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^if  ( that.isSubtype ( anyObjectType )  )  {^188^^^^^186^195^if  ( anyObjectType.isSubtype ( that )  )  {^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^} else if  ( anyObjectType.isSubtype ( that )  )  {^190^^^^^186^195^} else if  ( that.isSubtype ( anyObjectType )  )  {^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return TernaryValue.UNKNOWN.isEmptyType (  )  ? TernaryValue.TRUE : that;^226^^^^^225^227^return that.isEmptyType (  )  ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return that.isEmptyType (  )  ? TernaryValue.UNKNOWN : TernaryValue.TRUE;^226^^^^^225^227^return that.isEmptyType (  )  ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return leastSupertypeVisitor.visit ( that ) ;^250^^^^^249^251^return that.visit ( leastSupertypeVisitor ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] getLeastSupertype [RETURN_TYPE] JSType   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return greatestSubtypeVisitor.visit ( that ) ;^255^^^^^254^256^return that.visit ( greatestSubtypeVisitor ) ;^[CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  [METHOD] getGreatestSubtype [RETURN_TYPE] JSType   JSType that [VARIABLES] JSType  that  boolean  Visitor  greatestSubtypeVisitor  leastSupertypeVisitor  long  serialVersionUID  
[buglab_swap_variables]^return type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^119^120^^^^118^121^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  long  serialVersionUID  boolean  
[buglab_swap_variables]^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ) ;^119^120^^^^118^121^return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  long  serialVersionUID  boolean  
[buglab_swap_variables]^return registry.isObject (  )  ? primitive : primitive.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^return primitive.isObject (  )  ? primitive : type.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , registry ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ) ;^134^135^136^^^132^137^return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ) ;^135^136^^^^132^137^registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[CLASS] LeastSupertypeVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType type [VARIABLES] JSType  primitive  boolean  long  serialVersionUID  EnumElementType  type  
[buglab_swap_variables]^if  ( that.isSubtype ( anyObjectType )  )  {^188^^^^^186^195^if  ( anyObjectType.isSubtype ( that )  )  {^[CLASS] GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  long  serialVersionUID  
[buglab_swap_variables]^} else if  ( anyObjectType.isSubtype ( that )  )  {^190^^^^^186^195^} else if  ( that.isSubtype ( anyObjectType )  )  {^[CLASS] GreatestSupertypeVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType that [VARIABLES] UnionType  that  JSType  anyObjectType  boolean  long  serialVersionUID  
