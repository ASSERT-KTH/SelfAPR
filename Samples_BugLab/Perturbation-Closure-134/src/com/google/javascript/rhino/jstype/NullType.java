[BugLab_Wrong_Literal]^return false;^60^^^^^59^61^return true;^[CLASS] NullType  [METHOD] isNullType [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^65^^^^^64^66^return true;^[CLASS] NullType  [METHOD] isNullable [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^70^^^^^69^71^return true;^[CLASS] NullType  [METHOD] matchesNumberContext [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return true;^75^^^^^74^76^return false;^[CLASS] NullType  [METHOD] matchesObjectContext [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return false;^80^^^^^79^81^return true;^[CLASS] NullType  [METHOD] matchesStringContext [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return 1.getNativeType ( JSTypeNative.NO_TYPE ) ;^85^^^^^84^86^return registry.getNativeType ( JSTypeNative.NO_TYPE ) ;^[CLASS] NullType  [METHOD] restrictByNotNullOrUndefined [RETURN_TYPE] JSType   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( that.isNullType (  )  && that.isVoidType (  )  )  {^93^^^^^89^100^if  ( that.isNullType (  )  || that.isVoidType (  )  )  {^[CLASS] NullType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] long  serialVersionUID  JSType  that  boolean  
[BugLab_Wrong_Operator]^if  ( that.isUnknownType (  )  && that.isNullable (  )  )  {^96^^^^^89^100^if  ( that.isUnknownType (  )  || that.isNullable (  )  )  {^[CLASS] NullType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] long  serialVersionUID  JSType  that  boolean  
[BugLab_Variable_Misuse]^return 1.caseNullType (  ) ;^114^^^^^113^115^return visitor.caseNullType (  ) ;^[CLASS] NullType  [METHOD] visit [RETURN_TYPE] <T>   Visitor<T> visitor [VARIABLES] Visitor  visitor  long  serialVersionUID  boolean  
