[BugLab_Argument_Swapping]^super ( name, "enum{" + registry + "}", null ) ;^71^^^^^70^73^super ( registry, "enum{" + name + "}", null ) ;^[CLASS] EnumType  [METHOD] <init> [RETURN_TYPE] JSType)   JSTypeRegistry registry String name JSType elementsType [VARIABLES] JSTypeRegistry  registry  Set  elements  JSType  elementsType  boolean  String  name  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Operator]^super ( registry, "enum{"  >  name + "}", null ) ;^71^^^^^70^73^super ( registry, "enum{" + name + "}", null ) ;^[CLASS] EnumType  [METHOD] <init> [RETURN_TYPE] JSType)   JSTypeRegistry registry String name JSType elementsType [VARIABLES] JSTypeRegistry  registry  Set  elements  JSType  elementsType  boolean  String  name  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Argument_Swapping]^this.elementsType = new EnumElementType ( elementsType, registry, name ) ;^72^^^^^70^73^this.elementsType = new EnumElementType ( registry, elementsType, name ) ;^[CLASS] EnumType  [METHOD] <init> [RETURN_TYPE] JSType)   JSTypeRegistry registry String name JSType elementsType [VARIABLES] JSTypeRegistry  registry  Set  elements  JSType  elementsType  boolean  String  name  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Argument_Swapping]^this.elementsType = new EnumElementType ( registry, name, elementsType ) ;^72^^^^^70^73^this.elementsType = new EnumElementType ( registry, elementsType, name ) ;^[CLASS] EnumType  [METHOD] <init> [RETURN_TYPE] JSType)   JSTypeRegistry registry String name JSType elementsType [VARIABLES] JSTypeRegistry  registry  Set  elements  JSType  elementsType  boolean  String  name  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Argument_Swapping]^this.elementsType = new EnumElementType ( name, elementsType, registry ) ;^72^^^^^70^73^this.elementsType = new EnumElementType ( registry, elementsType, name ) ;^[CLASS] EnumType  [METHOD] <init> [RETURN_TYPE] JSType)   JSTypeRegistry registry String name JSType elementsType [VARIABLES] JSTypeRegistry  registry  Set  elements  JSType  elementsType  boolean  String  name  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Literal]^return false;^77^^^^^76^78^return true;^[CLASS] EnumType  [METHOD] isEnumType [RETURN_TYPE] boolean   [VARIABLES] Set  elements  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Variable_Misuse]^return 4.getNativeObjectType ( JSTypeNative.OBJECT_TYPE ) ;^82^^^^^81^83^return registry.getNativeObjectType ( JSTypeNative.OBJECT_TYPE ) ;^[CLASS] EnumType  [METHOD] getImplicitPrototype [RETURN_TYPE] ObjectType   [VARIABLES] Set  elements  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Argument_Swapping]^return defineDeclaredProperty ( elementsType, name, false ) ;^96^^^^^94^97^return defineDeclaredProperty ( name, elementsType, false ) ;^[CLASS] EnumType  [METHOD] defineElement [RETURN_TYPE] boolean   String name [VARIABLES] Set  elements  String  name  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Literal]^return defineDeclaredProperty ( name, elementsType, true ) ;^96^^^^^94^97^return defineDeclaredProperty ( name, elementsType, false ) ;^[CLASS] EnumType  [METHOD] defineElement [RETURN_TYPE] boolean   String name [VARIABLES] Set  elements  String  name  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Operator]^if  ( result == null )  {^109^^^^^107^113^if  ( result != null )  {^[CLASS] EnumType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] Set  elements  JSType  that  TernaryValue  result  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Argument_Swapping]^return this.equals ( TRUE )  ? that : FALSE;^112^^^^^107^113^return this.equals ( that )  ? TRUE : FALSE;^[CLASS] EnumType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] Set  elements  JSType  that  TernaryValue  result  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Argument_Swapping]^return this.equals ( that )  ? FALSE : TRUE;^112^^^^^107^113^return this.equals ( that )  ? TRUE : FALSE;^[CLASS] EnumType  [METHOD] testForEquality [RETURN_TYPE] TernaryValue   JSType that [VARIABLES] Set  elements  JSType  that  TernaryValue  result  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Operator]^return that.equals ( getNativeType ( JSTypeNative.OBJECT_TYPE )  )  && that.equals ( getNativeType ( JSTypeNative.OBJECT_PROTOTYPE )  )  || JSType.isSubtype ( this, that ) ;^117^118^119^^^116^120^return that.equals ( getNativeType ( JSTypeNative.OBJECT_TYPE )  )  || that.equals ( getNativeType ( JSTypeNative.OBJECT_PROTOTYPE )  )  || JSType.isSubtype ( this, that ) ;^[CLASS] EnumType  [METHOD] isSubtype [RETURN_TYPE] boolean   JSType that [VARIABLES] Set  elements  JSType  that  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Literal]^return true;^139^^^^^138^140^return false;^[CLASS] EnumType  [METHOD] matchesNumberContext [RETURN_TYPE] boolean   [VARIABLES] Set  elements  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Literal]^return false;^144^^^^^143^145^return true;^[CLASS] EnumType  [METHOD] matchesStringContext [RETURN_TYPE] boolean   [VARIABLES] Set  elements  boolean  long  serialVersionUID  EnumElementType  elementsType  
[BugLab_Wrong_Literal]^return false;^149^^^^^148^150^return true;^[CLASS] EnumType  [METHOD] matchesObjectContext [RETURN_TYPE] boolean   [VARIABLES] Set  elements  boolean  long  serialVersionUID  EnumElementType  elementsType  
