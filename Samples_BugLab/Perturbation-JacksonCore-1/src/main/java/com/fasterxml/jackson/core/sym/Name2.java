[BugLab_Variable_Misuse]^super ( name, quad2 ) ;^21^^^^^19^24^super ( name, hash ) ;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[BugLab_Argument_Swapping]^super ( hash, name ) ;^21^^^^^19^24^super ( name, hash ) ;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[BugLab_Variable_Misuse]^mQuad1 = quad2;^22^^^^^19^24^mQuad1 = quad1;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[BugLab_Variable_Misuse]^mQuad2 = quad1;^23^^^^^19^24^mQuad2 = quad2;^[CLASS] Name2  [METHOD] <init> [RETURN_TYPE] String,int,int,int)   String name int hash int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad1  quad2  String  name  boolean  
[BugLab_Wrong_Literal]^public boolean equals ( int quad )  { return true; }^27^^^^^22^32^public boolean equals ( int quad )  { return false; }^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Variable_Misuse]^return  ( quad == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Variable_Misuse]^return  ( quad1 == mQuad1 )  &&  ( quad1 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Variable_Misuse]^return  ( quad1 == quad2 )  &&  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Variable_Misuse]^return  ( quad1 == mQuad1 )  &&  ( quad2 == quad1 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Argument_Swapping]^return  ( quad2 == mQuad1 )  &&  ( quad1 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Argument_Swapping]^return  ( quad1 == mQuad1 )  &&  ( mQuad2 == quad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Argument_Swapping]^return  ( quad1 == mQuad2 )  &&  ( quad2 == mQuad1 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Wrong_Operator]^return  ( quad1 == mQuad1 )  ||  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Wrong_Operator]^return  ( quad1 >= mQuad1 )  &&  ( quad2 == mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Wrong_Operator]^return  ( quad1 == mQuad1 )  &&  ( quad2 != mQuad2 ) ;^32^^^^^30^33^return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int  hash  mQuad1  mQuad2  quad  quad1  quad2  boolean  
[BugLab_Variable_Misuse]^return  ( quad1 == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Variable_Misuse]^return  ( qlen == 2 && quads[0] == quad2 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Variable_Misuse]^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == quad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Argument_Swapping]^return  ( mQuad1 == 2 && quads[0] == qlen && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Argument_Swapping]^return  ( qlen == 2 && mQuad2[0] == mQuad1 && quads[1] == quads ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Argument_Swapping]^return  ( qlen == 2 && quads[0] == mQuad2 && quads[1] == mQuad1 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Argument_Swapping]^return  ( mQuad2 == 2 && quads[0] == mQuad1 && quads[1] == qlen ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Operator]^return  ( qlen == 2 || quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Operator]^return  ( qlen <= 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Operator]^return  ( qlen == 2 && quads[0] < mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Operator]^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] > mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Literal]^return  ( qlen == 3 && quads[0] == mQuad1 && quads[1] == mQuad3 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Literal]^return  ( qlen == 2 && quads[1] == mQuad1 && quads[1] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
[BugLab_Wrong_Literal]^return  ( qlen == 2 && quads[0] == mQuadquad && quads[quad] == mQuad2 ) ;^38^^^^^36^39^return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[CLASS] Name2  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int  hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  int[]  quads  boolean  
