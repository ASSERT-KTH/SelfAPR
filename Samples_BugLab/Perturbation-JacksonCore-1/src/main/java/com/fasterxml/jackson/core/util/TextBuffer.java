[buglab_swap_variables]^_allocator.releaseCharBuffer ( BufferRecycler.CharBufferType.TEXT_BUFFER ) ;^146^^^^^135^149^_allocator.releaseCharBuffer ( BufferRecycler.CharBufferType.TEXT_BUFFER, buf ) ;^[CLASS] TextBuffer  [METHOD] releaseBuffers [RETURN_TYPE] void   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^append ( len, start, buf ) ;^210^^^^^194^211^append ( buf, start, len ) ;^[CLASS] TextBuffer  [METHOD] resetWithCopy [RETURN_TYPE] void   char[] buf int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^append (  start, len ) ;^210^^^^^194^211^append ( buf, start, len ) ;^[CLASS] TextBuffer  [METHOD] resetWithCopy [RETURN_TYPE] void   char[] buf int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^append ( buf, len, start ) ;^210^^^^^194^211^append ( buf, start, len ) ;^[CLASS] TextBuffer  [METHOD] resetWithCopy [RETURN_TYPE] void   char[] buf int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^append ( buf,  len ) ;^210^^^^^194^211^append ( buf, start, len ) ;^[CLASS] TextBuffer  [METHOD] resetWithCopy [RETURN_TYPE] void   char[] buf int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^append ( buf, start ) ;^210^^^^^194^211^append ( buf, start, len ) ;^[CLASS] TextBuffer  [METHOD] resetWithCopy [RETURN_TYPE] void   char[] buf int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return needed.allocCharBuffer ( BufferRecycler.CharBufferType.TEXT_BUFFER, _allocator ) ;^236^^^^^233^239^return _allocator.allocCharBuffer ( BufferRecycler.CharBufferType.TEXT_BUFFER, needed ) ;^[CLASS] TextBuffer  [METHOD] findBuffer [RETURN_TYPE] char[]   int needed [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return _allocator.allocCharBuffer ( BufferRecycler.CharBufferType.TEXT_BUFFER ) ;^236^^^^^233^239^return _allocator.allocCharBuffer ( BufferRecycler.CharBufferType.TEXT_BUFFER, needed ) ;^[CLASS] TextBuffer  [METHOD] findBuffer [RETURN_TYPE] char[]   int needed [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return new char[Math.max ( MIN_SEGMENT_LEN, needed ) ];^238^^^^^233^239^return new char[Math.max ( needed, MIN_SEGMENT_LEN ) ];^[CLASS] TextBuffer  [METHOD] findBuffer [RETURN_TYPE] char[]   int needed [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return new char[Math.max (  MIN_SEGMENT_LEN ) ];^238^^^^^233^239^return new char[Math.max ( needed, MIN_SEGMENT_LEN ) ];^[CLASS] TextBuffer  [METHOD] findBuffer [RETURN_TYPE] char[]   int needed [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return new char[Math.max ( needed ) ];^238^^^^^233^239^return new char[Math.max ( needed, MIN_SEGMENT_LEN ) ];^[CLASS] TextBuffer  [METHOD] findBuffer [RETURN_TYPE] char[]   int needed [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return _resultArray;^269^^^^^264^276^return _resultArray.length;^[CLASS] TextBuffer  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return _resultArray.length.length;^269^^^^^264^276^return _resultArray.length;^[CLASS] TextBuffer  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^return _currentSize + _segmentSize;^275^^^^^264^276^return _segmentSize + _currentSize;^[CLASS] TextBuffer  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^if  ( _resultArray >= 0 || _inputStart != null )  {^294^^^^^291^302^if  ( _inputStart >= 0 || _resultArray != null )  {^[CLASS] TextBuffer  [METHOD] hasTextAsCharacters [RETURN_TYPE] boolean   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  
[buglab_swap_variables]^for  ( lennt i = 0, i = _segments.size (  ) ; i < len; ++i )  {^354^^^^^338^363^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0 = _segments.size (  ) ; i < len; ++i )  {^354^^^^^338^363^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^char[] curr = i.get ( _segments ) ;^355^^^^^338^363^char[] curr = _segments.get ( i ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr.length, 0, curr ) ;^356^^^^^338^363^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, curr.length ) ;^356^^^^^338^363^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr, 0 ) ;^356^^^^^338^363^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0, _segments = len.size (  ) ; i < len; ++i )  {^354^^^^^338^363^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^StringBuilder sb = new StringBuilder ( currLen + segLen ) ;^351^^^^^338^363^StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSize, 0, _currentSegment ) ;^360^^^^^338^363^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, _currentSize ) ;^360^^^^^338^363^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSegment, 0 ) ;^360^^^^^338^363^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString =  ( _currentSegment == 0 )  ? "" : new String ( currLen, 0, currLen ) ;^349^^^^^338^363^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0 ) ;^349^^^^^338^363^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString =  ( currLen == 0 )  ? "" : new String (  0, currLen ) ;^349^^^^^338^363^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputStart, _inputBuffer, _inputLen ) ;^342^^^^^334^364^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String (  _inputStart, _inputLen ) ;^342^^^^^334^364^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputBuffer, _inputLen, _inputStart ) ;^342^^^^^334^364^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputBuffer,  _inputLen ) ;^342^^^^^334^364^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputBuffer, _inputStart ) ;^342^^^^^334^364^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( lennt i = 0, i = _segments.size (  ) ; i < len; ++i )  {^354^^^^^348^362^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0 = _segments.size (  ) ; i < len; ++i )  {^354^^^^^348^362^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( _segmentsnt i = 0, len = i.size (  ) ; i < len; ++i )  {^354^^^^^348^362^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^char[] curr = i.get ( _segments ) ;^355^^^^^348^362^char[] curr = _segments.get ( i ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr.length, 0, curr ) ;^356^^^^^348^362^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, curr.length ) ;^356^^^^^348^362^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr, 0 ) ;^356^^^^^348^362^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^StringBuilder sb = new StringBuilder ( currLen + segLen ) ;^351^^^^^348^362^StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSize, 0, _currentSegment ) ;^360^^^^^348^362^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, _currentSize ) ;^360^^^^^348^362^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSegment, 0 ) ;^360^^^^^348^362^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString =  ( _currentSegment == 0 )  ? "" : new String ( currLen, 0, currLen ) ;^349^^^^^334^364^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0 ) ;^349^^^^^334^364^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString =  ( currLen == 0 )  ? "" : new String (  0, currLen ) ;^349^^^^^334^364^_resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( lennt i = 0, i = _segments.size (  ) ; i < len; ++i )  {^354^^^^^334^364^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0 = _segments.size (  ) ; i < len; ++i )  {^354^^^^^334^364^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0, _segments = len.size (  ) ; i < len; ++i )  {^354^^^^^334^364^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^char[] curr = i.get ( _segments ) ;^355^^^^^334^364^char[] curr = _segments.get ( i ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr.length, 0, curr ) ;^356^^^^^334^364^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, curr.length ) ;^356^^^^^334^364^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr, 0 ) ;^356^^^^^334^364^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputLen, _inputStart, _inputBuffer ) ;^342^^^^^334^364^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^StringBuilder sb = new StringBuilder ( currLen + segLen ) ;^351^^^^^334^364^StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, _currentSize ) ;^360^^^^^334^364^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSize, 0, _currentSegment ) ;^360^^^^^334^364^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSegment, 0 ) ;^360^^^^^334^364^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( _segmentsnt i = 0, len = i.size (  ) ; i < len; ++i )  {^354^^^^^338^363^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputLen, _inputStart, _inputBuffer ) ;^342^^^^^327^357^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String (  _inputStart, _inputLen ) ;^342^^^^^327^357^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputBuffer, _inputLen, _inputStart ) ;^342^^^^^327^357^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputBuffer,  _inputLen ) ;^342^^^^^327^357^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputBuffer, _inputStart ) ;^342^^^^^327^357^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^_resultString = new String ( _inputStart, _inputBuffer, _inputLen ) ;^342^^^^^327^357^_resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0, _segments = len.size (  ) ; i < len; ++i )  {^354^^^^^348^362^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( lennt i = 0, i = _segments.size (  ) ; i < len; ++i )  {^354^^^^^339^369^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0 = _segments.size (  ) ; i < len; ++i )  {^354^^^^^339^369^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( _segmentsnt i = 0, len = i.size (  ) ; i < len; ++i )  {^354^^^^^339^369^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^char[] curr = i.get ( _segments ) ;^355^^^^^340^370^char[] curr = _segments.get ( i ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, curr.length ) ;^356^^^^^341^371^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr, 0 ) ;^356^^^^^341^371^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( curr.length, 0, curr ) ;^356^^^^^341^371^sb.append ( curr, 0, curr.length ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^StringBuilder sb = new StringBuilder ( currLen + segLen ) ;^351^^^^^336^366^StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append (  0, _currentSize ) ;^360^^^^^345^375^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSize, 0, _currentSegment ) ;^360^^^^^345^375^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^sb.append ( _currentSegment, 0 ) ;^360^^^^^345^375^sb.append ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( _segmentsnt i = 0, len = i.size (  ) ; i < len; ++i )  {^354^^^^^334^364^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^for  ( int i = 0, _segments = len.size (  ) ; i < len; ++i )  {^354^^^^^339^369^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] contentsAsString [RETURN_TYPE] String   [VARIABLES] boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  
[buglab_swap_variables]^if  (  ( _inputBuffer >= 0 )  &&  ( _inputStart != null )  )  {^390^^^^^382^399^if  (  ( _inputStart >= 0 )  &&  ( _inputBuffer != null )  )  {^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _inputLen, _inputStart, _inputBuffer ) ;^391^^^^^382^399^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal (  _inputStart, _inputLen ) ;^391^^^^^382^399^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _inputBuffer, _inputLen, _inputStart ) ;^391^^^^^382^399^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _inputBuffer,  _inputLen ) ;^391^^^^^382^399^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart ) ;^391^^^^^382^399^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _inputStart, _inputBuffer, _inputLen ) ;^391^^^^^382^399^return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^if  (  ( _currentSegment == 0 )  &&  ( _segmentSize != null )  )  {^394^^^^^382^399^if  (  ( _segmentSize == 0 )  &&  ( _currentSegment != null )  )  {^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _currentSize, 0, _currentSegment ) ;^395^^^^^382^399^return NumberInput.parseBigDecimal ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal (  0, _currentSize ) ;^395^^^^^382^399^return NumberInput.parseBigDecimal ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^return NumberInput.parseBigDecimal ( _currentSegment, 0 ) ;^395^^^^^382^399^return NumberInput.parseBigDecimal ( _currentSegment, 0, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] contentsAsDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^if  ( curr.length >= _currentSize )  {^436^^^^^427^441^if  ( _currentSize >= curr.length )  {^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char c [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  char  c  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result  
[buglab_swap_variables]^int max = _currentSize.length - curr;^454^^^^^439^469^int max = curr.length - _currentSize;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int max = _currentSize - curr.length;^454^^^^^439^469^int max = curr.length - _currentSize;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^if  ( len >= max )  {^456^^^^^441^471^if  ( max >= len )  {^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( _currentSize, start, curr, c, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy (  start, curr, _currentSize, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, len, curr, _currentSize, start ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c,  curr, _currentSize, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, len, _currentSize, curr ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start,  _currentSize, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, curr, len, _currentSize ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, curr, _currentSize ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, _currentSize, curr, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, curr,  len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( curr, start, c, _currentSize, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, _currentSize, curr, start, len ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( len, start, curr, _currentSize, c ) ;^457^^^^^442^472^System.arraycopy ( c, start, curr, _currentSize, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( curr, start, c, _currentSize, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy (  start, curr, _currentSize, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, max, curr, _currentSize, start ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c,  curr, _currentSize, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, _currentSize, curr, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start,  _currentSize, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, curr, max, _currentSize ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, curr, _currentSize ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, curr,  max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( _currentSize, start, curr, c, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, curr, start, _currentSize, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, _currentSize, curr, start, max ) ;^463^^^^^448^478^System.arraycopy ( c, start, curr, _currentSize, max ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( len, _currentSegment.length ) ;^473^^^^^458^488^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( _currentSegment.length ) ;^473^^^^^458^488^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min (  len ) ;^473^^^^^458^488^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( len.length, _currentSegment ) ;^473^^^^^458^488^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( _currentSegment.length.length, len ) ;^473^^^^^458^488^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( _currentSegment, start, c, 0, amount ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy (  start, _currentSegment, 0, amount ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, amount, _currentSegment, 0, start ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c,  _currentSegment, 0, amount ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( amount, start, _currentSegment, 0, c ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start, _currentSegment, 0 ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^System.arraycopy ( c, start,  0, amount ) ;^474^^^^^459^489^System.arraycopy ( c, start, _currentSegment, 0, amount ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   char[] c int start int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int max = _currentSize.length - curr;^492^^^^^477^507^int max = curr.length - _currentSize;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int max = _currentSize - curr.length;^492^^^^^477^507^int max = curr.length - _currentSize;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars (  offset+len, curr, _currentSize ) ;^494^^^^^479^509^str.getChars ( offset, offset+len, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+ curr, _currentSize ) ;^494^^^^^479^509^str.getChars ( offset, offset+len, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( curr, offset+len, offset, _currentSize ) ;^494^^^^^479^509^str.getChars ( offset, offset+len, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+len,  _currentSize ) ;^494^^^^^479^509^str.getChars ( offset, offset+len, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( _currentSize, offset+len, curr, offset ) ;^494^^^^^479^509^str.getChars ( offset, offset+len, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+len, curr ) ;^494^^^^^479^509^str.getChars ( offset, offset+len, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( curr, offset+max, offset, _currentSize ) ;^500^^^^^485^515^str.getChars ( offset, offset+max, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars (  offset+max, curr, _currentSize ) ;^500^^^^^485^515^str.getChars ( offset, offset+max, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+ curr, _currentSize ) ;^500^^^^^485^515^str.getChars ( offset, offset+max, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+max,  _currentSize ) ;^500^^^^^485^515^str.getChars ( offset, offset+max, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+max, curr ) ;^500^^^^^485^515^str.getChars ( offset, offset+max, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+max, _currentSize, curr ) ;^500^^^^^485^515^str.getChars ( offset, offset+max, curr, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( len, _currentSegment.length ) ;^510^^^^^495^525^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( _currentSegment.length ) ;^510^^^^^495^525^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( _currentSegment, len ) ;^510^^^^^495^525^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min (  len ) ;^510^^^^^495^525^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int amount = Math.min ( len.length, _currentSegment ) ;^510^^^^^495^525^int amount = Math.min ( _currentSegment.length, len ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars (  offset+amount, _currentSegment, 0 ) ;^511^^^^^496^526^str.getChars ( offset, offset+amount, _currentSegment, 0 ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+ _currentSegment, 0 ) ;^511^^^^^496^526^str.getChars ( offset, offset+amount, _currentSegment, 0 ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( _currentSegment, offset+amount, offset, 0 ) ;^511^^^^^496^526^str.getChars ( offset, offset+amount, _currentSegment, 0 ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^str.getChars ( offset, offset+amount,  0 ) ;^511^^^^^496^526^str.getChars ( offset, offset+amount, _currentSegment, 0 ) ;^[CLASS] TextBuffer  [METHOD] append [RETURN_TYPE] void   String str int offset int len [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^} else if  ( curr >= _currentSize.length )  {^536^^^^^524^542^} else if  ( _currentSize >= curr.length )  {^[CLASS] TextBuffer  [METHOD] getCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^} else if  ( curr.length >= _currentSize )  {^536^^^^^524^542^} else if  ( _currentSize >= curr.length )  {^[CLASS] TextBuffer  [METHOD] getCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^} else if  ( _currentSize >= curr )  {^536^^^^^524^542^} else if  ( _currentSize >= curr.length )  {^[CLASS] TextBuffer  [METHOD] getCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^} else if  ( _currentSize >= curr.length.length )  {^536^^^^^524^542^} else if  ( _currentSize >= curr.length )  {^[CLASS] TextBuffer  [METHOD] getCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int oldLen = _currentSegment;^581^^^^^574^589^int oldLen = _currentSegment.length;^[CLASS] TextBuffer  [METHOD] finishCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int oldLen = _currentSegment.length.length;^581^^^^^574^589^int oldLen = _currentSegment.length;^[CLASS] TextBuffer  [METHOD] finishCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int newLen = Math.min ( MAX_SEGMENT_LEN +  ( oldLen >> 1 ) , oldLen ) ;^584^^^^^574^589^int newLen = Math.min ( oldLen +  ( oldLen >> 1 ) , MAX_SEGMENT_LEN ) ;^[CLASS] TextBuffer  [METHOD] finishCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int newLen = Math.min ( oldLen +  ( oldLen >> 1 )  ) ;^584^^^^^574^589^int newLen = Math.min ( oldLen +  ( oldLen >> 1 ) , MAX_SEGMENT_LEN ) ;^[CLASS] TextBuffer  [METHOD] finishCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^final int len = curr.length.length;^600^^^^^596^605^final int len = curr.length;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^final int len = curr;^600^^^^^596^605^final int len = curr.length;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int newLen =  ( MAX_SEGMENT_LEN == len )  ? ( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^602^603^^^^596^605^int newLen =  ( len == MAX_SEGMENT_LEN )  ? ( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int newLen =  ( len == MAX_SEGMENT_LEN )  ? ( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN +  ( len >> 1 )  ) ;^602^603^^^^596^605^int newLen =  ( len == MAX_SEGMENT_LEN )  ? ( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^int newLen =  ( len == MAX_SEGMENT_LEN )  ? ( MAX_SEGMENT_LEN + 1 )  : Math.min (  len +  ( len >> 1 )  ) ;^602^603^^^^596^605^int newLen =  ( len == MAX_SEGMENT_LEN )  ? ( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^( len + 1 )  : Math.min ( MAX_SEGMENT_LEN, MAX_SEGMENT_LEN +  ( len >> 1 )  ) ;^603^^^^^596^605^( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN +  ( len >> 1 )  ) ;^603^^^^^596^605^( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^( MAX_SEGMENT_LEN + 1 )  : Math.min (  len +  ( len >> 1 )  ) ;^603^^^^^596^605^( MAX_SEGMENT_LEN + 1 )  : Math.min ( MAX_SEGMENT_LEN, len +  ( len >> 1 )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^return  ( _currentSegment = Arrays.copyOf ( newLen, curr )  ) ;^604^^^^^596^605^return  ( _currentSegment = Arrays.copyOf ( curr, newLen )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^return  ( _currentSegment = Arrays.copyOf (  newLen )  ) ;^604^^^^^596^605^return  ( _currentSegment = Arrays.copyOf ( curr, newLen )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^return  ( _currentSegment = Arrays.copyOf ( curr )  ) ;^604^^^^^596^605^return  ( _currentSegment = Arrays.copyOf ( curr, newLen )  ) ;^[CLASS] TextBuffer  [METHOD] expandCurrentSegment [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  newLen  offset  oldLen  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result  
[buglab_swap_variables]^if  ( _currentSegment == null || _currentSegment.length > needed )  {^644^^^^^633^652^if  ( _currentSegment == null || needed > _currentSegment.length )  {^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^if  ( needed == null || _currentSegment > _currentSegment.length )  {^644^^^^^633^652^if  ( _currentSegment == null || needed > _currentSegment.length )  {^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( _currentSegment, start, inputBuf, 0, sharedLen ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy (  start, _currentSegment, 0, sharedLen ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( start, inputBuf, _currentSegment, 0, sharedLen ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( inputBuf,  _currentSegment, 0, sharedLen ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( sharedLen, start, _currentSegment, 0, inputBuf ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( inputBuf, start, _currentSegment, 0 ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( inputBuf, start,  0, sharedLen ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( inputBuf, sharedLen, _currentSegment, 0, start ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( inputBuf, start, sharedLen, 0, _currentSegment ) ;^648^^^^^633^652^System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[CLASS] TextBuffer  [METHOD] unshare [RETURN_TYPE] void   int needExtra [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_segmentSize += curr.length.length;^667^^^^^658^676^_segmentSize += curr.length;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_segmentSize += curr;^667^^^^^658^676^_segmentSize += curr.length;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^int oldLen = curr.length.length;^668^^^^^658^676^int oldLen = curr.length;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^int oldLen = curr;^668^^^^^658^676^int oldLen = curr.length;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^if  ( minNewSegmentSize < sizeAddition )  {^671^^^^^658^676^if  ( sizeAddition < minNewSegmentSize )  {^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_currentSegment = _charArray ( Math.min ( oldLen, MAX_SEGMENT_LEN + sizeAddition )  ) ;^675^^^^^658^676^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN + sizeAddition )  ) ;^675^^^^^658^676^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, sizeAddition + oldLen )  ) ;^675^^^^^658^676^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_currentSegment = _charArray ( Math.min ( sizeAddition, oldLen + MAX_SEGMENT_LEN )  ) ;^675^^^^^658^676^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^_currentSegment = _charArray ( Math.min (  oldLen + sizeAddition )  ) ;^675^^^^^658^676^_currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[CLASS] TextBuffer  [METHOD] expand [RETURN_TYPE] void   int minNewSegmentSize [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^return Arrays.copyOf ( len, _inputBuffer ) ;^691^^^^^676^706^return Arrays.copyOf ( _inputBuffer, len ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^return Arrays.copyOf ( _inputBuffer ) ;^691^^^^^676^706^return Arrays.copyOf ( _inputBuffer, len ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^return Arrays.copyOf (  len ) ;^691^^^^^676^706^return Arrays.copyOf ( _inputBuffer, len ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^return Arrays.copyOfRange ( _inputBuffer,  start+len ) ;^693^^^^^678^708^return Arrays.copyOfRange ( _inputBuffer, start, start+len ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^return Arrays.copyOfRange (  start, start+len ) ;^693^^^^^678^708^return Arrays.copyOfRange ( _inputBuffer, start, start+len ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^return Arrays.copyOfRange ( start, _inputBuffer, start+len ) ;^693^^^^^678^708^return Arrays.copyOfRange ( _inputBuffer, start, start+len ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^for  ( int i = 0 = _segments.size (  ) ; i < len; ++i )  {^703^^^^^688^718^for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^char[] curr =  ( char[] )  i.get ( _segments ) ;^704^^^^^689^719^char[] curr =  ( char[] )  _segments.get ( i ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^int curr.lengthLen = curr;^705^^^^^690^720^int currLen = curr.length;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( result, 0, curr, offset, currLen ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy (  0, result, offset, currLen ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( curr, 0,  offset, currLen ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( curr, 0, result, currLen, offset ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( curr, 0, result,  currLen ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( curr, 0, result, offset ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( currLen, 0, result, offset, curr ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( curr, 0, offset, result, currLen ) ;^706^^^^^691^721^System.arraycopy ( curr, 0, result, offset, currLen ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( result, 0, _currentSegment, offset, _currentSize ) ;^710^^^^^695^725^System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( _currentSegment, 0,  offset, _currentSize ) ;^710^^^^^695^725^System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( _currentSegment, 0, result, _currentSize, offset ) ;^710^^^^^695^725^System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( _currentSegment, 0, result,  _currentSize ) ;^710^^^^^695^725^System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy (  0, result, offset, _currentSize ) ;^710^^^^^695^725^System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
[buglab_swap_variables]^System.arraycopy ( _currentSegment, 0, result, offset ) ;^710^^^^^695^725^System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[CLASS] TextBuffer  [METHOD] buildResultArray [RETURN_TYPE] char[]   [VARIABLES] boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  str  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result  
