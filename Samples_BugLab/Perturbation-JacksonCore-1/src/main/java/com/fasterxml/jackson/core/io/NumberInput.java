[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^48^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^44^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^46^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^42^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^40^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^38^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^36^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^num =  ( digitChars * 10 )  +  ( num[offset] - '0' ) ;^34^^^^^29^58^num =  ( num * 10 )  +  ( digitChars[offset] - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  boolean  long  L_BILLION  int  len  num  offset  char[]  digitChars  
[buglab_swap_variables]^if  ( length < offset )  {^96^^^^^81^111^if  ( offset < length )  {^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   String str [VARIABLES] char  c  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  negative  long  L_BILLION  int  length  num  offset  
[buglab_swap_variables]^num =  ( c * 10 )  +  ( num - '0' ) ;^109^^^^^94^124^num =  ( num * 10 )  +  ( c - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   String str [VARIABLES] char  c  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  negative  long  L_BILLION  int  length  num  offset  
[buglab_swap_variables]^num =  ( c * 10 )  +  ( num - '0' ) ;^101^^^^^86^116^num =  ( num * 10 )  +  ( c - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   String str [VARIABLES] char  c  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  negative  long  L_BILLION  int  length  num  offset  
[buglab_swap_variables]^if  ( length < offset )  {^103^^^^^88^118^if  ( offset < length )  {^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   String str [VARIABLES] char  c  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  negative  long  L_BILLION  int  length  num  offset  
[buglab_swap_variables]^num =  ( c * 10 )  +  ( num - '0' ) ;^95^^^^^80^110^num =  ( num * 10 )  +  ( c - '0' ) ;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   String str [VARIABLES] char  c  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  negative  long  L_BILLION  int  length  num  offset  
[buglab_swap_variables]^return num ? -num : negative;^114^^^^^99^129^return negative ? -num : num;^[CLASS] NumberInput  [METHOD] parseInt [RETURN_TYPE] int   String str [VARIABLES] char  c  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  negative  long  L_BILLION  int  length  num  offset  
[buglab_swap_variables]^long val = parseInt ( offset, digitChars, len1 )  * L_BILLION;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt (  offset, len1 )  * L_BILLION;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt ( digitChars, len1, offset )  * L_BILLION;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt ( digitChars,  len1 )  * L_BILLION;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt ( digitChars, offset, L_BILLION )  * len1;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt ( digitChars, offset )  * L_BILLION;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt ( digitChars, L_BILLION, len1 )  * offset;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^long val = parseInt ( len1, offset, digitChars )  * L_BILLION;^121^^^^^117^123^long val = parseInt ( digitChars, offset, len1 )  * L_BILLION;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^return digitChars +  ( long )  parseInt ( val, offset+len1, 9 ) ;^122^^^^^117^123^return val +  ( long )  parseInt ( digitChars, offset+len1, 9 ) ;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^return val +  ( long )  parseInt (  offset+len1, 9 ) ;^122^^^^^117^123^return val +  ( long )  parseInt ( digitChars, offset+len1, 9 ) ;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^return val +  ( long )  parseInt ( digitChars+len1, 9 ) ;^122^^^^^117^123^return val +  ( long )  parseInt ( digitChars, offset+len1, 9 ) ;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^return val +  ( long )  parseInt ( digitChars, offset+ 9 ) ;^122^^^^^117^123^return val +  ( long )  parseInt ( digitChars, offset+len1, 9 ) ;^[CLASS] NumberInput  [METHOD] parseLong [RETURN_TYPE] long   char[] digitChars int offset int len [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  str  boolean  long  L_BILLION  val  int  len  len1  offset  char[]  digitChars  
[buglab_swap_variables]^String cmpStr = MIN_LONG_STR_NO_SIGN ? negative : MAX_LONG_STR;^150^^^^^147^162^String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   char[] digitChars int offset int len boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  str  boolean  negative  long  L_BILLION  val  int  cmpLen  diff  i  len  offset  char[]  digitChars  
[buglab_swap_variables]^String cmpStr = negative ? MAX_LONG_STR : MIN_LONG_STR_NO_SIGN;^150^^^^^147^162^String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   char[] digitChars int offset int len boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  str  boolean  negative  long  L_BILLION  val  int  cmpLen  diff  i  len  offset  char[]  digitChars  
[buglab_swap_variables]^if  ( cmpLen < len )  return true;^152^^^^^147^162^if  ( len < cmpLen )  return true;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   char[] digitChars int offset int len boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  str  boolean  negative  long  L_BILLION  val  int  cmpLen  diff  i  len  offset  char[]  digitChars  
[buglab_swap_variables]^if  ( cmpLen > len )  return false;^153^^^^^147^162^if  ( len > cmpLen )  return false;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   char[] digitChars int offset int len boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  str  boolean  negative  long  L_BILLION  val  int  cmpLen  diff  i  len  offset  char[]  digitChars  
[buglab_swap_variables]^int diff = cmpStr[offset+i] - digitChars.charAt ( i ) ;^156^^^^^147^162^int diff = digitChars[offset+i] - cmpStr.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   char[] digitChars int offset int len boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  str  boolean  negative  long  L_BILLION  val  int  cmpLen  diff  i  len  offset  char[]  digitChars  
[buglab_swap_variables]^int diff = digitChars[offset+i] - i.charAt ( cmpStr ) ;^156^^^^^147^162^int diff = digitChars[offset+i] - cmpStr.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   char[] digitChars int offset int len boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  str  boolean  negative  long  L_BILLION  val  int  cmpLen  diff  i  len  offset  char[]  digitChars  
[buglab_swap_variables]^String cmpStr = MIN_LONG_STR_NO_SIGN ? negative : MAX_LONG_STR;^173^^^^^171^187^String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^String cmpStr = negative ? MAX_LONG_STR : MIN_LONG_STR_NO_SIGN;^173^^^^^171^187^String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^if  ( cmpLen < actualLen )  return true;^176^^^^^171^187^if  ( actualLen < cmpLen )  return true;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^if  ( cmpLen > actualLen )  return false;^177^^^^^171^187^if  ( actualLen > cmpLen )  return false;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^int diff = cmpStr.charAt ( i )  - numberStr.charAt ( i ) ;^181^^^^^171^187^int diff = numberStr.charAt ( i )  - cmpStr.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^int diff = i.charAt ( numberStr )  - cmpStr.charAt ( i ) ;^181^^^^^171^187^int diff = numberStr.charAt ( i )  - cmpStr.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^int diff = numberStr.charAt ( cmpStr )  - i.charAt ( i ) ;^181^^^^^171^187^int diff = numberStr.charAt ( i )  - cmpStr.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] inLongRange [RETURN_TYPE] boolean   String numberStr boolean negative [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  numberStr  str  boolean  negative  long  L_BILLION  val  int  actualLen  cmpLen  diff  i  
[buglab_swap_variables]^if  ( len < i )  {^201^^^^^186^216^if  ( i < len )  {^[CLASS] NumberInput  [METHOD] parseAsInt [RETURN_TYPE] int   String input int defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  val  int  defaultValue  i  len  
[buglab_swap_variables]^for  ( ; len < i; ++i )  {^210^^^^^195^225^for  ( ; i < len; ++i )  {^[CLASS] NumberInput  [METHOD] parseAsInt [RETURN_TYPE] int   String input int defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  val  int  defaultValue  i  len  
[buglab_swap_variables]^char c = i.charAt ( input ) ;^211^^^^^196^226^char c = input.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] parseAsInt [RETURN_TYPE] int   String input int defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  val  int  defaultValue  i  len  
[buglab_swap_variables]^char c = inputnput.charAt ( i ) ;^211^^^^^196^226^char c = input.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] parseAsInt [RETURN_TYPE] int   String input int defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  val  int  defaultValue  i  len  
[buglab_swap_variables]^if  ( len < i )  {^239^^^^^224^254^if  ( i < len )  {^[CLASS] NumberInput  [METHOD] parseAsLong [RETURN_TYPE] long   String input long defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  i  len  
[buglab_swap_variables]^char c = i.charAt ( input ) ;^249^^^^^234^264^char c = input.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] parseAsLong [RETURN_TYPE] long   String input long defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  i  len  
[buglab_swap_variables]^char c = inputnput.charAt ( i ) ;^249^^^^^234^264^char c = input.charAt ( i ) ;^[CLASS] NumberInput  [METHOD] parseAsLong [RETURN_TYPE] long   String input long defaultValue [VARIABLES] char  c  NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  i  len  
[buglab_swap_variables]^if  ( numStr.equals ( NASTY_SMALL_DOUBLE )  )  {^287^^^^^281^291^if  ( NASTY_SMALL_DOUBLE.equals ( numStr )  )  {^[CLASS] NumberInput  [METHOD] parseDouble [RETURN_TYPE] double   String numStr [VARIABLES] long  L_BILLION  defaultValue  val  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  
[buglab_swap_variables]^return parseBigDecimal ( buffer.length, 0, buffer ) ;^303^^^^^302^304^return parseBigDecimal ( buffer, 0, buffer.length ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  char[]  buffer  
[buglab_swap_variables]^return parseBigDecimal (  0, buffer.length ) ;^303^^^^^302^304^return parseBigDecimal ( buffer, 0, buffer.length ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  char[]  buffer  
[buglab_swap_variables]^return parseBigDecimal ( buffer, 0 ) ;^303^^^^^302^304^return parseBigDecimal ( buffer, 0, buffer.length ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer [VARIABLES] String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  char[]  buffer  
[buglab_swap_variables]^return new BigDecimal ( len, offset, buffer ) ;^310^^^^^306^314^return new BigDecimal ( buffer, offset, len ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^return new BigDecimal (  offset, len ) ;^310^^^^^306^314^return new BigDecimal ( buffer, offset, len ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^return new BigDecimal ( buffer, len, offset ) ;^310^^^^^306^314^return new BigDecimal ( buffer, offset, len ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^return new BigDecimal ( buffer,  len ) ;^310^^^^^306^314^return new BigDecimal ( buffer, offset, len ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^return new BigDecimal ( buffer, offset ) ;^310^^^^^306^314^return new BigDecimal ( buffer, offset, len ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^return new BigDecimal ( offset, buffer, len ) ;^310^^^^^306^314^return new BigDecimal ( buffer, offset, len ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^throw _badBigDecimal ( new String ( offset, buffer, len )  ) ;^312^^^^^306^314^throw _badBigDecimal ( new String ( buffer, offset, len )  ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^throw _badBigDecimal ( new String (  offset, len )  ) ;^312^^^^^306^314^throw _badBigDecimal ( new String ( buffer, offset, len )  ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^throw _badBigDecimal ( new String ( buffer, len, offset )  ) ;^312^^^^^306^314^throw _badBigDecimal ( new String ( buffer, offset, len )  ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^throw _badBigDecimal ( new String ( buffer,  len )  ) ;^312^^^^^306^314^throw _badBigDecimal ( new String ( buffer, offset, len )  ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^throw _badBigDecimal ( new String ( buffer, offset )  ) ;^312^^^^^306^314^throw _badBigDecimal ( new String ( buffer, offset, len )  ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
[buglab_swap_variables]^throw _badBigDecimal ( new String ( len, offset, buffer )  ) ;^312^^^^^306^314^throw _badBigDecimal ( new String ( buffer, offset, len )  ) ;^[CLASS] NumberInput  [METHOD] parseBigDecimal [RETURN_TYPE] BigDecimal   char[] buffer int offset int len [VARIABLES] NumberFormatException  e  String  MAX_LONG_STR  MIN_LONG_STR_NO_SIGN  NASTY_SMALL_DOUBLE  cmpStr  input  numStr  numberStr  str  boolean  long  L_BILLION  defaultValue  val  int  len  offset  char[]  buffer  
