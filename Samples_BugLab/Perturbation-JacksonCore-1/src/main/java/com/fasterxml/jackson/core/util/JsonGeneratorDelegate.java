[buglab_swap_variables]^return schema.canUseSchema ( delegate ) ;^67^^^^^66^68^return delegate.canUseSchema ( schema ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] canUseSchema [RETURN_TYPE] boolean   FormatSchema schema [VARIABLES] JsonGenerator  d  delegate  FormatSchema  schema  boolean  
[buglab_swap_variables]^return f.isEnabled ( delegate ) ;^105^^^^^104^106^return delegate.isEnabled ( f ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] isEnabled [RETURN_TYPE] boolean   Feature f [VARIABLES] JsonGenerator  d  delegate  Feature  f  boolean  
[buglab_swap_variables]^delegate.writeString ( offset, text, len ) ;^227^^^^^226^228^delegate.writeString ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeString [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeString (  offset, len ) ;^227^^^^^226^228^delegate.writeString ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeString [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeString ( text, len, offset ) ;^227^^^^^226^228^delegate.writeString ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeString [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeString ( text,  len ) ;^227^^^^^226^228^delegate.writeString ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeString [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeString ( text, offset ) ;^227^^^^^226^228^delegate.writeString ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeString [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRawUTF8String ( length, offset, text ) ;^239^^^^^236^240^delegate.writeRawUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeRawUTF8String (  offset, length ) ;^239^^^^^236^240^delegate.writeRawUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeRawUTF8String ( text, length, offset ) ;^239^^^^^236^240^delegate.writeRawUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeRawUTF8String ( text,  length ) ;^239^^^^^236^240^delegate.writeRawUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeRawUTF8String ( text, offset ) ;^239^^^^^236^240^delegate.writeRawUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeUTF8String ( offset, text, length ) ;^246^^^^^243^247^delegate.writeUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeUTF8String (  offset, length ) ;^246^^^^^243^247^delegate.writeUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeUTF8String ( text, length, offset ) ;^246^^^^^243^247^delegate.writeUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeUTF8String ( text,  length ) ;^246^^^^^243^247^delegate.writeUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeUTF8String ( text, offset ) ;^246^^^^^243^247^delegate.writeUTF8String ( text, offset, length ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeUTF8String [RETURN_TYPE] void   byte[] text int offset int length [VARIABLES] byte[]  text  JsonGenerator  d  delegate  boolean  int  length  offset  
[buglab_swap_variables]^delegate.writeRaw (  offset, len ) ;^262^^^^^261^263^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRaw ( text,  len ) ;^262^^^^^261^263^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRaw ( text, len, offset ) ;^262^^^^^261^263^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRaw ( text, offset ) ;^262^^^^^261^263^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRaw ( offset, text, len ) ;^273^^^^^272^274^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRaw (  offset, len ) ;^273^^^^^272^274^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRaw ( text, len, offset ) ;^273^^^^^272^274^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRaw ( text,  len ) ;^273^^^^^272^274^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRaw ( text, offset ) ;^273^^^^^272^274^delegate.writeRaw ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRaw [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRawValue ( len, offset, text ) ;^288^^^^^287^289^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRawValue (  offset, len ) ;^288^^^^^287^289^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRawValue ( offset, text, len ) ;^288^^^^^287^289^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRawValue ( text,  len ) ;^288^^^^^287^289^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRawValue ( text, len, offset ) ;^288^^^^^287^289^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRawValue ( text, offset ) ;^288^^^^^287^289^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   String text int offset int len [VARIABLES] JsonGenerator  d  delegate  String  text  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeRawValue (  offset, len ) ;^293^^^^^292^294^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRawValue ( text, len, offset ) ;^293^^^^^292^294^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRawValue ( text,  len ) ;^293^^^^^292^294^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeRawValue ( text, offset ) ;^293^^^^^292^294^delegate.writeRawValue ( text, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeRawValue [RETURN_TYPE] void   char[] text int offset int len [VARIABLES] JsonGenerator  d  delegate  boolean  int  len  offset  char[]  text  
[buglab_swap_variables]^delegate.writeBinary (  data, offset, len ) ;^300^^^^^297^301^delegate.writeBinary ( b64variant, data, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] void   Base64Variant b64variant byte[] data int offset int len [VARIABLES] byte[]  data  JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeBinary ( b64variant,  offset, len ) ;^300^^^^^297^301^delegate.writeBinary ( b64variant, data, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] void   Base64Variant b64variant byte[] data int offset int len [VARIABLES] byte[]  data  JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeBinary ( b64variant, data,  len ) ;^300^^^^^297^301^delegate.writeBinary ( b64variant, data, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] void   Base64Variant b64variant byte[] data int offset int len [VARIABLES] byte[]  data  JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeBinary ( b64variant, data, len, offset ) ;^300^^^^^297^301^delegate.writeBinary ( b64variant, data, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] void   Base64Variant b64variant byte[] data int offset int len [VARIABLES] byte[]  data  JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  int  len  offset  
[buglab_swap_variables]^delegate.writeBinary ( b64variant, data, offset ) ;^300^^^^^297^301^delegate.writeBinary ( b64variant, data, offset, len ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] void   Base64Variant b64variant byte[] data int offset int len [VARIABLES] byte[]  data  JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  int  len  offset  
[buglab_swap_variables]^return delegate.writeBinary ( data, b64variant, dataLength ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return delegate.writeBinary (  data, dataLength ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return data.writeBinary ( b64variant, delegate, dataLength ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return delegate.writeBinary ( b64variant,  dataLength ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return delegate.writeBinary ( b64variant, dataLength, data ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return delegate.writeBinary ( b64variant, data ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return dataLength.writeBinary ( b64variant, data, delegate ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
[buglab_swap_variables]^return b64variant.writeBinary ( delegate, data, dataLength ) ;^306^^^^^304^307^return delegate.writeBinary ( b64variant, data, dataLength ) ;^[CLASS] JsonGeneratorDelegate  [METHOD] writeBinary [RETURN_TYPE] int   Base64Variant b64variant InputStream data int dataLength [VARIABLES] JsonGenerator  d  delegate  Base64Variant  b64variant  boolean  InputStream  data  int  dataLength  
