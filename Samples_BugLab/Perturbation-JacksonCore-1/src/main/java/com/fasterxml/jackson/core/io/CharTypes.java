[BugLab_Wrong_Literal]^final static int[] sHexValues = new int[];^157^^^^^152^162^final static int[] sHexValues = new int[128];^[CLASS] CharTypes   [VARIABLES] 
[BugLab_Variable_Misuse]^public static int[] getInputCodeLatin1 (  )  { return sInputCodesUtf8JsNames; }^169^^^^^164^174^public static int[] getInputCodeLatin1 (  )  { return sInputCodes; }^[CLASS] CharTypes  [METHOD] getInputCodeLatin1 [RETURN_TYPE] int[]   [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^public static int[] getInputCodeLatin1JsNames (  )  { return sOutputEscapes128; }^172^^^^^167^177^public static int[] getInputCodeLatin1JsNames (  )  { return sInputCodesJsNames; }^[CLASS] CharTypes  [METHOD] getInputCodeLatin1JsNames [RETURN_TYPE] int[]   [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^public static int[] getInputCodeUtf8JsNames (  )  { return sInputCodesUtf8; }^173^^^^^168^178^public static int[] getInputCodeUtf8JsNames (  )  { return sInputCodesUtf8JsNames; }^[CLASS] CharTypes  [METHOD] getInputCodeUtf8JsNames [RETURN_TYPE] int[]   [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^public static int[] getInputCodeComment (  )  { return sOutputEscapes128; }^175^^^^^170^180^public static int[] getInputCodeComment (  )  { return sInputCodesComment; }^[CLASS] CharTypes  [METHOD] getInputCodeComment [RETURN_TYPE] int[]   [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^public static int[] get7BitOutputEscapes (  )  { return sInputCodesUtf8JsNames; }^184^^^^^179^189^public static int[] get7BitOutputEscapes (  )  { return sOutputEscapes128; }^[CLASS] CharTypes  [METHOD] get7BitOutputEscapes [RETURN_TYPE] int[]   [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^return  ( sHexValues > 127 )  ? -1 : ch[ch];^188^^^^^186^189^return  ( ch > 127 )  ? -1 : sHexValues[ch];^[CLASS] CharTypes  [METHOD] charToHex [RETURN_TYPE] int   int ch [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  int  ch  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^return  ( ch == 127 )  ? -1 : sHexValues[ch];^188^^^^^186^189^return  ( ch > 127 )  ? -1 : sHexValues[ch];^[CLASS] CharTypes  [METHOD] charToHex [RETURN_TYPE] int   int ch [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  int  ch  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^return  ( ch > ch )  ? -1 : sHexValues[ch];^188^^^^^186^189^return  ( ch > 127 )  ? -1 : sHexValues[ch];^[CLASS] CharTypes  [METHOD] charToHex [RETURN_TYPE] int   int ch [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  int  ch  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^return  ( ch > ch27 )  ? -ch : sHexValues[ch];^188^^^^^186^189^return  ( ch > 127 )  ? -1 : sHexValues[ch];^[CLASS] CharTypes  [METHOD] charToHex [RETURN_TYPE] int   int ch [VARIABLES] byte[]  HEX_BYTES  int[]  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  boolean  int  ch  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^final int[] escCodes = sInputCodesUtf8JsNames;^193^^^^^192^222^final int[] escCodes = sOutputEscapes128;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^int escLen = sOutputEscapes128.length;^194^^^^^192^222^int escLen = escCodes.length;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^int escLen = value;^194^^^^^192^222^int escLen = escCodes.length;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^int escLen = escCodes.length.length;^194^^^^^192^222^int escLen = escCodes.length;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^int escLen = escCodes;^194^^^^^192^222^int escLen = escCodes.length;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^if  ( c >= len || escCodes[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^if  ( c >= escLen || sOutputEscapes128[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^if  ( escCodes >= escLen || c[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^if  ( escLen >= c || escCodes[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^if  ( c >= escLen && escCodes[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^if  ( c > escLen || escCodes[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^if  ( c >= escLen || escCodes[c] != 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^if  ( c >= escLen || escCodes[c] == len )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^if  ( len < 0 )  {^203^^^^^192^222^if  ( escCode < 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^if  ( escCode > 0 )  {^203^^^^^192^222^if  ( escCode < 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^if  ( escCode < 1 )  {^203^^^^^192^222^if  ( escCode < 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^sb.append ( HEX_CHARS[len >> 4] ) ;^216^^^^^192^222^sb.append ( HEX_CHARS[value >> 4] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value   instanceof   4] ) ;^216^^^^^192^222^sb.append ( HEX_CHARS[value >> 4] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^sb.append ( HEX_CHARS[value >> 3] ) ;^216^^^^^192^222^sb.append ( HEX_CHARS[value >> 4] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^sb.append ( HEX_CHARS[len & 0xF] ) ;^217^^^^^192^222^sb.append ( HEX_CHARS[value & 0xF] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value  >>  0xF] ) ;^217^^^^^192^222^sb.append ( HEX_CHARS[value & 0xF] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^for  ( valuent i = 0, len = content.length (  ) ; i < len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^for  ( int i = 0, value = content.length (  ) ; i < len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^for  ( int i = 0, c = lenontent.length (  ) ; i < len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^for  ( int i = 0, len = content.length (  ) ; i <= len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^for  ( int i = escCode, len = content.length (  ) ; i < len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^for  ( int i = -1, len = content.length (  ) ; i < len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^if  ( c >= value || escCodes[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^if  ( c >= escCodes || escLen[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^if  ( c == escLen || escCodes[c] == 0 )  {^197^^^^^192^222^if  ( c >= escLen || escCodes[c] == 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^if  ( escCode <= 0 )  {^203^^^^^192^222^if  ( escCode < 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^if  ( escCode < escLen )  {^203^^^^^192^222^if  ( escCode < 0 )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value  !=  4] ) ;^216^^^^^192^222^sb.append ( HEX_CHARS[value >> 4] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^sb.append ( HEX_CHARS[i & 0xF] ) ;^217^^^^^192^222^sb.append ( HEX_CHARS[value & 0xF] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value  <  0xF] ) ;^217^^^^^192^222^sb.append ( HEX_CHARS[value & 0xF] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^char c = content.charAt ( value ) ;^196^^^^^192^222^char c = content.charAt ( i ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Argument_Swapping]^char c = i.charAt ( content ) ;^196^^^^^192^222^char c = content.charAt ( i ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^int escCode = sOutputEscapes128[c];^202^^^^^192^222^int escCode = escCodes[c];^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^char c = content.charAt ( len ) ;^196^^^^^192^222^char c = content.charAt ( i ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value  |  4] ) ;^216^^^^^192^222^sb.append ( HEX_CHARS[value >> 4] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value  ||  0xF] ) ;^217^^^^^192^222^sb.append ( HEX_CHARS[value & 0xF] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Literal]^for  ( int i = len, len = content.length (  ) ; i < len; ++i )  {^195^^^^^192^222^for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Variable_Misuse]^int escCode = sInputCodesUtf8JsNames[c];^202^^^^^192^222^int escCode = escCodes[c];^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
[BugLab_Wrong_Operator]^sb.append ( HEX_CHARS[value  >  4] ) ;^216^^^^^192^222^sb.append ( HEX_CHARS[value >> 4] ) ;^[CLASS] CharTypes  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] byte[]  HEX_BYTES  boolean  StringBuilder  sb  char  c  int[]  escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  String  content  int  escCode  escLen  i  len  value  char[]  HEX_CHARS  
