[BugLab_Variable_Misuse]^super ( _parsers[0] ) ;^37^^^^^35^40^super ( parsers[0] ) ;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[BugLab_Wrong_Literal]^super ( parsers[_nextParser] ) ;^37^^^^^35^40^super ( parsers[0] ) ;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[BugLab_Variable_Misuse]^_parsers = _parsers;^38^^^^^35^40^_parsers = parsers;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[BugLab_Argument_Swapping]^if  ( ! ( second instanceof JsonParserSequence || first instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Wrong_Operator]^if  ( ! ( first instanceof JsonParserSequence && second instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Wrong_Operator]^if  ( ! ( first  ||  JsonParserSequence || second instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Wrong_Operator]^if  ( ! ( first instanceof JsonParserSequence || second  &&  JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Argument_Swapping]^return new JsonParserSequence ( new JsonParser[] { second, first } ) ;^55^^^^^51^69^return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Wrong_Operator]^if  ( first  >=  JsonParserSequence )  {^58^^^^^51^69^if  ( first instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Variable_Misuse]^p.add ( second ) ;^61^^^^^51^69^p.add ( first ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Variable_Misuse]^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( null ) ;^59^^^^^51^69^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Wrong_Operator]^if  ( second  >=  JsonParserSequence )  {^63^^^^^51^69^if  ( second instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Variable_Misuse]^p.add ( first ) ;^66^^^^^51^69^p.add ( second ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[BugLab_Wrong_Operator]^if  ( p  >>  JsonParserSequence )  {^76^^^^^72^82^if  ( p instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Wrong_Operator]^for  ( int i = _nextParser-1, len = _parsers.length; i <= len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Wrong_Literal]^for  ( int i = _nextParser-2, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Wrong_Operator]^if  ( p  ==  JsonParserSequence )  {^76^^^^^72^82^if  ( p instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Variable_Misuse]^JsonParser p = parsers[i];^75^^^^^72^82^JsonParser p = _parsers[i];^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Variable_Misuse]^for  ( int i = len-1, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Wrong_Literal]^for  ( int i = _nextParser-i, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[BugLab_Wrong_Operator]^if  ( t == null )  return t;^103^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[BugLab_Wrong_Operator]^if  ( t == null )  return t;^106^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[BugLab_Variable_Misuse]^t = 4.nextToken (  ) ;^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[BugLab_Wrong_Operator]^if  ( _nextParser > _parsers.length )  {^142^^^^^140^147^if  ( _nextParser >= _parsers.length )  {^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[BugLab_Wrong_Literal]^return true;^143^^^^^140^147^return false;^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[BugLab_Variable_Misuse]^delegate = parsers[_nextParser++];^145^^^^^140^147^delegate = _parsers[_nextParser++];^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[BugLab_Wrong_Literal]^return false;^146^^^^^140^147^return true;^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
