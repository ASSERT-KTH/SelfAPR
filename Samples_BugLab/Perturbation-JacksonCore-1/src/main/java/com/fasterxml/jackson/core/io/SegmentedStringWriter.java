[buglab_swap_variables]^_buffer.append (  0, str.length (  )  ) ;^44^^^^^41^46^_buffer.append ( str, 0, str.length (  )  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  
[buglab_swap_variables]^String str = start.subSequence ( csq, end ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[buglab_swap_variables]^String str = csq.subSequence ( end, start ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[buglab_swap_variables]^String str = csq.subSequence (  end ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[buglab_swap_variables]^String str = csq.subSequence ( start ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[buglab_swap_variables]^String str = end.subSequence ( start, csq ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[buglab_swap_variables]^_buffer.append (  0, str.length (  )  ) ;^52^^^^^49^54^_buffer.append ( str, 0, str.length (  )  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[buglab_swap_variables]^_buffer.append (  0, cbuf.length ) ;^62^^^^^61^63^_buffer.append ( cbuf, 0, cbuf.length ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf [VARIABLES] TextBuffer  _buffer  char[]  cbuf  boolean  
[buglab_swap_variables]^_buffer.append ( cbuf.length, 0, cbuf ) ;^62^^^^^61^63^_buffer.append ( cbuf, 0, cbuf.length ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf [VARIABLES] TextBuffer  _buffer  char[]  cbuf  boolean  
[buglab_swap_variables]^_buffer.append ( cbuf, 0 ) ;^62^^^^^61^63^_buffer.append ( cbuf, 0, cbuf.length ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf [VARIABLES] TextBuffer  _buffer  char[]  cbuf  boolean  
[buglab_swap_variables]^_buffer.append (  off, len ) ;^67^^^^^66^68^_buffer.append ( cbuf, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf int off int len [VARIABLES] boolean  TextBuffer  _buffer  int  len  off  char[]  cbuf  
[buglab_swap_variables]^_buffer.append ( cbuf, len, off ) ;^67^^^^^66^68^_buffer.append ( cbuf, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf int off int len [VARIABLES] boolean  TextBuffer  _buffer  int  len  off  char[]  cbuf  
[buglab_swap_variables]^_buffer.append ( cbuf,  len ) ;^67^^^^^66^68^_buffer.append ( cbuf, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf int off int len [VARIABLES] boolean  TextBuffer  _buffer  int  len  off  char[]  cbuf  
[buglab_swap_variables]^_buffer.append ( len, off, cbuf ) ;^67^^^^^66^68^_buffer.append ( cbuf, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf int off int len [VARIABLES] boolean  TextBuffer  _buffer  int  len  off  char[]  cbuf  
[buglab_swap_variables]^_buffer.append ( cbuf, off ) ;^67^^^^^66^68^_buffer.append ( cbuf, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf int off int len [VARIABLES] boolean  TextBuffer  _buffer  int  len  off  char[]  cbuf  
[buglab_swap_variables]^public void write ( String _buffer )  { str.append ( str, 0, str.length (  )  ) ; }^76^^^^^71^81^public void write ( String str )  { _buffer.append ( str, 0, str.length (  )  ) ; }^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str [VARIABLES] TextBuffer  _buffer  String  str  boolean  
[buglab_swap_variables]^public void write ( String str )  { _buffer.append (  0, str.length (  )  ) ; }^76^^^^^71^81^public void write ( String str )  { _buffer.append ( str, 0, str.length (  )  ) ; }^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str [VARIABLES] TextBuffer  _buffer  String  str  boolean  
[buglab_swap_variables]^_buffer.append (  off, len ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
[buglab_swap_variables]^_buffer.append ( str, len, off ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
[buglab_swap_variables]^_buffer.append ( str,  len ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
[buglab_swap_variables]^_buffer.append ( str, off ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
