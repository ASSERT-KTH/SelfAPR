[BugLab_Wrong_Literal]^_buffer.append ( str, -1, str.length (  )  ) ;^44^^^^^41^46^_buffer.append ( str, 0, str.length (  )  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  
[BugLab_Variable_Misuse]^String str = csq.subSequence ( end, end ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[BugLab_Variable_Misuse]^String str = csq.subSequence ( start, start ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[BugLab_Argument_Swapping]^String str = start.subSequence ( csq, end ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[BugLab_Argument_Swapping]^String str = csq.subSequence ( end, start ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[BugLab_Argument_Swapping]^String str = end.subSequence ( start, csq ) .toString (  ) ;^51^^^^^49^54^String str = csq.subSequence ( start, end ) .toString (  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[BugLab_Wrong_Literal]^_buffer.append ( str, start, str.length (  )  ) ;^52^^^^^49^54^_buffer.append ( str, 0, str.length (  )  ) ;^[CLASS] SegmentedStringWriter  [METHOD] append [RETURN_TYPE] Writer   CharSequence csq int start int end [VARIABLES] CharSequence  csq  String  str  boolean  TextBuffer  _buffer  int  end  start  
[BugLab_Argument_Swapping]^_buffer.append ( cbuf.length, 0, cbuf ) ;^62^^^^^61^63^_buffer.append ( cbuf, 0, cbuf.length ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf [VARIABLES] TextBuffer  _buffer  char[]  cbuf  boolean  
[BugLab_Wrong_Literal]^_buffer.append ( cbuf, -1, cbuf.length ) ;^62^^^^^61^63^_buffer.append ( cbuf, 0, cbuf.length ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf [VARIABLES] TextBuffer  _buffer  char[]  cbuf  boolean  
[BugLab_Argument_Swapping]^_buffer.append ( cbuf, len, off ) ;^67^^^^^66^68^_buffer.append ( cbuf, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   char[] cbuf int off int len [VARIABLES] boolean  TextBuffer  _buffer  int  len  off  char[]  cbuf  
[BugLab_Argument_Swapping]^public void write ( String _buffer )  { str.append ( str, 0, str.length (  )  ) ; }^76^^^^^71^81^public void write ( String str )  { _buffer.append ( str, 0, str.length (  )  ) ; }^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str [VARIABLES] TextBuffer  _buffer  String  str  boolean  
[BugLab_Wrong_Literal]^public void write ( String str )  { _buffer.append ( str, 1, str.length (  )  ) ; }^76^^^^^71^81^public void write ( String str )  { _buffer.append ( str, 0, str.length (  )  ) ; }^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str [VARIABLES] TextBuffer  _buffer  String  str  boolean  
[BugLab_Variable_Misuse]^_buffer.append ( str, off, off ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
[BugLab_Argument_Swapping]^_buffer.append ( len, off, str ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
[BugLab_Argument_Swapping]^_buffer.append ( str, len, off ) ;^80^^^^^79^81^_buffer.append ( str, off, len ) ;^[CLASS] SegmentedStringWriter  [METHOD] write [RETURN_TYPE] void   String str int off int len [VARIABLES] String  str  boolean  TextBuffer  _buffer  int  len  off  
