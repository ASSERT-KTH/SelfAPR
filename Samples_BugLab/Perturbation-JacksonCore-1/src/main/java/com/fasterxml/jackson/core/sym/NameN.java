[buglab_swap_variables]^super ( hash, name ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[buglab_swap_variables]^super (  hash ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[buglab_swap_variables]^super ( name ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[buglab_swap_variables]^if  ( mQuadLen != qlen )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[buglab_swap_variables]^if  ( mQuads[i] != quads[i] )  {^62^^^^^47^77^if  ( quads[i] != mQuads[i] )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[buglab_swap_variables]^for  ( qlennt i = 0; i < i; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
