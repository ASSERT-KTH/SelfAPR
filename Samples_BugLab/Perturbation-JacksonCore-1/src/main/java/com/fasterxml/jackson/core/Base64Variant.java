[BugLab_Wrong_Literal]^private final transient int[] _asciiToBase64 = new int[129];^55^^^^^50^60^private final transient int[] _asciiToBase64 = new int[128];^[CLASS] Base64Variant   [VARIABLES] 
[BugLab_Wrong_Literal]^private final transient byte[] _base65ToAsciiB = new byte[65];^67^^^^^62^72^private final transient byte[] _base64ToAsciiB = new byte[64];^[CLASS] Base64Variant   [VARIABLES] 
[BugLab_Variable_Misuse]^_usesPadding = _usesPadding;^112^^^^^110^137^_usesPadding = usesPadding;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^_paddingChar = alpha;^113^^^^^110^137^_paddingChar = paddingChar;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^_maxLineLength = i;^114^^^^^110^137^_maxLineLength = maxLineLength;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^int alphaLen = name.length (  ) ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^if  ( _maxLineLength != 64 )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Wrong_Operator]^if  ( alphaLen >= 64 )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^base64Alphabet.getChars ( 0, maxLineLength, _base64ToAsciiC, 0 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Argument_Swapping]^base64Alphabet.getChars ( 0, _base64ToAsciiC, alphaLen, 0 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Wrong_Literal]^base64Alphabet.getChars ( -1, alphaLen, _base64ToAsciiC, -1 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^Arrays.fill ( _asciiToBase64, alphaLen ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Argument_Swapping]^Arrays.fill ( BASE64_VALUE_INVALID, _asciiToBase64 ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^for  ( _maxLineLengthnt i = 0; i < alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < maxLineLength; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < paddingCharLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Argument_Swapping]^for  ( alphaLennt i = 0; i < i; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^_asciiToBase64[alpha] = maxLineLength;^130^^^^^110^137^_asciiToBase64[alpha] = i;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^_asciiToBase64[alpha] = _maxLineLength;^130^^^^^110^137^_asciiToBase64[alpha] = i;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Wrong_Literal]^for  ( int i = alphaLen; i < alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^if  ( _usesPadding )  {^134^^^^^110^137^if  ( usesPadding )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^_asciiToBase64[ ( int )  paddingChar] = maxLineLength;^135^^^^^110^137^_asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^this ( base, base64Alphabet, base._usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^this ( base, name, base._usesPadding, base._paddingChar, i ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^this ( base, name, usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^this ( base, name, base._usesPadding, paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Argument_Swapping]^this ( base._usesPadding, name, base, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Argument_Swapping]^this ( base, maxLineLength, base._usesPadding, base._paddingChar, name ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Argument_Swapping]^this ( base, name, base._paddingChar, base._usesPadding, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[BugLab_Variable_Misuse]^_name = base64Alphabet;^156^^^^^154^167^_name = name;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^byte[] srcB = base._base64ToAsciiB._base64ToAsciiB;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^byte[] srcB = base;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( _base64ToAsciiB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( srcB, 0, _base64ToAsciiB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, maxLineLength ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^System.arraycopy ( this._base64ToAsciiB, 0, srcB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^System.arraycopy ( srcB, 0, srcB.length, 0, this._base64ToAsciiB ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Literal]^System.arraycopy ( srcB, BASE64_VALUE_INVALID, this._base64ToAsciiB, BASE64_VALUE_INVALID, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Literal]^System.arraycopy ( srcB, 1, this._base64ToAsciiB, 1, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^char[] srcC = _base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^char[] srcC = base._base64ToAsciiC._base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^char[] srcC = base;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( _base64ToAsciiC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, maxLineLength ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^System.arraycopy ( this._base64ToAsciiC, 0, srcC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^System.arraycopy ( srcC, 0, srcC.length, 0, this._base64ToAsciiC ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Literal]^System.arraycopy ( srcC, _maxLineLength, this._base64ToAsciiC, _maxLineLength, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^int[] srcV = _asciiToBase64;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^int[] srcV = base._asciiToBase64._asciiToBase64;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^int[] srcV = base;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( _asciiToBase64, 0, this._asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( srcV, 0, _asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, alphaLen ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^System.arraycopy ( this._asciiToBase64, 0, srcV, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^System.arraycopy ( srcV, 0, srcV.length, 0, this._asciiToBase64 ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Literal]^System.arraycopy ( srcV, _maxLineLength, this._asciiToBase64, _maxLineLength, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Literal]^System.arraycopy ( srcV, -1, this._asciiToBase64, -1, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^_paddingChar = alpha;^165^^^^^154^167^_paddingChar = paddingChar;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^_maxLineLength = _maxLineLength;^166^^^^^154^167^_maxLineLength = maxLineLength;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return Base64Variants.valueOf ( name ) ;^180^^^^^179^181^return Base64Variants.valueOf ( _name ) ;^[CLASS] Base64Variant  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^public String getName (  )  { return name; }^189^^^^^184^194^public String getName (  )  { return _name; }^[CLASS] Base64Variant  [METHOD] getName [RETURN_TYPE] String   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^public boolean usesPadding (  )  { return usesPadding; }^191^^^^^186^196^public boolean usesPadding (  )  { return _usesPadding; }^[CLASS] Base64Variant  [METHOD] usesPadding [RETURN_TYPE] boolean   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^public boolean usesPaddingChar ( paddingCharhar c )  { return c == _paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^public boolean usesPaddingChar ( char c )  { return c == paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^public boolean usesPaddingChar ( _paddingCharhar c )  { return c == c; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Operator]^public boolean usesPaddingChar ( char c )  { return c != _paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Operator]^public boolean usesPaddingChar ( int ch )  { return ch <=  ( int )  _paddingChar; }^193^^^^^188^198^public boolean usesPaddingChar ( int ch )  { return ch ==  ( int )  _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^public char getPaddingChar (  )  { return paddingChar; }^194^^^^^189^199^public char getPaddingChar (  )  { return _paddingChar; }^[CLASS] Base64Variant  [METHOD] getPaddingChar [RETURN_TYPE] char   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^public int getMaxLineLength (  )  { return maxLineLength; }^197^^^^^192^202^public int getMaxLineLength (  )  { return _maxLineLength; }^[CLASS] Base64Variant  [METHOD] getMaxLineLength [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( maxLineLength <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( ch <= 127 )  ? srcV[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( ch <= 127 )  ? _asciiToBase64[ch] : maxLineLength;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^return  ( BASE64_VALUE_INVALID <= 127 )  ? _asciiToBase64[ch] : ch;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^return  ( _asciiToBase64 <= 127 )  ? ch[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Operator]^return  ( ch < 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( maxLineLength <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( ch <= 127 )  ? srcV[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( ch <= 127 )  ? _asciiToBase64[ch] : maxLineLength;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^return  ( BASE64_VALUE_INVALID <= 127 )  ? _asciiToBase64[ch] : ch;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^return  ( ch <= 127 )  ? BASE64_VALUE_INVALID[ch] : _asciiToBase64;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Operator]^return  ( ch < 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( maxLineLength <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( ch <= 127 )  ? srcV[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return  ( ch <= 127 )  ? _asciiToBase64[ch] : maxLineLength;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^return  ( BASE64_VALUE_INVALID <= 127 )  ? _asciiToBase64[ch] : ch;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Argument_Swapping]^return  ( ch <= 127 )  ? BASE64_VALUE_INVALID[ch] : _asciiToBase64;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Wrong_Operator]^return  ( ch < 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^return srcC[value];^236^^^^^231^237^return _base64ToAsciiC[value];^[CLASS] Base64Variant  [METHOD] encodeBase64BitsAsChar [RETURN_TYPE] char   int value [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  value  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiC[ ( ptr >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[ptr++] = b24[ ( _base64ToAsciiC >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )   >=  0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24  <=  18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> BASE64_VALUE_PADDING )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiC[ ( maxLineLength >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )   >=  0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24  <=  12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )   ^  0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24   instanceof   6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[ptr++] = _baseBASE64_VALUE_INVALID4ToAsciiC[ ( b24 >> BASE64_VALUE_INVALID )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiC[i & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiC[b24  ||  0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return ch;^249^^^^^243^250^return ptr;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( i >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append ( b24[ ( _base64ToAsciiC >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )   <<  0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( b24  <<  18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _base64ToAsciiC[ ( b24 >> 19 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( i >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append ( b24[ ( _base64ToAsciiC >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )    instanceof   0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( b24  <<  12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _base64ToAsciiC[ ( b24 >> BASE64_VALUE_INVALID )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append ( b24[ ( _base64ToAsciiC >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )   <<  0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( b24  ^  6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _baseptr4ToAsciiC[ ( b24 >> ptr )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[maxLineLength & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[b24  |  0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiC[ ( maxLineLength >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = srcC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] = bits[ ( _base64ToAsciiC >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )   ||  0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  &  18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 19 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiC[ ( i >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = srcC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] = bits[ ( _base64ToAsciiC >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )    instanceof   0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  &&  12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 11 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( usesPadding )  {^272^^^^^268^282^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( outputBytes <= 2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( outputBytes == 3 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = srcC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] = bits[ ( _base64ToAsciiC >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )    instanceof   0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  ^  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )   ==  0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  &  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _baseptr4ToAsciiC[ ( bits >> ptr )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( i == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( i >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( outputBytes == 2 )  ? srcC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : c;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( bits == 2 )  ? _base64ToAsciiC[ ( outputBytes >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( outputBytes == 2 )  ? bits[ ( _base64ToAsciiC >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( _paddingChar == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : outputBytes;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes != 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   >>  0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits  |  6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base74ToAsciiC[ ( bits >> 7 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = paddingChar;^275^^^^^268^282^buffer[outPtr++] = _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( maxLineLength == 2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( outputBytes != 2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiC[ ( i >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  ==  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _basei4ToAsciiC[ ( bits >> i )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( ch == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _paddingChar[ ( bits >> 6 )  & 0x3F] : _base64ToAsciiC;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   ^  0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits   instanceof   6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] =  ( outputBytes == INT_SPACE )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base54ToAsciiC[ ( bits >> 5 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiC[ ( outPtr >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )   ^  0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits   instanceof   6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _base74ToAsciiC[ ( bits >> 7 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return ch;^281^^^^^268^282^return outPtr;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( maxLineLength >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )   ^  0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits   instanceof   18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( i >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append ( bits[ ( _base64ToAsciiC >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )   ||  0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits  |  12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _base64ToAsciiC[ ( bits >> 11 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( usesPadding )  {^288^^^^^284^297^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( i == 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( outputBytes != 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( outputBytes == 1 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( value >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( srcC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append ( bits[ ( _base64ToAsciiC >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )    instanceof   0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits   instanceof   6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _basech4ToAsciiC[ ( bits >> ch )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( outputBytes >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )   !=  0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits  !=  6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _base74ToAsciiC[ ( bits >> 7 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append (  ( i == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( outPtr >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append (  ( outputBytes == 2 )  ? srcC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append (  ( bits == 2 )  ? _base64ToAsciiC[ ( outputBytes >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append (  ( outputBytes == 2 )  ? _paddingChar[ ( bits >> 6 )  & 0x3F] : _base64ToAsciiC ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append (  ( outputBytes > 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   ||  0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits   instanceof   6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append (  ( outputBytes ==  )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append (  ( outputBytes == 2 )  ? _base4ToAsciiC[ ( bits >>  )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( paddingChar ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( maxLineLength == 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( outputBytes ==  )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )   <  0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append ( _base64ToAsciiC[ ( bits  |  6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append (  ( ch == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( i >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append (  ( outputBytes == 2 )  ? bits[ ( _base64ToAsciiC >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^sb.append (  ( _base64ToAsciiC == 2 )  ? outputBytes[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append (  ( outputBytes != 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   >=  0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits  ||  6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append (  ( outputBytes == 3 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append (  ( outputBytes == 2 )  ? _basemaxLineLength4ToAsciiC[ ( bits >> maxLineLength )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb.append ( c ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^sb.append ( _base_maxLineLength4ToAsciiC[ ( bits >> _maxLineLength )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return srcB[value];^302^^^^^299^303^return _base64ToAsciiB[value];^[CLASS] Base64Variant  [METHOD] encodeBase64BitsAsByte [RETURN_TYPE] byte   int value [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiB[ ( maxLineLength >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[ptr++] = b24[ ( _base64ToAsciiB >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )   <<  0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24  <=  18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> maxLineLength )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiB[ ( i >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[ptr++] = b24[ ( _base64ToAsciiB >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )   ^  0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24  <<  12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> i )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiB[ ( outputBytes >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[ptr++] = b24[ ( _base64ToAsciiB >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )   ||  0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24  <=  6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[ptr++] = _basebits4ToAsciiB[ ( b24 >> bits )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = _base64ToAsciiB[outPtr & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[ptr++] = srcB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[ptr++] = _base64ToAsciiB[b24  ||  0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return i;^315^^^^^309^316^return ptr;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiB[ ( i >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = srcB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] = bits[ ( _base64ToAsciiB >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )   !=  0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  ==  18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> BASE64_VALUE_PADDING )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiB[ ( outPtr >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = srcB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )   <  0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  |  12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( outputBytes >= 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( outputBytes == b24 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiB[ ( value >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = srcB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )   ||  0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  ||  6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _basebits4ToAsciiB[ ( bits >> bits )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiB[ ( outPtr >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] = bits[ ( _base64ToAsciiB >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )   ==  0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  <  6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _baseoutPtr4ToAsciiB[ ( bits >> outPtr )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( ch == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( outPtr >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( outputBytes == 2 )  ? srcB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( pb == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : outputBytes;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( bits == 2 )  ? _base64ToAsciiB[ ( outputBytes >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^buffer[outPtr++] =  ( _base64ToAsciiB == 2 )  ? outputBytes[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes >= 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )   >=  0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits  >=  6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base4ToAsciiB[ ( bits >>  )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( i == 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( outputBytes != 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiB[ ( i >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )   <=  0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  &  6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _base54ToAsciiB[ ( bits >> 5 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] =  ( ptr == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes <= 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )   <=  0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits  <<  6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] =  ( outputBytes == maxLineLength )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^buffer[outPtr++] = _base64ToAsciiB[ ( maxLineLength >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )   ^  0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  ==  6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^buffer[outPtr++] = _base74ToAsciiB[ ( bits >> 7 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return ch;^340^^^^^326^341^return outPtr;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return encode ( srcB, false ) ;^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^return encode ( input, true ) ;^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int srcBEnd = input.length;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int inputEnd = inputPtr;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^int input.lengthEnd = input;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^sb = new StringBuilder ( inputLeft ) ;^377^^^^^362^392^sb = new StringBuilder ( outputLen ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int outputLen = outPtr +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int outputLen = inputEnd +  <<  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int outputLen = inputEnd +  >>  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int outputLen = inputEnd +  ( inputEnd  &  2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd  &&  3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int outputLen = inputEnd +  ( inputEnd >> 3 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> outPtr ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( usesPadding )  {^379^^^^^364^394^if  ( addQuotes )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int chunksBeforeLF = getMaxLineLength (  )   >=  2;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int chunksBeforeLF = getMaxLineLength (  )  >> outputBytes;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int inputPtr = ;^386^^^^^371^401^int inputPtr = 0;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int safeInputEnd = inputLeft-3;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int safeInputEnd = inputEnd-4;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^while  ( outputLen <= safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^while  ( inputPtr <= maxLineLength )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^while  ( srcBPtr <= safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^while  ( safeInputEnd <= inputPtr )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^while  ( inputPtr < safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^while  ( inputPtr > safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( --chunksBeforeLF < 0 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( --chunksBeforeLF <= bits )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^chunksBeforeLF = getMaxLineLength (  )   !=  2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^chunksBeforeLF = getMaxLineLength (  )  >> b24;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^b24 |=  (  ( int )  srcB[inputPtr++] )  & 0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  ( int )  input[inputPtr++] )   >=  0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^b24 =  ( outPtr << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^b24 =  ( b24 << 8 )  |  (  (  ( int )  srcB[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^b24 =  ( input << 8 )  |  (  (  ( int )  b24[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24   instanceof   =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 =  ( b24  |  8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )   >=  0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^b24 =  ( b24 <<  )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^chunksBeforeLF = getMaxLineLength (  )  >> 1;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int b24 =  (  ( int )  srcB[inputPtr++] )  << 8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   >=  8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << b24;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^encodeBase64Chunk ( sb, outputBytes ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^encodeBase64Chunk ( b24, sb ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( --chunksBeforeLF == 0 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( --chunksBeforeLF <= 1 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^chunksBeforeLF = getMaxLineLength (  )    instanceof   2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^chunksBeforeLF = getMaxLineLength (  )  >> inputLeft;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  ( int )  input[inputPtr++] )   ==  0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^b24 =  ( maxLineLength << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24  &&  =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 =  ( b24  >  8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )   <=  0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^b24 =  ( b24 << outputBytes )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   !=  8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << 7;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int inputLeft = inputPtr - inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int inputLeft = inputEnd - maxLineLength;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^int inputLeft = inputPtr - inputEnd;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int inputLeft = inputEnd  ||  inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( maxLineLength > 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( srcBLeft > 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( inputLeftLeft > 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( inputLeft >= 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( inputLeft > ch )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outputBytes == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( srcBLeft == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( input == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( inputLeftLeft == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( inputLeft != 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( inputLeft == 1 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^b24 |=  (  (  ( int )  srcB[inputPtr++] )  & 0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   >=  8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )   |  0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   >>  8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )   ==  0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << chunksBeforeLF;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   !=  16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^encodeBase64Partial ( sb, inputPtr, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^encodeBase64Partial ( sb, b24, outPtr ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^encodeBase64Partial ( inputLeft, b24, sb ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^encodeBase64Partial ( sb, inputLeft, b24 ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( inputLeft == 3 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )   ^  0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << value;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   &  8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int b24 =  (  ( int )  srcB[inputPtr++] )  << 16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   ||  16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << maxLineLength;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^encodeBase64Partial ( sb, maxLineLength, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^encodeBase64Partial ( sb, b24, inputEnd ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( usesPadding )  {^413^^^^^398^428^if  ( addQuotes )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decode ( name, b ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^decode ( b, input ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int len = input.length (  ) ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^while  ( inputPtr < len )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^while  ( ptr < inputLeft )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^while  ( ptr <= len )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^while  ( ptr > len )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputPtr >= len )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= inputPtr )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( len >= ptr )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr > len )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outPtr < 0 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits <= 0 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits <  )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < bits )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( paddingChar, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, _maxLineLength, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputPtr >= len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= maxLineLength )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( len >= ptr )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr == len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( len < 0 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits <= 0 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < -1 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( paddingChar, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 0, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputLeft >= len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= inputPtr )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( len >= ptr )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr == len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= inputEnd;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( value ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= ptr;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( maxLineLength ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( len ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( len < 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits <= 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < outputBytes )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( value != Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( bits != Base64Variant.inputPtr )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits <= Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( paddingChar, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 1, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outputBytes >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= outputBytes )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( len >= ptr )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr > len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( !usesPaddingChar ( paddingChar )  )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( paddingChar, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  >  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (   instanceof   ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, i, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = name.charAt ( ptr++ ) ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= safeInputEnd;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, , null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  &  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  !=  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, b24, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( inputLeft ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( len != Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( bits != Base64Variant.outputBytes )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits >= Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( c, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, inputLeft, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputLeft >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= outPtr )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr == len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  <=  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, , "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outPtr >= len )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= inputEnd )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^if  ( len >= ptr )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr > len )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= 3;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( maxLineLength ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= chunksBeforeLF;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( outPtr ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( inputPtr ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outputBytes < 0 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits <= 0 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < value )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( outputLen << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | inputPtr;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^decodedData =  ( bits << 6 )  | decodedData;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData   instanceof   =  ( decodedData << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData  ==  6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendThreeBytes ( inputLeft ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( bits != Base64Variant.maxLineLength )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits == Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( paddingChar, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= bits;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, bits, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( len != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( c, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, inputPtr, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = name.charAt ( ptr++ ) ;^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = name.charAt ( ptr++ ) ;^474^^^^^459^489^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^bits = decodeBase64Char ( paddingChar ) ;^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( maxLineLength << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | maxLineLength;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^decodedData =  ( bits << 6 )  | decodedData;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData   instanceof   =  ( decodedData << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData  <  6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData =  ( decodedData << 5 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= outPtr;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = name.charAt ( ptr++ ) ;^490^^^^^475^505^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^bits = decodeBase64Char ( paddingChar ) ;^491^^^^^476^506^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= value;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( len << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | outPtr;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^decodedData =  ( bits << 6 )  | decodedData;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData  !=  =  ( decodedData << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData  &  6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData =  ( decodedData << bits )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= ;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^bits = decodeBase64Char ( paddingChar ) ;^524^^^^^509^539^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= outPtr;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( outputBytes << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | outputBytes;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^decodedData =  ( bits << 6 )  | decodedData;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData  >=  6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData =  ( decodedData << chunksBeforeLF )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int bits = decodeBase64Char ( paddingChar ) ;^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int decodedData = inputPtr;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 1, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^bits = decodeBase64Char ( c ) ;^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, inputEnd, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = input.charAt ( ptr++ ) ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  |  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = input.charAt ( ptr++ ) ;^523^^^^^508^538^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^bits = decodeBase64Char ( c ) ;^524^^^^^509^539^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, maxLineLength, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( len ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendThreeBytes ( inputLeft ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outputBytes < 0 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits == 0 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < INT_SPACE )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, , null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputLeft >= len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= outputBytes )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr > len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits <  )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputEnd >= len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= inputLeft )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ptr < len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= chunksBeforeLF;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( outPtr ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= 5;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( inputPtr ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= 3;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( maxLineLength < 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < ch )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits == Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outPtr >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= inputEnd )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ^  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  &&  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 4, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= 3;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( c, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  >>  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( bits != Base64Variant.len )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= maxLineLength )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ||  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( inputLeft >= len )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ptr >= inputPtr )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= safeInputEnd;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( inputLeft ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( len ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^if  ( bits < alphaLen )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( len << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | maxLineLength;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData  &  =  ( decodedData << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData   instanceof   6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendThreeBytes ( inputPtr ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( outputBytes != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( bits > Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 4, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= maxLineLength;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, b24, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendTwoBytes ( inputLeft ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( maxLineLength != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( bits != Base64Variant.inputPtr )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 2, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^ch = input.charAt ( ptr++ ) ;^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( outputBytes << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | ptr;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData  >  6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData =  ( decodedData <<  )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^bits = decodeBase64Char ( c ) ;^491^^^^^476^506^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( inputPtr << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( decodedData << 6 )  | inputPtr;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData  >  =  ( decodedData << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData  >>  6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData =  ( decodedData << 7 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= inputLeft;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData >>= 1;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^decodedData =  ( outputLen << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData  <  =  ( decodedData << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^decodedData =  ( decodedData   instanceof   6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^decodedData =  ( decodedData << i )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^int decodedData = safeInputEnd;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, -1, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^_reportInvalidBase64 ( c, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, inputLeft, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^_reportInvalidBase64 ( ch, 3, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( !usesPaddingChar ( c )  )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  <  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.append ( outPtr ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^builder.appendThreeBytes ( len ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^public String toString (  )  { return name; }^546^^^^^541^551^public String toString (  )  { return _name; }^[CLASS] Base64Variant  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^return  ( o < this ) ;^551^^^^^549^552^return  ( o == this ) ;^[CLASS] Base64Variant  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  Object  o  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return str.hashCode (  ) ;^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^return name.hashCode (  ) ;^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( paddingChar <= INT_SPACE )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( ch <= len )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( ch > INT_SPACE )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^} else if  ( usesPaddingChar ( paddingChar )  )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^} else if  ( !Character.isDefined ( c )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^} else if  ( !Character.isDefined ( ch )  && Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  >  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  ||  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  <  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal caracter '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal paddingChararacter  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  >  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal caracter  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  ||  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal paddingChararacter '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  ^  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  <<  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^} else if  ( !Character.isDefined ( paddingChar )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( inputLeft+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  >=  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  &  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  &&  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  <<  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  !=  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+0 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( inputEnd+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character   instanceof   ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  >>  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  ==  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  |  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  >  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  |  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( inputLeft+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^base = "Illegal white space bindexaracter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( ch+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  !=  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  >  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+inputEnd ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal white space caracter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^} else if  ( usesPaddingChar ( c )  )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  <<  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  ^  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+safeInputEnd ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character '"+ch+"'  &  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  |  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( outPtr+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  <  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal white space character  |  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+2 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( len+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  ||  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Unexpected padding character  <  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = "Illegal character  <  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^if  ( str != null )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^if  ( msg == null )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = str + ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = base + ": " + name;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Argument_Swapping]^base = msg + ": " + base;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = base   instanceof   ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Variable_Misuse]^base = name + ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[BugLab_Wrong_Operator]^base = base  >>  ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
