[BugLab_Wrong_Operator]^if  ( out != null )  {^154^^^^^153^158^if  ( out == null )  {^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Variable_Misuse]^if  ( separator.length (  )  == 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Wrong_Operator]^if  ( indent.length (  )  >= 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Wrong_Literal]^if  ( indent.length (  )  == null )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Variable_Misuse]^this.indent = separator;^173^^^^^168^176^this.indent = indent;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Variable_Misuse]^this.lenient = htmlSafe;^191^^^^^190^192^this.lenient = lenient;^[CLASS] JsonWriter  [METHOD] setLenient [RETURN_TYPE] void   boolean lenient [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Variable_Misuse]^return htmlSafe;^198^^^^^197^199^return lenient;^[CLASS] JsonWriter  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Variable_Misuse]^this.htmlSafe = lenient;^209^^^^^208^210^this.htmlSafe = htmlSafe;^[CLASS] JsonWriter  [METHOD] setHtmlSafe [RETURN_TYPE] void   boolean htmlSafe [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Variable_Misuse]^return lenient;^217^^^^^216^218^return htmlSafe;^[CLASS] JsonWriter  [METHOD] isHtmlSafe [RETURN_TYPE] boolean   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[BugLab_Wrong_Literal]^beforeValue ( false ) ;^263^^^^^262^267^beforeValue ( true ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[BugLab_Variable_Misuse]^out.write ( separator ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[BugLab_Variable_Misuse]^if  ( nonempty != nonempty && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^if  ( context != empty && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^if  ( context != nonempty && context != context )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Argument_Swapping]^if  ( nonempty != context && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Argument_Swapping]^if  ( empty != nonempty && context != context )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Wrong_Operator]^if  ( context != nonempty || context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Wrong_Operator]^if  ( context == nonempty && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Wrong_Operator]^if  ( context != nonempty && context >= empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^stack.remove ( this.size (  )  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Wrong_Operator]^stack.remove ( stack.size (  )   <=  1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Wrong_Literal]^stack.remove ( stack.size (  )   ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^if  ( empty == nonempty )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^if  ( context == empty )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Argument_Swapping]^if  ( nonempty == context )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Wrong_Operator]^if  ( context != nonempty )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^out.write ( separator ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[BugLab_Variable_Misuse]^return null.get ( stack.size (  )  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[BugLab_Wrong_Operator]^return stack.get ( stack.size (  )   >=  1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[BugLab_Wrong_Literal]^return stack.get ( stack.size (  )   ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[BugLab_Wrong_Operator]^return stack.get ( stack.size (  )   >>  1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[BugLab_Argument_Swapping]^stack.set ( topOfStack.size (  )  - 1, stack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[BugLab_Wrong_Operator]^stack.set ( stack.size (  )   >  1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[BugLab_Wrong_Literal]^stack.set ( stack.size (  )  , topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[BugLab_Variable_Misuse]^if  ( separator == null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[BugLab_Wrong_Operator]^if  ( name != null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[BugLab_Variable_Misuse]^string ( separator ) ;^313^^^^^308^315^string ( name ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[BugLab_Variable_Misuse]^if  ( separator == null )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Wrong_Operator]^if  ( value != null )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Wrong_Literal]^beforeValue ( true ) ;^327^^^^^323^330^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Variable_Misuse]^string ( separator ) ;^328^^^^^323^330^string ( value ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Wrong_Literal]^beforeValue ( true ) ;^338^^^^^337^341^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Wrong_Literal]^beforeValue ( true ) ;^349^^^^^348^352^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Variable_Misuse]^out.write ( lenient ? "true" : "false" ) ;^350^^^^^348^352^out.write ( value ? "true" : "false" ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[BugLab_Wrong_Operator]^if  ( Double.isNaN ( value )  && Double.isInfinite ( value )  )  {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[BugLab_Wrong_Literal]^beforeValue ( true ) ;^365^^^^^361^368^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[BugLab_Wrong_Literal]^beforeValue ( true ) ;^376^^^^^375^379^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[BugLab_Wrong_Operator]^if  ( value != null )  {^389^^^^^388^401^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Variable_Misuse]^if  ( !lenient &&  ( separator.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Variable_Misuse]^if  ( !value &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Wrong_Operator]^if  ( !lenient ||  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Wrong_Operator]^if  ( !lenient &&  ( string.equals ( "-Infinity" )  && string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Variable_Misuse]^&&  ( openBracket.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Variable_Misuse]^&&  ( value.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Wrong_Literal]^beforeValue ( true ) ;^398^^^^^388^401^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Variable_Misuse]^out.append ( openBracket ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[BugLab_Wrong_Operator]^if  ( peek (  )  == JsonScope.NONEMPTY_DOCUMENT )  {^419^^^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[BugLab_Variable_Misuse]^if  ( value )  {^467^^^^^452^482^if  ( htmlSafe )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Wrong_Operator]^if  ( c > 0x1F )  {^475^^^^^460^490^if  ( c <= 0x1F )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^for  ( int i = 0, length = separator.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^for  ( lengthnt i = 0, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Argument_Swapping]^for  ( int i = 0, value = length.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Argument_Swapping]^for  ( lengthnt i = 0, i = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Wrong_Operator]^for  ( int i = 0, length = value.length (  ) ; i <= length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Wrong_Literal]^for  ( int i = 1, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Wrong_Operator]^if  ( c < 0x1F )  {^475^^^^^460^490^if  ( c <= 0x1F )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^char c = string.charAt ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^char c = value.charAt ( length ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Argument_Swapping]^char c = i.charAt ( value ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Wrong_Literal]^for  ( int i = -1, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^for  ( int i = 0, length = string.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^char c = openBracket.charAt ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[BugLab_Variable_Misuse]^if  ( string == null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Wrong_Operator]^if  ( indent != null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Argument_Swapping]^for  ( stacknt i = 1; i < i.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 2; i < stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Variable_Misuse]^out.write ( value ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Variable_Misuse]^out.write ( separator ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[BugLab_Wrong_Operator]^if  ( context != JsonScope.NONEMPTY_OBJECT )  {^503^^^^^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[BugLab_Argument_Swapping]^} else if  ( JsonScope.EMPTY_OBJECT != context )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[BugLab_Wrong_Operator]^} else if  ( context <= JsonScope.EMPTY_OBJECT )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[BugLab_Wrong_Operator]^} else if  ( context == JsonScope.EMPTY_OBJECT )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[BugLab_Variable_Misuse]^if  ( !lenient && !value )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[BugLab_Variable_Misuse]^if  ( !value && !root )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[BugLab_Wrong_Operator]^if  ( !lenient || !root )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[BugLab_Variable_Misuse]^out.append ( value ) ;^541^^^^^526^556^out.append ( separator ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
