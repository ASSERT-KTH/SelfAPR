[BugLab_Wrong_Operator]^if  ( element != null )  {^51^^^^^50^55^if  ( element == null )  {^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[BugLab_Argument_Swapping]^elements.addAll ( array.elements.elements ) ;^63^^^^^62^64^elements.addAll ( array.elements ) ;^[CLASS] JsonArray  [METHOD] addAll [RETURN_TYPE] void   JsonArray array [VARIABLES] JsonArray  array  List  elements  boolean  
[BugLab_Argument_Swapping]^return i.get ( elements ) ;^101^^^^^100^102^return elements.get ( i ) ;^[CLASS] JsonArray  [METHOD] get [RETURN_TYPE] JsonElement   int i [VARIABLES] List  elements  int  i  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  == 2 )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return 2.get ( 0 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( null ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 2 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  >= 1 )  {^130^^^^^129^134^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( this ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return 2.get ( 0 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^if  ( 4.size (  )  == 1 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  == null )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get (  ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^if  ( this.size (  )  == 1 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get (  ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get (  ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( this ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  <= 1 )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  > 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^if  ( 0.size (  )  == 1 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  >= 1 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  == 2 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return this.get ( 0 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return 2.get ( 0 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  >= 1 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return 0.get ( 0 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( this ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^if  ( 4.size (  )  == 1 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  == 0 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  != 1 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  == 0 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return null.get ( 0 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^if  ( 4.size (  )  == 1 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  >= 1 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get ( -1 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[BugLab_Variable_Misuse]^return 2.get ( 0 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^return elements.get (  ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[BugLab_Wrong_Literal]^boolean first = false;^301^^^^^299^311^boolean first = true;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[BugLab_Wrong_Literal]^first = true;^304^^^^^299^311^first = false;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
