[BugLab_Variable_Misuse]^super ( json, type, factory, objectConstructor, 0, context ) ;^34^^^^^30^35^super ( json, type, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonElement json Type type ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] Type  type  JsonDeserializationContext  context  boolean  JsonElement  json  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[BugLab_Argument_Swapping]^super ( context, type, factory, objectConstructor, deserializers, json ) ;^34^^^^^30^35^super ( json, type, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonElement json Type type ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] Type  type  JsonDeserializationContext  context  boolean  JsonElement  json  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[BugLab_Argument_Swapping]^super ( json, context, factory, objectConstructor, deserializers, type ) ;^34^^^^^30^35^super ( json, type, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonElement json Type type ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] Type  type  JsonDeserializationContext  context  boolean  JsonElement  json  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[BugLab_Argument_Swapping]^super ( json, factory, type, objectConstructor, deserializers, context ) ;^34^^^^^30^35^super ( json, type, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonElement json Type type ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] Type  type  JsonDeserializationContext  context  boolean  JsonElement  json  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[BugLab_Argument_Swapping]^super ( json, type, factory, deserializers, objectConstructor, context ) ;^34^^^^^30^35^super ( json, type, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonElement json Type type ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] Type  type  JsonDeserializationContext  context  boolean  JsonElement  json  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[BugLab_Argument_Swapping]^super ( json, type, factory, context, deserializers, objectConstructor ) ;^34^^^^^30^35^super ( json, type, factory, objectConstructor, deserializers, context ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] <init> [RETURN_TYPE] JsonDeserializationContext)   JsonElement json Type type ObjectNavigatorFactory factory ObjectConstructor objectConstructor JsonDeserializer<?>> deserializers JsonDeserializationContext context [VARIABLES] Type  type  JsonDeserializationContext  context  boolean  JsonElement  json  ObjectConstructor  objectConstructor  ParameterizedTypeHandlerMap  deserializers  ObjectNavigatorFactory  factory  
[BugLab_Argument_Swapping]^return  ( T )  targetType.construct ( objectConstructor ) ;^40^^^^^39^41^return  ( T )  objectConstructor.construct ( targetType ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] constructTarget [RETURN_TYPE] T   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^if  ( jsonChild == null )  {^60^^^^^52^69^if  ( jsonChild != null )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  JsonElement  jsonChild  JsonObject  jsonObject  Object  child  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( child, null ) ;^64^^^^^52^69^f.set ( obj, null ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  JsonElement  jsonChild  JsonObject  jsonObject  Object  child  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^Object child = visitChildAsObject ( jsonChild, typeOfF ) ;^61^^^^^52^69^Object child = visitChildAsObject ( typeOfF, jsonChild ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  JsonElement  jsonChild  JsonObject  jsonObject  Object  child  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( obj, obj ) ;^62^^^^^52^69^f.set ( obj, child ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  JsonElement  jsonChild  JsonObject  jsonObject  Object  child  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^f.set ( child, obj ) ;^62^^^^^52^69^f.set ( obj, child ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  JsonElement  jsonChild  JsonObject  jsonObject  Object  child  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^JsonElement jsonChild = fName.get ( jsonObject ) ;^59^^^^^52^69^JsonElement jsonChild = jsonObject.get ( fName ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitObjectField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] Type  typeOfF  boolean  JsonElement  jsonChild  JsonObject  jsonObject  Object  child  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( jsonChild == null )  {^79^^^^^71^88^if  ( jsonChild != null )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^Object array = visitChildAsArray ( jsonChild, typeOfF ) ;^80^^^^^71^88^Object array = visitChildAsArray ( typeOfF, jsonChild ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( array, array ) ;^81^^^^^71^88^f.set ( obj, array ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( obj, obj ) ;^81^^^^^71^88^f.set ( obj, array ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^f.set ( array, obj ) ;^81^^^^^71^88^f.set ( obj, array ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( array, null ) ;^83^^^^^71^88^f.set ( obj, null ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^JsonArray jsonChild =  ( JsonArray )  fName.get ( jsonObject ) ;^78^^^^^71^88^JsonArray jsonChild =  ( JsonArray )  jsonObject.get ( fName ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitArrayField [RETURN_TYPE] void   FieldAttributes f Type typeOfF Object obj [VARIABLES] JsonArray  jsonChild  Type  typeOfF  boolean  JsonObject  jsonObject  Object  array  obj  String  fName  FieldAttributes  f  IllegalAccessException  e  
[BugLab_Argument_Swapping]^return f.translateName ( namingPolicy ) ;^92^^^^^90^93^return namingPolicy.translateName ( f ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] getFieldName [RETURN_TYPE] String   FieldAttributes f [VARIABLES] boolean  FieldNamingStrategy2  namingPolicy  FieldAttributes  f  
[BugLab_Wrong_Operator]^if  ( child != null )  {^103^^^^^95^124^if  ( child == null )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( value, null ) ;^107^^^^^95^124^f.set ( parent, null ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Literal]^return false;^109^^^^^95^124^return true;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Literal]^return false;^104^^^^^95^124^return true;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( pair != null )  {^113^^^^^95^124^if  ( pair == null )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Literal]^return true;^114^^^^^95^124^return false;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Variable_Misuse]^if  ( parent != null || !typeInfo.isPrimitive (  )  )  {^117^^^^^95^124^if  ( value != null || !typeInfo.isPrimitive (  )  )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( value != null && !typeInfo.isPrimitive (  )  )  {^117^^^^^95^124^if  ( value != null || !typeInfo.isPrimitive (  )  )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( value == null || !typeInfo.isPrimitive (  )  )  {^117^^^^^95^124^if  ( value != null || !typeInfo.isPrimitive (  )  )  {^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Argument_Swapping]^f.set ( value, parent ) ;^118^^^^^95^124^f.set ( parent, value ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Literal]^return false;^120^^^^^95^124^return true;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Literal]^ObjectTypePair objTypePair = new ObjectTypePair ( null, declaredTypeOfField, true ) ;^111^^^^^95^124^ObjectTypePair objTypePair = new ObjectTypePair ( null, declaredTypeOfField, false ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Argument_Swapping]^JsonElement child = fName.getAsJsonObject (  ) .get ( json ) ;^101^^^^^95^124^JsonElement child = json.getAsJsonObject (  ) .get ( fName ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Argument_Swapping]^Pair<JsonDeserializer<?>, ObjectTypePair> pair = deserializers.getMatchingHandler ( objTypePair ) ;^112^^^^^95^124^Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler ( deserializers ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Argument_Swapping]^Object value = invokeCustomDeserializer ( pair, child ) ;^116^^^^^95^124^Object value = invokeCustomDeserializer ( child, pair ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Variable_Misuse]^f.set ( parent, parent ) ;^118^^^^^95^124^f.set ( parent, value ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Variable_Misuse]^JsonElement child = null.getAsJsonObject (  ) .get ( fName ) ;^101^^^^^95^124^JsonElement child = json.getAsJsonObject (  ) .get ( fName ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitFieldUsingCustomHandler [RETURN_TYPE] boolean   FieldAttributes f Type declaredTypeOfField Object parent [VARIABLES] Type  declaredTypeOfField  boolean  JsonElement  child  ObjectTypePair  objTypePair  Object  parent  value  String  fName  TypeInfo  typeInfo  FieldAttributes  f  Pair  pair  IllegalAccessException  e  
[BugLab_Wrong_Operator]^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: "   instanceof   json ) ;^129^130^^^^127^134^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: " + json ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  JsonPrimitive  prim  Object  primitive  
[BugLab_Wrong_Operator]^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: "  &  json ) ;^129^130^^^^127^134^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: " + json ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  JsonPrimitive  prim  Object  primitive  
[BugLab_Wrong_Operator]^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: "  ^  json ) ;^129^130^^^^127^134^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: " + json ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  JsonPrimitive  prim  Object  primitive  
[BugLab_Wrong_Operator]^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: "  >=  json ) ;^129^130^^^^127^134^throw new JsonParseException ( "Type information is unavailable, and the target object is not a primitive: " + json ) ;^[CLASS] JsonObjectDeserializationVisitor  [METHOD] visitPrimitive [RETURN_TYPE] void   Object primitive [VARIABLES] boolean  JsonPrimitive  prim  Object  primitive  
