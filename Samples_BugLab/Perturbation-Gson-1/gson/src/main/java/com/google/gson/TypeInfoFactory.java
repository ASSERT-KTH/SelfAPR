[BugLab_Variable_Misuse]^Class<?> classDefiningF = TypeUtils.toRawClass ( type ) ;^52^^^^^51^56^Class<?> classDefiningF = TypeUtils.toRawClass ( typeDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( typeDefiningF, typeDefiningF, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( type, type, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Argument_Swapping]^Type actualType = getActualType ( typeDefiningF, type, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Argument_Swapping]^Type actualType = getActualType ( type, classDefiningF, typeDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( type, actualType, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Variable_Misuse]^return new TypeInfo ( typeDefiningF ) ;^55^^^^^51^56^return new TypeInfo ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[BugLab_Variable_Misuse]^if  ( theSearchedType instanceof Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( typeToEvaluate  &  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( typeToEvaluate  &&  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( typeToEvaluate  ^  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( typeToEvaluate  ==  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( typeToEvaluate  >=  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( typeToEvaluate  <<  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( rawType instanceof ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  |  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ||  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ==  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >=  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( rawType instanceof GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >=  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <=  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ==  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <<  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >>  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >=  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <=  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  |  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( parentType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &&  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Type \'" + parentType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate  <<  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate  >  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], typeToEvaluate, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^return getActualType ( parentType.getUpperBounds (  ) [0], castedType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^return getActualType ( castedType.getUpperBounds (  ) [0], rawParentClass, parentType ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^return getActualType ( rawParentClass.getUpperBounds (  ) [0], parentType, castedType ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], rawType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Literal]^return getActualType ( castedType.getUpperBounds (  ) [1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Literal]^return getActualType ( castedType.getUpperBounds (  ) [indexOfActualTypeArgument], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Type \'" + parentType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate  <=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Type \'" + theSearchedType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate  &&  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( typeToEvaluate instanceof ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  >=  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  >  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  ^  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( rawType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <<  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( typeToEvaluate != null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( theSearchedType == null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return typeToEvaluate;^101^^^^^86^116^return theSearchedType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^theSearchedType = extractTypeForHierarchy ( rawType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return rawType;^101^^^^^86^116^return theSearchedType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^theSearchedType = extractTypeForHierarchy ( typeToEvaluate,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( parentType != null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^theSearchedType = extractTypeForHierarchy ( theSearchedType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return actualTypeParameters[indexOfActualTypeArgument];^92^^^^^77^107^return actualTypeArguments[indexOfActualTypeArgument];^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^int indexOfActualTypeArgument = getIndex ( fieldTypeVariable, classTypeVariables ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type[] actualTypeArguments = castedType.getActualTypeArguments (  ) ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 3 ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  !=  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >=  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( rawType != null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return parentType;^101^^^^^86^116^return theSearchedType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + typeToEvaluate + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ||  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ||  parentType  ||  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ||  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + rawType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ^  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( rawType instanceof ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  <  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  |  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  <<  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( parentType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &&  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeVariable<?>[] classTypeVariables = null.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( theSearchedType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <<  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Type \'" + theSearchedType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate  !=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate  <  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], theSearchedType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  &&  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  !=  parentType  !=  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &&  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate  >  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  <<  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >>  parentType  >>  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate  ==  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( typeToEvaluate.equals ( actualType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( componentType.equals ( rawType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^if  ( actualType.equals ( componentType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return rawType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^return actualType  <<  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( componentType, theSearchedType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^Type actualType = getActualType ( parentType, componentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^Type actualType = getActualType ( rawParentClass, parentType, componentType ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( typeToEvaluate, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^Type actualType = getActualType ( componentType, rawParentClass, parentType ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( theSearchedType.equals ( actualType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( componentType.equals ( typeToEvaluate )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( rawType )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( theSearchedType )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( theSearchedType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ^  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  |  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate  <=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate  &  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, 4 ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Literal]^return getActualType ( castedType.getUpperBounds (  ) [], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  &  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  ==  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <=  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  |  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >>  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  <  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >  parentType  >  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  |  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( 0, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <=  parentType  <=  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >=  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  &&  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  ||  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( this, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ||  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ^  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate  >=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate  ==  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return typeToEvaluate instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^return actualType  >>  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^: new GenericArrayTypeImpl ( typeToEvaluate ) ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &&  parentType  &&  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <=  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate  &  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( componentType, typeToEvaluate, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( 1, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, this ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  <=  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "   instanceof   parentType   instanceof   ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  !=  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( theSearchedType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( typeToEvaluate )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( parentType, actualTypeParameters, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( rawType, actualTypeArguments, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, theSearchedType ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^return new ParameterizedTypeImpl ( actualTypeParameters, rawType, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^return new ParameterizedTypeImpl ( owner, actualTypeParameters, rawType ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( typeToEvaluate, actualTypeParameters, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, typeToEvaluate ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type owner = objParameterizedType.getOwnerType (  ) ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type[] actualTypeParameters = extractRealTypes ( objParameterizedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , typeToEvaluate, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^Type[] actualTypeParameters = extractRealTypes ( parentType.getActualTypeArguments (  ) , castedType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^Type[] actualTypeParameters = extractRealTypes ( rawParentClass.getActualTypeArguments (  ) , parentType, castedType ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type rawType = objParameterizedType.getRawType (  ) ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^extractRealTypes ( objParameterizedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^extractRealTypes ( castedType.getActualTypeArguments (  ) , typeToEvaluate, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^extractRealTypes ( rawParentClass.getActualTypeArguments (  ) , parentType, castedType ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^extractRealTypes ( castedType.getActualTypeArguments (  ) , rawParentClass, parentType ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  |  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ||  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &&  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ==  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ||  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Type \'" + rawType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  >>  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ==  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  >>  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ==  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ==  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( rawType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <  parentType  <  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate  <  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  >  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ^  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate  ^  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( componentType.equals ( theSearchedType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^return actualType  >  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( componentType, parentType, 2 ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <<  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ^  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate  >>  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  <=  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeVariable<?>[] classTypeVariables = 0.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + theSearchedType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if   instanceof   ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "   instanceof   parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >=  parentType  >=  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate   instanceof   "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( theSearchedType, actualTypeParameters, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^return new ParameterizedTypeImpl ( rawType, owner, actualTypeParameters ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^: new GenericArrayTypeImpl ( rawType ) ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  |  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate  <<  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , theSearchedType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  &  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate  !=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^extractRealTypes ( parentType.getActualTypeArguments (  ) , castedType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return rawType;^61^^^^^46^76^return typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( parentType instanceof ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  !=  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  <<  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >>  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( parentType instanceof GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >=  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  typeToEvaluate  ||  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  |  parentType  |  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <<  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &  parentType  &  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( 2, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate  >>  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  !=  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate  >=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Type \'" + rawType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^return actualType  <  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( theSearchedType instanceof ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeVariable<?>[] classTypeVariables = 3.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate  &&  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, 0 ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^: new GenericArrayTypeImpl ( theSearchedType ) ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate   instanceof   "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, rawType ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  ^  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( rawType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  !=  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  |  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, null ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ^  parentType  ^  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 0 ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return theSearchedType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^return actualType  &  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type actualType = getActualType ( componentType, parentType, this ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  &&  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( typeToEvaluate  >>  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate  ^  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Type \'"  |  typeToEvaluate  |  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ==  parentType  ==  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^TypeVariable<?>[] classTypeVariables = 2.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( null, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 1 ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  !=  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return theSearchedType;^61^^^^^46^76^return typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^return actualType  >=  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, 2 ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , rawType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , rawParentClass, parentType ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( superClass instanceof Class<?> )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  >  Class<?> )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( superClass instanceof ParameterizedType )  {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( parentType  >>  ParameterizedType )  {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( parentType  |  ParameterizedType )  {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( searchedType instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( superClass instanceof ParameterizedType ||  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( superClass  &  ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  <= typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( superClass  <<  ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( superClass  >=  ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( superClass instanceof Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  ==  Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  >  Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( superClass instanceof ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( parentType  >=  ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( parentType  !=  ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^int indexOfActualTypeArgument = getIndex ( typeToEvaluate, classTypeVariables ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( superClass instanceof Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  |  Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( parentType  <<  Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^} else if  ( superClass instanceof ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( parentType  >=  ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^} else if  ( parentType  |  ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^int indexOfActualTypeArgument = getIndex ( typeToEvaluate, classTypeVariables ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^if  ( searchedType != null )  {^149^^^^^134^164^if  ( superClass != null )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Wrong_Operator]^if  ( superClass == null )  {^149^^^^^134^164^if  ( superClass != null )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Argument_Swapping]^searchedType = extractTypeForHierarchy ( typeToEvaluate, superClass ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^searchedType = extractTypeForHierarchy ( searchedType, typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^return superClass;^152^^^^^137^167^return searchedType;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( retTypes ) ;^157^^^^^155^164^Preconditions.checkNotNull ( actualTypeArguments ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < retTypes.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Argument_Swapping]^for  ( actualTypeArguments.lengthnt i = 0; i < i; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= actualTypeArguments.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Argument_Swapping]^retTypes[i] = getActualType ( rawParentClass[i], parentType, actualTypeArguments ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Variable_Misuse]^retTypes[i] = getActualType ( retTypes[i], parentType, rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Argument_Swapping]^retTypes[i] = getActualType ( parentType[i], actualTypeArguments, rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Argument_Swapping]^retTypes[i] = getActualType ( actualTypeArguments[i], rawParentClass, parentType ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < actualTypeArguments.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Variable_Misuse]^return actualTypeArguments;^163^^^^^155^164^return retTypes;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[BugLab_Variable_Misuse]^if  ( type.equals ( 1[i] )  )  {^168^^^^^166^174^if  ( type.equals ( types[i] )  )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Argument_Swapping]^if  ( types.equals ( type[i] )  )  {^168^^^^^166^174^if  ( type.equals ( types[i] )  )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Argument_Swapping]^for  ( types.lengthnt i = 0; i < i; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Argument_Swapping]^for  ( typesnt i = 0; i < i.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < typess.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > types.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Variable_Misuse]^if  ( null.equals ( types[i] )  )  {^168^^^^^166^174^if  ( type.equals ( types[i] )  )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[BugLab_Variable_Misuse]^if  ( type.equals ( null[i] )  )  {^168^^^^^166^174^if  ( type.equals ( types[i] )  )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
