[BugLab_Argument_Swapping]^return String.format ( "preserveType: %b, type: %s, preserveType: %s", obj, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^return String.format ( "preserveType: %b, obj: %s, type: %s", preserveType, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^return String.format ( "preserveType: %b, preserveType: %s, obj: %s", type, type, obj ) ;^50^^^^^49^51^return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[CLASS] ObjectTypePair  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  type  Object  obj  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( !preserveType || obj != null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Wrong_Operator]^if  ( !preserveType && obj == null )  {^56^^^^^53^67^if  ( !preserveType && obj != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Wrong_Operator]^if  ( handler == null )  {^60^^^^^53^67^if  ( handler != null )  {^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^return new Pair<HANDLER, ObjectTypePair> ( moreSpecificType, handler ) ;^61^^^^^53^67^return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Variable_Misuse]^handler = handlers.getHandlerFor ( type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^handler = moreSpecificType.type.getHandlerFor ( handlers ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^handler = handlers.getHandlerFor ( moreSpecificType.type.type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^handler = handlers.getHandlerFor ( moreSpecificType ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^handler = moreSpecificType.getHandlerFor ( handlers.type ) ;^59^^^^^53^67^handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^handler = type.getHandlerFor ( handlers ) ;^65^^^^^53^67^handler = handlers.getHandlerFor ( type ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Wrong_Operator]^return handler != null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^66^^^^^53^67^return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[CLASS] ObjectTypePair  [METHOD] getMatchingHandler [RETURN_TYPE] <HANDLER>   ParameterizedTypeHandlerMap<HANDLER> handlers [VARIABLES] Type  type  Object  obj  boolean  preserveType  ParameterizedTypeHandlerMap  handlers  HANDLER  handler  ObjectTypePair  moreSpecificType  
[BugLab_Argument_Swapping]^if  ( obj || preserveType == null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( preserveType && obj == null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( preserveType || obj != null )  {^70^^^^^69^78^if  ( preserveType || obj == null )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^Type actualType = getActualTypeIfMoreSpecific ( obj, type.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Variable_Misuse]^Type actualType = getActualTypeIfMoreSpecific ( actualType, obj.getClass (  )  ) ;^73^^^^^69^78^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^if  ( type == actualType )  {^74^^^^^69^78^if  ( actualType == type )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( actualType > type )  {^74^^^^^69^78^if  ( actualType == type )  {^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Variable_Misuse]^return new ObjectTypePair ( obj, type, preserveType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^return new ObjectTypePair ( actualType, obj, preserveType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^return new ObjectTypePair ( obj, preserveType, actualType ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Argument_Swapping]^return new ObjectTypePair ( preserveType, actualType, obj ) ;^77^^^^^69^78^return new ObjectTypePair ( obj, actualType, preserveType ) ;^[CLASS] ObjectTypePair  [METHOD] toMoreSpecificType [RETURN_TYPE] ObjectTypePair   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Variable_Misuse]^if  ( actualType instanceof Class<?> )  {^85^^^^^84^95^if  ( type instanceof Class<?> )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( type  >>  Class<?> )  {^85^^^^^84^95^if  ( type instanceof Class<?> )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Argument_Swapping]^if  ( actualClass.isAssignableFrom ( typeAsClass )  )  {^87^^^^^84^95^if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Variable_Misuse]^if  ( actualType == Object.class )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Variable_Misuse]^if  ( type == Object.typeAsClass )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( type >= Object.class )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( type <= Object.class )  {^90^^^^^84^95^if  ( type == Object.class )  {^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Variable_Misuse]^return actualType;^94^^^^^84^95^return type;^[CLASS] ObjectTypePair  [METHOD] getActualTypeIfMoreSpecific [RETURN_TYPE] Type   Type type Class<?> actualClass [VARIABLES] Type  actualType  type  Object  obj  Class  actualClass  typeAsClass  boolean  preserveType  
[BugLab_Wrong_Operator]^return  (  ( obj != null )  ? 31 : obj.hashCode (  )  ) ;^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Wrong_Literal]^return  (  ( obj == null )  ? 30 : obj.hashCode (  )  ) ;^101^^^^^98^102^return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[CLASS] ObjectTypePair  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  
[BugLab_Wrong_Operator]^if  ( this != obj )  {^106^^^^^105^131^if  ( this == obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return false;^107^^^^^105^131^return true;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^if  ( obj != null )  {^109^^^^^105^131^if  ( obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return true;^110^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^if  ( getClass (  )  == obj.getClass (  )  )  {^112^^^^^105^131^if  ( getClass (  )  != obj.getClass (  )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return true;^113^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^if  ( obj == null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^if  ( this.obj != null )  {^116^^^^^105^131^if  ( this.obj == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^} else if  ( obj != other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^} else if  ( this.obj != other.obj.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^} else if  ( other.obj != this.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^} else if  ( this.obj >= other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return true;^121^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^if  ( obj != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^if  ( other.obj.obj != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^if  ( other != null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^if  ( other.obj == null )  {^117^^^^^105^131^if  ( other.obj != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return true;^118^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^} else if  ( this.obj != obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^} else if  ( other != this.obj.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^} else if  ( this.obj != other )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^} else if  ( this.obj <= other.obj )  {^120^^^^^105^131^} else if  ( this.obj != other.obj )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^if  ( actualType == null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^if  ( type != null )  {^123^^^^^105^131^if  ( type == null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^} else if  ( !type.equals ( other.actualType )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^} else if  ( !type.equals ( actualType )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return true;^128^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^} else if  ( !type.equals ( other.type.type )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^if  ( type != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^if  ( other.type.type != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^if  ( other != null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^if  ( other.type == null )  {^124^^^^^105^131^if  ( other.type != null )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Literal]^return true;^125^^^^^105^131^return false;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^} else if  ( !type.equals ( type )  )  {^127^^^^^105^131^} else if  ( !type.equals ( other.type )  )  {^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Variable_Misuse]^return preserveType == preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^return other == preserveType.preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^return other.preserveType == preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Argument_Swapping]^return preserveType == other;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
[BugLab_Wrong_Operator]^return preserveType != other.preserveType;^130^^^^^105^131^return preserveType == other.preserveType;^[CLASS] ObjectTypePair  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  actualType  type  Object  obj  boolean  preserveType  ObjectTypePair  other  
