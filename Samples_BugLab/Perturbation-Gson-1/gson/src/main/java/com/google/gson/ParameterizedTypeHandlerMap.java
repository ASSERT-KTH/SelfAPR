[BugLab_Wrong_Literal]^private boolean modifiable = false;^41^^^^^36^46^private boolean modifiable = true;^[CLASS] ParameterizedTypeHandlerMap   [VARIABLES] 
[BugLab_Argument_Swapping]^Pair<Class<?>, T> pair = new Pair<Class<?>, T> ( value, typeOfT ) ;^44^^^^^43^46^Pair<Class<?>, T> pair = new Pair<Class<?>, T> ( typeOfT, value ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?> typeOfT T value [VARIABLES] boolean  modifiable  T  value  List  typeHierarchyList  Class  typeOfT  Logger  logger  Map  map  Pair  pair  
[BugLab_Variable_Misuse]^registerForTypeHierarchy ( 2 ) ;^45^^^^^43^46^registerForTypeHierarchy ( pair ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?> typeOfT T value [VARIABLES] boolean  modifiable  T  value  List  typeHierarchyList  Class  typeOfT  Logger  logger  Map  map  Pair  pair  
[BugLab_Wrong_Operator]^if  ( index > 0 )  {^53^^^^^48^66^if  ( index >= 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Literal]^if  ( index >= 1 )  {^53^^^^^48^66^if  ( index >= 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Operator]^if  ( index > 0 )  {^58^^^^^48^66^if  ( index >= 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Literal]^if  ( index >= index )  {^58^^^^^48^66^if  ( index >= 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The specified type handler for type "  !=  pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^59^60^61^^^48^66^throw new IllegalArgumentException ( "The specified type handler for type " + pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The specified type handler for type "  <=  pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^59^60^61^^^48^66^throw new IllegalArgumentException ( "The specified type handler for type " + pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Argument_Swapping]^+ index.get ( typeHierarchyList ) .first + ". Gson does not allow this." ) ;^61^^^^^48^66^+ typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The specified type handler for type "   instanceof   pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^59^60^61^^^48^66^throw new IllegalArgumentException ( "The specified type handler for type " + pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The specified type handler for type "  ^  pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^59^60^61^^^48^66^throw new IllegalArgumentException ( "The specified type handler for type " + pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Literal]^typeHierarchyList.add ( 1, pair ) ;^65^^^^^48^66^typeHierarchyList.add ( 0, pair ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerForTypeHierarchy [RETURN_TYPE] void   Class<?>, T> pair [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  int  index  Pair  pair  
[BugLab_Wrong_Operator]^for  ( int i = typeHierarchyList.size (  ) -1; i > 0; --i )  {^69^^^^^68^76^for  ( int i = typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfAnOverriddenHandler [RETURN_TYPE] int   Class<?> type [VARIABLES] boolean  modifiable  List  typeHierarchyList  Class  type  Logger  logger  Map  map  int  i  Pair  entry  
[BugLab_Wrong_Literal]^for  ( int i = typeHierarchyList.size (  ) -0; i >= 0; --i )  {^69^^^^^68^76^for  ( int i = typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfAnOverriddenHandler [RETURN_TYPE] int   Class<?> type [VARIABLES] boolean  modifiable  List  typeHierarchyList  Class  type  Logger  logger  Map  map  int  i  Pair  entry  
[BugLab_Argument_Swapping]^Pair<Class<?>, T> entry = i.get ( typeHierarchyList ) ;^70^^^^^68^76^Pair<Class<?>, T> entry = typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfAnOverriddenHandler [RETURN_TYPE] int   Class<?> type [VARIABLES] boolean  modifiable  List  typeHierarchyList  Class  type  Logger  logger  Map  map  int  i  Pair  entry  
[BugLab_Variable_Misuse]^Pair<Class<?>, T> entry = null.get ( i ) ;^70^^^^^68^76^Pair<Class<?>, T> entry = typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfAnOverriddenHandler [RETURN_TYPE] int   Class<?> type [VARIABLES] boolean  modifiable  List  typeHierarchyList  Class  type  Logger  logger  Map  map  int  i  Pair  entry  
[BugLab_Wrong_Literal]^for  ( int i = typeHierarchyList.size (  ) -i; i >= 0; --i )  {^69^^^^^68^76^for  ( int i = typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfAnOverriddenHandler [RETURN_TYPE] int   Class<?> type [VARIABLES] boolean  modifiable  List  typeHierarchyList  Class  type  Logger  logger  Map  map  int  i  Pair  entry  
[BugLab_Argument_Swapping]^map.put ( value, typeOfT ) ;^85^^^^^78^86^map.put ( typeOfT, value ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] register [RETURN_TYPE] void   Type typeOfT T value [VARIABLES] List  typeHierarchyList  Type  typeOfT  boolean  modifiable  Logger  logger  T  value  Map  map  
[BugLab_Argument_Swapping]^for  ( Map.Entry<Type, T> entry : other.map.map.entrySet (  )  )  {^92^^^^^88^106^for  ( Map.Entry<Type, T> entry : other.map.entrySet (  )  )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^for  ( Map.Entry<Type, T> entry : other.entrySet (  )  )  {^92^^^^^88^106^for  ( Map.Entry<Type, T> entry : other.map.entrySet (  )  )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Variable_Misuse]^if  ( i < 0 )  {^102^^^^^88^106^if  ( index < 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Operator]^if  ( index <= 0 )  {^102^^^^^88^106^if  ( index < 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Literal]^if  ( index <  )  {^102^^^^^88^106^if  ( index < 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Operator]^for  ( int i = other.typeHierarchyList.size (  ) -1; i > 0; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Literal]^for  ( int i = other.typeHierarchyList.size (  ) -index; i >= 0; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Literal]^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= -1; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Literal]^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= index; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Literal]^if  ( index < i )  {^102^^^^^88^106^if  ( index < 0 )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Variable_Misuse]^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( index ) ;^100^^^^^88^106^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^Pair<Class<?>, T> entry = i.typeHierarchyList.get ( other ) ;^100^^^^^88^106^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^Pair<Class<?>, T> entry = other.get ( i ) ;^100^^^^^88^106^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Variable_Misuse]^Pair<Class<?>, T> entry = this.typeHierarchyList.get ( i ) ;^100^^^^^88^106^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^Pair<Class<?>, T> entry = i.get ( other.typeHierarchyList ) ;^100^^^^^88^106^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Variable_Misuse]^for  ( int i = null.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^for  ( int i = other.typeHierarchyList.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^for  ( int i = other.size (  ) -1; i >= 0; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Wrong_Literal]^for  ( int i = other.typeHierarchyList.size (  ) -i; i >= 0; --i )  {^99^^^^^88^106^for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Variable_Misuse]^Pair<Class<?>, T> entry = 0.get ( i ) ;^100^^^^^88^106^Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   ParameterizedTypeHandlerMap<T> other [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  other  Map  map  int  i  index  Pair  entry  
[BugLab_Argument_Swapping]^register ( value, typeOfT ) ;^113^^^^^108^115^register ( typeOfT, value ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] registerIfAbsent [RETURN_TYPE] void   Type typeOfT T value [VARIABLES] List  typeHierarchyList  Type  typeOfT  boolean  modifiable  Logger  logger  T  value  Map  map  
[BugLab_Wrong_Literal]^modifiable = true;^118^^^^^117^119^modifiable = false;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] makeUnmodifiable [RETURN_TYPE] void   [VARIABLES] List  typeHierarchyList  boolean  modifiable  Logger  logger  Map  map  
[BugLab_Argument_Swapping]^T handler = type.get ( map ) ;^122^^^^^121^134^T handler = map.get ( type ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Variable_Misuse]^T handler = 3.get ( type ) ;^122^^^^^121^134^T handler = map.get ( type ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Wrong_Operator]^if  ( handler != null )  {^123^^^^^121^134^if  ( handler == null )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Argument_Swapping]^if  ( type != rawClass )  {^125^^^^^121^134^if  ( rawClass != type )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Wrong_Operator]^if  ( rawClass >= type )  {^125^^^^^121^134^if  ( rawClass != type )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Wrong_Operator]^if  ( handler != null )  {^128^^^^^121^134^if  ( handler == null )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Variable_Misuse]^handler = getHandlerFor ( null ) ;^126^^^^^121^134^handler = getHandlerFor ( rawClass ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Variable_Misuse]^handler = getHandlerForTypeHierarchy ( 3 ) ;^130^^^^^121^134^handler = getHandlerForTypeHierarchy ( rawClass ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getHandlerFor [RETURN_TYPE] T   Type type [VARIABLES] Type  type  boolean  modifiable  T  handler  List  typeHierarchyList  Class  rawClass  Logger  logger  Map  map  
[BugLab_Argument_Swapping]^return type.containsKey ( map ) ;^146^^^^^145^147^return map.containsKey ( type ) ;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] hasSpecificHandlerFor [RETURN_TYPE] boolean   Type type [VARIABLES] List  typeHierarchyList  Type  type  boolean  modifiable  Logger  logger  Map  map  
[BugLab_Wrong_Operator]^for  ( int i = typeHierarchyList.size (  ) -1; i > 0; --i )  {^150^^^^^149^156^for  ( int i = typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfSpecificHandlerForTypeHierarchy [RETURN_TYPE] int   Class<?> type [VARIABLES] List  typeHierarchyList  Class  type  boolean  modifiable  Logger  logger  Map  map  int  i  
[BugLab_Wrong_Literal]^for  ( int i = typeHierarchyList.size (  ) -i; i >= 0; --i )  {^150^^^^^149^156^for  ( int i = typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfSpecificHandlerForTypeHierarchy [RETURN_TYPE] int   Class<?> type [VARIABLES] List  typeHierarchyList  Class  type  boolean  modifiable  Logger  logger  Map  map  int  i  
[BugLab_Wrong_Literal]^for  ( int i = typeHierarchyList.size (  ) -1; i >= i; --i )  {^150^^^^^149^156^for  ( int i = typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfSpecificHandlerForTypeHierarchy [RETURN_TYPE] int   Class<?> type [VARIABLES] List  typeHierarchyList  Class  type  boolean  modifiable  Logger  logger  Map  map  int  i  
[BugLab_Argument_Swapping]^if  ( type.equals ( i.get ( typeHierarchyList ) .first )  )  {^151^^^^^149^156^if  ( type.equals ( typeHierarchyList.get ( i ) .first )  )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] getIndexOfSpecificHandlerForTypeHierarchy [RETURN_TYPE] int   Class<?> type [VARIABLES] List  typeHierarchyList  Class  type  boolean  modifiable  Logger  logger  Map  map  int  i  
[BugLab_Variable_Misuse]^return null;^166^^^^^158^167^return copy;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] copyOf [RETURN_TYPE] ParameterizedTypeHandlerMap   [VARIABLES] Entry  entry  boolean  modifiable  List  typeHierarchyList  Logger  logger  ParameterizedTypeHandlerMap  copy  Map  map  Pair  entry  
[BugLab_Wrong_Literal]^boolean first = false;^172^^^^^170^195^boolean first = true;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  entry  boolean  first  modifiable  StringBuilder  sb  List  typeHierarchyList  Logger  logger  Map  map  Pair  entry  
[BugLab_Variable_Misuse]^if  ( modifiable )  {^174^^^^^170^195^if  ( first )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  entry  boolean  first  modifiable  StringBuilder  sb  List  typeHierarchyList  Logger  logger  Map  map  Pair  entry  
[BugLab_Wrong_Literal]^first = true;^175^^^^^170^195^first = false;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  entry  boolean  first  modifiable  StringBuilder  sb  List  typeHierarchyList  Logger  logger  Map  map  Pair  entry  
[BugLab_Wrong_Literal]^first = false;^183^^^^^170^195^first = true;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  entry  boolean  first  modifiable  StringBuilder  sb  List  typeHierarchyList  Logger  logger  Map  map  Pair  entry  
[BugLab_Variable_Misuse]^if  ( modifiable )  {^185^^^^^170^195^if  ( first )  {^[CLASS] ParameterizedTypeHandlerMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  entry  boolean  first  modifiable  StringBuilder  sb  List  typeHierarchyList  Logger  logger  Map  map  Pair  entry  
[BugLab_Wrong_Literal]^first = true;^186^^^^^170^195^first = false;^[CLASS] ParameterizedTypeHandlerMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  entry  boolean  first  modifiable  StringBuilder  sb  List  typeHierarchyList  Logger  logger  Map  map  Pair  entry  
