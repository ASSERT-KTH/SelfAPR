[buglab_swap_variables]^throw buildUnexpectedTypeError (  ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[buglab_swap_variables]^throw buildUnexpectedTypeError ( type, ParameterizedType. GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[buglab_swap_variables]^throw buildUnexpectedTypeError (  ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[buglab_swap_variables]^throw buildUnexpectedTypeError ( type, ParameterizedType. GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[buglab_swap_variables]^throw buildUnexpectedTypeError (  Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[buglab_swap_variables]^if  ( from.equals ( type )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^throw buildUnexpectedTypeError (  Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^throw buildUnexpectedTypeError ( type, Class. ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom (   ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^return from.isAssignableFrom ( getRawType ( rawType )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^&& isAssignableFrom (   ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^return isAssignableFrom (   ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^169^170^^^^157^178^return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^return from.isAssignableFrom ( getRawType ( rawType )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[buglab_swap_variables]^if  ( t instanceof ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[buglab_swap_variables]^if  ( toGenericComponentTypeoGenericComponentType instanceof ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[buglab_swap_variables]^return isAssignableFrom (   ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[buglab_swap_variables]^if  ( from.equals ( to )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^arg = v.get ( typeVarMap.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( typeEquals ( typeVarMap, to, ptype )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( typeEquals (  to, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( typeEquals ( to, ptype, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( typeEquals ( ptype,  typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( typeEquals ( ptype, to )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^for  ( tArgsnt i = 0; i < i.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^typeVarMap.put ( arg.getName (  ) , var ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^typeVarMap.put ( var.getName (  )  ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^for  ( tArgs.lengthnt i = 0; i < i; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom ( to, itype, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom (  to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom ( itype,  new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom ( itype, typeVarMap, new HashMap<String, Type> ( to )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom ( typeVarMap, to, new HashMap<String, Type> ( sType )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom (  to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom ( to, sType, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( isAssignableFrom ( sType,  new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( to.getRawType (  ) .equals ( from.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( !matches ( typeVarMap[i], toArgs[i], fromArgs )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( !matches ( fromArgs[i][i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( !matches ( fromArgs[i], typeVarMap[i], toArgs )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( !matches ( fromArgs[i], toArgs[i] )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^for  ( fromArgs.lengthnt i = 0; i < i; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( !matches ( toArgs[i], fromArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < fromArgs; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[buglab_swap_variables]^if  ( from.equals ( to )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[buglab_swap_variables]^return typeMap.equals ( to.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[buglab_swap_variables]^return typeype.equals ( t.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[buglab_swap_variables]^return t.equals ( type.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[buglab_swap_variables]^return t.type.equals ( type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[buglab_swap_variables]^return t.typeype.equals ( t ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
