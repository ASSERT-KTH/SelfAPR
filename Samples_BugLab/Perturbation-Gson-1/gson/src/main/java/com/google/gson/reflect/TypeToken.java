[BugLab_Wrong_Operator]^if  ( o != null )  {^79^^^^^78^83^if  ( o == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[BugLab_Variable_Misuse]^Type superclass = 4.getGenericSuperclass (  ) ;^89^^^^^88^94^Type superclass = subclass.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( type instanceof Class<?> )  {^90^^^^^88^94^if  ( superclass instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^if  ( superclass  >=  Class<?> )  {^90^^^^^88^94^if  ( superclass instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[BugLab_Wrong_Literal]^return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [1];^93^^^^^88^94^return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [0];^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( superclass instanceof Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( type  >>  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( type  |  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( type  &  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( type  <  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^} else if  ( superclass instanceof ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  <  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  <=  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  ||  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^} else if  ( superclass instanceof GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  |  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( superclass, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.subclass ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -1 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 1 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.subclass ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( superclass, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^if  ( type instanceof Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( rawType  |  Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( type, Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( rawType, Class.subclass ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( rawType  &  Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  <  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  >=  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  >  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  ^  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  >>  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^if  ( rawType  >=  Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  !=  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[BugLab_Variable_Misuse]^return superclass;^144^^^^^143^145^return type;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getType [RETURN_TYPE] Type   [VARIABLES] Type  rawType  superclass  type  Class  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( type == null )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^if  ( from != null )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Literal]^return true;^159^^^^^157^178^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( superclass.equals ( from )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Argument_Swapping]^if  ( from.equals ( type )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Literal]^return false;^163^^^^^157^178^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( type.equals ( superclass )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( superclass instanceof Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^if  ( type  >=  Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^if  ( type  &  Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^if  ( type  <=  Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  >=  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  !=  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^} else if  ( superclass instanceof GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  ||  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( superclass, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.subclass ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.rawType ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^return rawType.isAssignableFrom ( getRawType ( type )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Argument_Swapping]^return from.isAssignableFrom ( getRawType ( rawType )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^return rawType.isAssignableFrom ( getRawType ( from )  ) || isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^&& isAssignableFrom ( type,  ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^return this.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^return isAssignableFrom ( type,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^169^170^^^^157^178^return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  >=  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^return rawType.isAssignableFrom ( getRawType ( type )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Argument_Swapping]^return from.isAssignableFrom ( getRawType ( rawType )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^} else if  ( superclass instanceof ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  ==  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  |  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^} else if  ( type  >>  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^if  ( type instanceof ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^if  ( typeoGenericComponentType instanceof ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^if  ( toGenericComponentType  >  ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^if  ( toGenericComponentType  >=  ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^if  ( toGenericComponentType  &  ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^classType = 4.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^if  ( type instanceof GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^if  ( from  &  GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^if  ( from  ^  GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^} else if  ( type instanceof Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^} else if  ( from  <  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^classType = null.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^} else if  ( from  ^  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^return isAssignableFrom ( toGenericComponentType,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^Type t = type;^194^^^^^191^210^Type t = from;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^return isAssignableFrom ( type,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^if  ( from  >=  GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^} else if  ( from  >  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Operator]^} else if  ( from  ||  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Wrong_Literal]^return false;^209^^^^^191^210^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[BugLab_Variable_Misuse]^if  ( superclass == null )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^if  ( from != null )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return true;^220^^^^^205^235^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( ptype.equals ( from )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( to.equals ( t )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( from.equals ( to )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return false;^224^^^^^209^239^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( to.equals ( superclass )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^Class<?> clazz = getRawType ( superclass ) ;^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^Class<?> clazz = getRawType ( t ) ;^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( type instanceof ParameterizedType )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^if  ( from  >=  ParameterizedType )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^while  ( type instanceof TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^while  ( arg  &  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^arg = v.get ( typeVarMap.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^arg = typeVarMap.get ( 4.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( to != null )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^if  ( ptype == null )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^while  ( superclass instanceof TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^while  ( arg  >=  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( typeEquals ( to, ptype, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( typeEquals ( typeVarMap, to, ptype )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return false;^250^^^^^235^265^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^for  ( tArgs.lengthnt i = 0; i < i; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^while  ( arg  ^  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^typeVarMap.put ( var.getName (  ) , superclass ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^typeVarMap.put ( arg.getName (  ) , var ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^Type[] tArgs = to.getActualTypeArguments (  ) ;^236^^^^^221^251^Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( typeEquals ( ptype, typeVarMap, to )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^for  ( tArgsnt i = 0; i < i.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^while  ( t instanceof TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^while  ( arg  !=  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^arg = typeVarMap.get ( null.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^typeVarMap.put ( null.getName (  ) , arg ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^typeVarMap.put ( 3.getName (  ) , arg ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( typeEquals ( ptype, ptype, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( itype, ptype, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( typeVarMap, to, new HashMap<String, Type> ( itype )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( to, itype, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return false;^256^^^^^241^271^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( itype, typeVarMap, new HashMap<String, Type> ( to )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( superclass, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( sType, ptype, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( 2 )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( to, sType, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( sType, typeVarMap, new HashMap<String, Type> ( to )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return false;^263^^^^^248^278^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return true;^266^^^^^251^281^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( to.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( from.getRawType (  ) .equals ( from.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( to.getRawType (  ) .equals ( from.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( !matches ( toArgs[i], toArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( !matches ( fromArgs[i], fromArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( !matches ( toArgs[i], fromArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return true;^280^^^^^273^286^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < toArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^for  ( fromArgs.lengthnt i = 0; i < i; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( !matches ( fromArgs[i], typeVarMap[i], toArgs )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return false;^283^^^^^273^286^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^Type[] toArgs = from.getActualTypeArguments (  ) ;^276^^^^^273^286^Type[] fromArgs = from.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^Type[] fromArgs = to.getActualTypeArguments (  ) ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Argument_Swapping]^if  ( !matches ( typeVarMap[i], toArgs[i], fromArgs )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Wrong_Literal]^return true;^285^^^^^273^286^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[BugLab_Variable_Misuse]^if  ( type.equals ( from )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^if  ( to.equals ( type )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Argument_Swapping]^if  ( from.equals ( to )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Wrong_Literal]^if  ( to.equals ( from )  )  return false;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^if  ( t.equals ( from )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^if  ( toGenericComponentType instanceof TypeVariable<?> )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Wrong_Operator]^if  ( from  |  TypeVariable<?> )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^return type.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Argument_Swapping]^return typeMap.equals ( to.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^return t.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^return to.equals ( 1.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^return superclass.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Wrong_Literal]^return true;^300^^^^^292^301^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[BugLab_Variable_Misuse]^return superclass.hashCode (  ) ;^308^^^^^307^309^return type.hashCode (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^if  ( o <= this )  {^317^^^^^316^325^if  ( o == this )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Wrong_Literal]^return false;^318^^^^^316^325^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Wrong_Operator]^if  ( ! ( o  &  TypeToken<?> )  )  {^320^^^^^316^325^if  ( ! ( o instanceof TypeToken<?> )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Wrong_Literal]^return true;^321^^^^^316^325^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Variable_Misuse]^return superclass.equals ( t.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Variable_Misuse]^return type.equals ( to ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Argument_Swapping]^return typeype.equals ( t.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Argument_Swapping]^return t.type.equals ( type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Argument_Swapping]^return t.typeype.equals ( t ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Variable_Misuse]^return toGenericComponentType.equals ( t.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Variable_Misuse]^return type.equals ( superclass ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[BugLab_Variable_Misuse]^return superclass instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[BugLab_Wrong_Operator]^return type  ||  Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[BugLab_Variable_Misuse]^exceptionMessage.append ( "but got: " ) .append ( to.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[BugLab_Variable_Misuse]^exceptionMessage.append ( "but got: " ) .append ( toGenericComponentType.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[BugLab_Variable_Misuse]^exceptionMessage.append ( "but got: " ) .append ( type.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[BugLab_Variable_Misuse]^exceptionMessage.append ( "but got: " ) .append ( superclass.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[BugLab_Variable_Misuse]^exceptionMessage.append ( "but got: " ) .append ( t.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[BugLab_Variable_Misuse]^.append ( ", for type superclass: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^347^^^^^337^350^.append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[BugLab_Variable_Misuse]^return new SimpleTypeToken<Object> ( superclass ) ;^356^^^^^355^357^return new SimpleTypeToken<Object> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] TypeToken   Type type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  boolean  
