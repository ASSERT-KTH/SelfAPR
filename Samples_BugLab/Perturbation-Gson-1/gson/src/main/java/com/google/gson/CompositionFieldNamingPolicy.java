[buglab_swap_variables]^target = target.translateName ( policy, fieldType, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = policy.translateName (  fieldType, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = policy.translateName ( target, annotations, fieldType ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = policy.translateName ( target,  annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = policy.translateName ( annotations, fieldType, target ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = policy.translateName ( target, fieldType ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = annotations.translateName ( target, fieldType, policy ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[buglab_swap_variables]^target = fieldType.translateName ( target, policy, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
