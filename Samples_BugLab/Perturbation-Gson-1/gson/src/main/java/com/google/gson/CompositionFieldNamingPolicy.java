[BugLab_Variable_Misuse]^if  ( fieldPolicies == null )  {^33^^^^^32^37^if  ( fieldNamingPolicies == null )  {^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[BugLab_Wrong_Operator]^if  ( fieldNamingPolicies != null )  {^33^^^^^32^37^if  ( fieldNamingPolicies == null )  {^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[BugLab_Variable_Misuse]^this.fieldPolicies = fieldPolicies;^36^^^^^32^37^this.fieldPolicies = fieldNamingPolicies;^[CLASS] CompositionFieldNamingPolicy  [METHOD] <init> [RETURN_TYPE] RecursiveFieldNamingPolicy[])    fieldNamingPolicies [VARIABLES] RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  boolean  
[BugLab_Argument_Swapping]^target = annotations.translateName ( target, fieldType, policy ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[BugLab_Argument_Swapping]^target = policy.translateName ( fieldType, target, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[BugLab_Argument_Swapping]^target = policy.translateName ( target, annotations, fieldType ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
[BugLab_Argument_Swapping]^target = fieldType.translateName ( target, policy, annotations ) ;^42^^^^^40^45^target = policy.translateName ( target, fieldType, annotations ) ;^[CLASS] CompositionFieldNamingPolicy  [METHOD] translateName [RETURN_TYPE] String   String target Type fieldType Annotation> annotations [VARIABLES] Collection  annotations  Type  fieldType  String  target  boolean  RecursiveFieldNamingPolicy[]  fieldNamingPolicies  fieldPolicies  RecursiveFieldNamingPolicy  policy  
