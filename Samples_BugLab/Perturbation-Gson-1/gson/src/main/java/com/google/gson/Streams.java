[BugLab_Variable_Misuse]^if  ( value == null || element.isJsonNull (  )  )  {^88^^^^^73^103^if  ( element == null || element.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^if  ( valuelement == null || element.isJsonNull (  )  )  {^88^^^^^73^103^if  ( element == null || element.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^if  ( e == null || elementlement.isJsonNull (  )  )  {^88^^^^^73^103^if  ( element == null || element.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Wrong_Operator]^if  ( element == null && element.isJsonNull (  )  )  {^88^^^^^73^103^if  ( element == null || element.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Wrong_Operator]^if  ( element != null || element.isJsonNull (  )  )  {^88^^^^^73^103^if  ( element == null || element.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^} else if  ( value.isJsonPrimitive (  )  )  {^93^^^^^78^108^} else if  ( element.isJsonPrimitive (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^} valuelse if  ( element.isJsonPrimitive (  )  )  {^93^^^^^78^108^} else if  ( element.isJsonPrimitive (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^} elementlse if  ( e.isJsonPrimitive (  )  )  {^93^^^^^78^108^} else if  ( element.isJsonPrimitive (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^} else if  ( value.isJsonArray (  )  )  {^103^^^^^88^118^} else if  ( element.isJsonArray (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^} valuelse if  ( element.isJsonArray (  )  )  {^103^^^^^88^118^} else if  ( element.isJsonArray (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^} elementlse if  ( e.isJsonArray (  )  )  {^103^^^^^88^118^} else if  ( element.isJsonArray (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^if  ( !serializeNulls && element.isJsonNull (  )  )  {^119^^^^^104^134^if  ( !serializeNulls && value.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Wrong_Operator]^if  ( !serializeNulls || value.isJsonNull (  )  )  {^119^^^^^104^134^if  ( !serializeNulls && value.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^for  ( Map.Entry<String, JsonElement> e : value.getAsJsonObject (  ) .entrySet (  )  )  {^117^^^^^102^132^for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^write ( element, serializeNulls, writer ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^write ( writer, serializeNulls, value ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^write ( serializeNulls, value, writer ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^} else if  ( value.isJsonObject (  )  )  {^115^^^^^100^130^} else if  ( element.isJsonObject (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^if  ( value.isJsonNull (  )  )  {^107^^^^^92^122^if  ( e.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^write ( value, serializeNulls, writer ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^write ( serializeNulls, e, writer ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^write ( e, writer, serializeNulls ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^for  ( JsonElement e : value.getAsJsonArray (  )  )  {^105^^^^^90^120^for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^write ( writer, serializeNulls, e ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^writer.name ( null.getKey (  )  ) ;^122^^^^^107^137^writer.name ( e.getKey (  )  ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^write ( value, writer, serializeNulls ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^JsonPrimitive primitive = value.getAsJsonPrimitive (  ) ;^94^^^^^79^109^JsonPrimitive primitive = element.getAsJsonPrimitive (  ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^writer.name ( 0.getKey (  )  ) ;^122^^^^^107^137^writer.name ( e.getKey (  )  ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Argument_Swapping]^} elementlse if  ( e.isJsonObject (  )  )  {^115^^^^^100^130^} else if  ( element.isJsonObject (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^JsonElement value = 3.getValue (  ) ;^118^^^^^103^133^JsonElement value = e.getValue (  ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^JsonElement value = this.getValue (  ) ;^118^^^^^103^133^JsonElement value = e.getValue (  ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Variable_Misuse]^} nulllse if  ( element.isJsonObject (  )  )  {^115^^^^^100^130^} else if  ( element.isJsonObject (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[BugLab_Wrong_Operator]^return appendable  !=  Writer ?  ( Writer )  appendable : new AppendableWriter ( appendable ) ;^133^^^^^132^134^return appendable instanceof Writer ?  ( Writer )  appendable : new AppendableWriter ( appendable ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] writerForAppendable [RETURN_TYPE] Writer   Appendable appendable [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^appendable.append ( currentWrite, length, offset + offset ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[BugLab_Wrong_Operator]^appendable.append ( currentWrite, offset, offset  >=  length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return chars;^166^^^^^165^167^return chars.length;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return chars.length.length;^166^^^^^165^167^return chars.length;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( chars, end, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( start, chars, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Wrong_Operator]^return new String ( chars, start, end  ||  start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( end, start, chars - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Wrong_Operator]^return new String ( chars, start, end  >=  start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Variable_Misuse]^appendable.append ( currentWrite, offset, offset + offset ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^appendable.append ( currentWrite, length, offset + offset ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^appendable.append ( length, offset, offset + currentWrite ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[BugLab_Wrong_Operator]^appendable.append ( currentWrite, offset, offset  !=  length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[BugLab_Variable_Misuse]^return this;^166^^^^^165^167^return chars.length;^[CLASS] AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return chars;^166^^^^^165^167^return chars.length;^[CLASS] AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return chars.length.length;^166^^^^^165^167^return chars.length;^[CLASS] AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( chars, end, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( end, start, chars - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Wrong_Operator]^return new String ( chars, start, end  ^  start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( start, chars, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Wrong_Operator]^return new String ( chars, start, end  <=  start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[BugLab_Argument_Swapping]^return chars;^166^^^^^165^167^return chars.length;^[CLASS] CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] char[]  chars  boolean  
[BugLab_Argument_Swapping]^return chars.length.length;^166^^^^^165^167^return chars.length;^[CLASS] CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] char[]  chars  boolean  
[BugLab_Argument_Swapping]^return new String ( chars, end, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[BugLab_Argument_Swapping]^return new String ( start, chars, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[BugLab_Wrong_Operator]^return new String ( chars, start, end  !=  start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[BugLab_Argument_Swapping]^return new String ( end, start, chars - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[BugLab_Wrong_Operator]^return new String ( chars, start, end  <=  start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
