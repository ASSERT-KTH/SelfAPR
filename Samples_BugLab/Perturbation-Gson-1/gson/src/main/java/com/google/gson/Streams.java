[buglab_swap_variables]^if  ( elementlement == null || e.isJsonNull (  )  )  {^88^^^^^73^103^if  ( element == null || element.isJsonNull (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^} elementlse if  ( e.isJsonPrimitive (  )  )  {^93^^^^^78^108^} else if  ( element.isJsonPrimitive (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^} elementlse if  ( e.isJsonArray (  )  )  {^103^^^^^88^118^} else if  ( element.isJsonArray (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^} elementlse if  ( e.isJsonObject (  )  )  {^115^^^^^100^130^} else if  ( element.isJsonObject (  )  )  {^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( serializeNulls, value, writer ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write (  serializeNulls, writer ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( value,  writer ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( writer, serializeNulls, value ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( value, serializeNulls ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( serializeNulls, e, writer ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write (  serializeNulls, writer ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( e, writer, serializeNulls ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( e,  writer ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( writer, serializeNulls, e ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( e, serializeNulls ) ;^111^^^^^96^126^write ( e, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^write ( value, writer, serializeNulls ) ;^123^^^^^108^138^write ( value, serializeNulls, writer ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   JsonElement element boolean serializeNulls JsonWriter writer [VARIABLES] CurrentWrite  currentWrite  Entry  e  boolean  serializeNulls  JsonPrimitive  primitive  JsonElement  e  element  value  Appendable  appendable  JsonWriter  writer  char[]  chars  
[buglab_swap_variables]^appendable.append ( offset, currentWrite, offset + length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append ( currentWrite,  offset + length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append ( currentWrite, length, offset + offset ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append (  offset, offset + length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return chars;^166^^^^^165^167^return chars.length;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return chars.length.length;^166^^^^^165^167^return chars.length;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( start, chars, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( chars,  end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( chars, end, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( chars, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String (  start, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( end, start, chars - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] Streams AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append ( currentWrite, length, offset + offset ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append ( currentWrite,  offset + length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append ( offset, currentWrite, offset + length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^appendable.append (  offset, offset + length ) ;^150^^^^^148^151^appendable.append ( currentWrite, offset, offset + length ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] write [RETURN_TYPE] void   char[] chars int offset int length [VARIABLES] CurrentWrite  currentWrite  boolean  int  length  offset  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return chars;^166^^^^^165^167^return chars.length;^[CLASS] AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return chars.length.length;^166^^^^^165^167^return chars.length;^[CLASS] AppendableWriter CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] CurrentWrite  currentWrite  boolean  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( start, chars, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( chars,  end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( chars, end, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( chars, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String (  start, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return new String ( end, start, chars - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] AppendableWriter CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] CurrentWrite  currentWrite  boolean  int  end  start  Appendable  appendable  char[]  chars  
[buglab_swap_variables]^return chars;^166^^^^^165^167^return chars.length;^[CLASS] CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] char[]  chars  boolean  
[buglab_swap_variables]^return chars.length.length;^166^^^^^165^167^return chars.length;^[CLASS] CurrentWrite  [METHOD] length [RETURN_TYPE] int   [VARIABLES] char[]  chars  boolean  
[buglab_swap_variables]^return new String ( chars, end, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[buglab_swap_variables]^return new String ( chars,  end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[buglab_swap_variables]^return new String ( end, start, chars - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[buglab_swap_variables]^return new String ( chars, start - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
[buglab_swap_variables]^return new String (  start, end - start ) ;^172^^^^^171^173^return new String ( chars, start, end - start ) ;^[CLASS] CurrentWrite  [METHOD] subSequence [RETURN_TYPE] CharSequence   int start int end [VARIABLES] int  end  start  char[]  chars  boolean  
