[buglab_swap_variables]^if  ( isFirst && visited )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^boolean visited = visitChild ( member, object.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^boolean visited = visitChild (  member.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^boolean visited = visitChild ( object.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^boolean visited = visitChild ( isFirst, member.getKey (  ) , member.getValue (  ) , object ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  )  ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^boolean visited = visitChild ( object, isFirst.getKey (  ) , member.getValue (  ) , member ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitChild ( isFirst, child, array ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitChild (  child, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitChild ( array, isFirst, child ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitChild ( array,  isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitChild ( array, child ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitChild ( child, array, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[buglab_swap_variables]^visitor.visitObjectMember ( childName, parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember (  childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, isFirst, child.getAsJsonPrimitive (  ) , childName ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent,  child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parentName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  )  ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( childAsObject, childName, parent, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember (  childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent,  childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName,  isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, isFirst, childAsObject, childName ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName, childAsObject ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( childName, parent, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childAsObject, childName, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( isFirst, childName, childAsObject, parent ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( isFirst, childName, child.getAsJsonPrimitive (  ) , parent ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, isFirstName, child.getAsJsonPrimitive (  ) , child ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( childAsArray, childName, parent, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember (  childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( childName, parent, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent,  childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName,  isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName, isFirst, childAsArray ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName, childAsArray ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( isFirst, childName, childAsArray, parent ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childName, isFirst, childAsObject ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( child, parentName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, child, childName.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullObjectMember (  childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullObjectMember ( parent,  isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullObjectMember ( parent, isFirst, childName ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullObjectMember ( parent, childName ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullObjectMember ( isFirst, childName, parent ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullObjectMember ( childName, parent, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, isFirst, childAsArray, childName ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitObjectMember ( parent, childNameName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( isFirst, child.getAsJsonPrimitive (  ) , parent ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember (  child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( child, parent.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  )  ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember (  childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( childAsObject, parent, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent,  isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent, childAsObject ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent, isFirst, childAsObject ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( isFirst, childAsObject, parent ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( childAsArray, parent, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember (  childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent, isFirst, childAsArray ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent,  isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent, childAsArray ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitArrayMember ( parent, isFirst.getAsJsonPrimitive (  ) , child ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullArrayMember ( isFirst, parent ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullArrayMember (  isFirst ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[buglab_swap_variables]^visitor.visitNullArrayMember ( parent ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
