[BugLab_Variable_Misuse]^if  ( child.isJsonNull (  )  )  {^37^^^^^36^64^if  ( element.isJsonNull (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^} else if  ( child.isJsonArray (  )  )  {^39^^^^^36^64^} else if  ( element.isJsonArray (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^} else if  ( child.isJsonObject (  )  )  {^50^^^^^36^64^} else if  ( element.isJsonObject (  )  )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^visitor.visitPrimitive ( child.getAsJsonPrimitive (  )  ) ;^62^^^^^50^63^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^if  ( visitNulls && isFirst )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^if  ( visited && visitNulls )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^if  ( isFirst && visited )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Wrong_Operator]^if  ( visited || isFirst )  {^56^^^^^36^64^if  ( visited && isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Wrong_Literal]^isFirst = true;^57^^^^^36^64^isFirst = false;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^JsonObject object = child.getAsJsonObject (  ) ;^51^^^^^36^64^JsonObject object = element.getAsJsonObject (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Wrong_Literal]^boolean isFirst = false;^53^^^^^36^64^boolean isFirst = true;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , visitNulls ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^boolean visited = visitChild ( isFirst, member.getKey (  ) , member.getValue (  ) , object ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^boolean visited = visitChild ( member, object.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^boolean visited = visitChild ( object, isFirst.getKey (  ) , member.getValue (  ) , member ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , visited ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^visitor.visitPrimitive ( child.getAsJsonPrimitive (  )  ) ;^62^^^^^36^64^visitor.visitPrimitive ( element.getAsJsonPrimitive (  )  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^if  ( visited )  {^45^^^^^36^64^if  ( isFirst )  {^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Wrong_Literal]^isFirst = true;^46^^^^^36^64^isFirst = false;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Wrong_Literal]^boolean isFirst = false;^42^^^^^36^64^boolean isFirst = true;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^JsonArray array = child.getAsJsonArray (  ) ;^40^^^^^36^64^JsonArray array = element.getAsJsonArray (  ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^visitChild ( array, element, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^visitChild ( isFirst, child, array ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^visitChild ( array, isFirst, child ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^visitChild ( array, child, visited ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^boolean visited = visitChild ( object, 2.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^boolean visited = visitChild ( object, 1.getKey (  ) , member.getValue (  ) , isFirst ) ;^55^^^^^36^64^boolean visited = visitChild ( object, member.getKey (  ) , member.getValue (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Argument_Swapping]^visitChild ( child, array, isFirst ) ;^44^^^^^36^64^visitChild ( array, child, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] navigate [RETURN_TYPE] void   JsonElement element [VARIABLES] JsonArray  array  JsonObject  object  Entry  member  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  element  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( childAsObject, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , visited ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( isFirst, childName, child.getAsJsonPrimitive (  ) , parent ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, child, childName.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( child, parentName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, isFirst, child.getAsJsonPrimitive (  ) , childName ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( parent, childName, parent, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( parent, childName, childAsObject, visited ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( isFirst, childName, childAsObject, parent ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, isFirst, childAsObject, childName ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( childAsObject, childName, parent, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, childName, isFirst, childAsObject ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^navigate ( parent ) ;^85^^^^^69^90^navigate ( childAsObject ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, childAsObject, childName, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( childName, parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( childAsObject, childName, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( parent, childName, childAsArray, visited ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( isFirst, childName, childAsArray, parent ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, isFirst, childAsArray, childName ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( childAsArray, childName, parent, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( childName, parent, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, childNameName, child.getAsJsonPrimitive (  ) , isFirst ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^if  ( visited )  {^72^^^^^69^90^if  ( visitNulls )  {^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Wrong_Literal]^return true;^76^^^^^69^90^return false;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitNullObjectMember ( childAsObject, childName, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitNullObjectMember ( parent, childName, visited ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitNullObjectMember ( parent, isFirst, childName ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitNullObjectMember ( childName, parent, isFirst ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitNullObjectMember ( isFirst, childName, parent ) ;^73^^^^^69^90^visitor.visitNullObjectMember ( parent, childName, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( parent, isFirstName, child.getAsJsonPrimitive (  ) , child ) ;^87^^^^^69^90^visitor.visitObjectMember ( parent, childName, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitObjectMember ( childAsObject, childName, childAsObject, isFirst ) ;^84^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitObjectMember ( childName, parent, childAsArray, isFirst ) ;^80^^^^^69^90^visitor.visitObjectMember ( parent, childName, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Wrong_Literal]^return false;^89^^^^^69^90^return true;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] boolean   JsonObject parent String childName JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  JsonObject  childAsObject  parent  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  String  childName  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , visited ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( isFirst, child.getAsJsonPrimitive (  ) , parent ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( child, parent.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( childAsArray, childAsObject, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( parent, childAsObject, visited ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( childAsObject, parent, isFirst ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( isFirst, childAsObject, parent ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( parent, parent, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( parent, childAsArray, visited ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( childAsArray, parent, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( isFirst, childAsArray, parent ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^navigate ( parent ) ;^102^^^^^95^110^navigate ( childAsArray ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( childAsArray, child.getAsJsonPrimitive (  ) , isFirst ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( parent, isFirst.getAsJsonPrimitive (  ) , child ) ;^108^^^^^95^110^visitor.visitArrayMember ( parent, child.getAsJsonPrimitive (  ) , isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( parent, isFirst, childAsObject ) ;^105^^^^^95^110^visitor.visitArrayMember ( parent, childAsObject, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitNullArrayMember ( childAsArray, isFirst ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitNullArrayMember ( parent, visited ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitNullArrayMember ( isFirst, parent ) ;^97^^^^^95^110^visitor.visitNullArrayMember ( parent, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Variable_Misuse]^visitor.visitArrayMember ( childAsArray, childAsArray, isFirst ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
[BugLab_Argument_Swapping]^visitor.visitArrayMember ( parent, isFirst, childAsArray ) ;^101^^^^^95^110^visitor.visitArrayMember ( parent, childAsArray, isFirst ) ;^[CLASS] JsonTreeNavigator  [METHOD] visitChild [RETURN_TYPE] void   JsonArray parent JsonElement child boolean isFirst [VARIABLES] JsonArray  childAsArray  parent  JsonObject  childAsObject  JsonElementVisitor  visitor  boolean  isFirst  visitNulls  visited  JsonElement  child  
