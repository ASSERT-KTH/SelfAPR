[buglab_swap_variables]^return classOfT.hashCode (  )  + name.getCanonicalName (  ) .hashCode (  )  >> 1;^48^^^^^47^49^return name.hashCode (  )  + classOfT.getCanonicalName (  ) .hashCode (  )  >> 1;^[CLASS] TypedKey  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Class  classOfT  String  name  boolean  
[buglab_swap_variables]^return other.equals ( name.name )  && classOfT.equals ( other.classOfT ) ;^63^^^^^52^64^return name.equals ( other.name )  && classOfT.equals ( other.classOfT ) ;^[CLASS] TypedKey  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Class  classOfT  Object  obj  String  name  boolean  TypedKey  other  
[buglab_swap_variables]^return other.name.equals ( name )  && classOfT.equals ( other.classOfT ) ;^63^^^^^52^64^return name.equals ( other.name )  && classOfT.equals ( other.classOfT ) ;^[CLASS] TypedKey  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Class  classOfT  Object  obj  String  name  boolean  TypedKey  other  
[buglab_swap_variables]^return name.equals ( other.name )  && other.classOfT.equals ( classOfT ) ;^63^^^^^52^64^return name.equals ( other.name )  && classOfT.equals ( other.classOfT ) ;^[CLASS] TypedKey  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Class  classOfT  Object  obj  String  name  boolean  TypedKey  other  
[buglab_swap_variables]^return name.equals ( other.name.name )  && classOfT.equals ( other.classOfT ) ;^63^^^^^52^64^return name.equals ( other.name )  && classOfT.equals ( other.classOfT ) ;^[CLASS] TypedKey  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Class  classOfT  Object  obj  String  name  boolean  TypedKey  other  
[buglab_swap_variables]^return name.equals ( classOfT.name )  && other.equals ( other.classOfT ) ;^63^^^^^52^64^return name.equals ( other.name )  && classOfT.equals ( other.classOfT ) ;^[CLASS] TypedKey  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Class  classOfT  Object  obj  String  name  boolean  TypedKey  other  
[buglab_swap_variables]^return name.equals ( other.classOfT.name )  && classOfT.equals ( other ) ;^63^^^^^52^64^return name.equals ( other.name )  && classOfT.equals ( other.classOfT ) ;^[CLASS] TypedKey  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Class  classOfT  Object  obj  String  name  boolean  TypedKey  other  
[buglab_swap_variables]^return String.format ( "{name:%s, name:%s}", classOfT, classOfT ) ;^68^^^^^67^69^return String.format ( "{name:%s, classOfT:%s}", name, classOfT ) ;^[CLASS] TypedKey  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  classOfT  String  name  boolean  
[buglab_swap_variables]^return String.format ( "{name:%s, classOfT:%s}",  classOfT ) ;^68^^^^^67^69^return String.format ( "{name:%s, classOfT:%s}", name, classOfT ) ;^[CLASS] TypedKey  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  classOfT  String  name  boolean  
[buglab_swap_variables]^return String.format ( "{name:%s:%s}", name, classOfT ) ;^68^^^^^67^69^return String.format ( "{name:%s, classOfT:%s}", name, classOfT ) ;^[CLASS] TypedKey  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  classOfT  String  name  boolean  
