[buglab_swap_variables]^copy ( new ByteArrayInputStream ( dst ) , bytes, true, closeOutput ) ;^27^^^^^25^28^copy ( new ByteArrayInputStream ( bytes ) , dst, true, closeOutput ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   String str OutputStream dst boolean closeOutput [VARIABLES] byte[]  bytes  boolean  closeOutput  OutputStream  dst  String  str  
[buglab_swap_variables]^copy ( new ByteArrayInputStream ( bytes ) ,  true, closeOutput ) ;^27^^^^^25^28^copy ( new ByteArrayInputStream ( bytes ) , dst, true, closeOutput ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   String str OutputStream dst boolean closeOutput [VARIABLES] byte[]  bytes  boolean  closeOutput  OutputStream  dst  String  str  
[buglab_swap_variables]^copy ( new ByteArrayInputStream ( closeOutput ) , dst, true, bytes ) ;^27^^^^^25^28^copy ( new ByteArrayInputStream ( bytes ) , dst, true, closeOutput ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   String str OutputStream dst boolean closeOutput [VARIABLES] byte[]  bytes  boolean  closeOutput  OutputStream  dst  String  str  
[buglab_swap_variables]^copy ( new ByteArrayInputStream ( bytes ) , dst, true ) ;^27^^^^^25^28^copy ( new ByteArrayInputStream ( bytes ) , dst, true, closeOutput ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   String str OutputStream dst boolean closeOutput [VARIABLES] byte[]  bytes  boolean  closeOutput  OutputStream  dst  String  str  
[buglab_swap_variables]^while  (  ( src = count.read ( buf )  )  != -1 )  {^36^^^^^32^43^while  (  ( count = src.read ( buf )  )  != -1 )  {^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^while  (  ( count = buf.read ( src )  )  != -1 )  {^36^^^^^32^43^while  (  ( count = src.read ( buf )  )  != -1 )  {^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^dst.write (  0, count ) ;^37^^^^^32^43^dst.write ( buf, 0, count ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^dst.write ( buf, 0 ) ;^37^^^^^32^43^dst.write ( buf, 0, count ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^if  ( src )  closeInput.close (  ) ;^40^^^^^32^43^if  ( closeInput )  src.close (  ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^if  ( dst )  closeOutput.close (  ) ;^41^^^^^32^43^if  ( closeOutput )  dst.close (  ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^while  (  ( buf = src.read ( count )  )  != -1 )  {^36^^^^^32^43^while  (  ( count = src.read ( buf )  )  != -1 )  {^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
[buglab_swap_variables]^dst.write ( count, 0, buf ) ;^37^^^^^32^43^dst.write ( buf, 0, count ) ;^[CLASS] Streams  [METHOD] copy [RETURN_TYPE] void   InputStream src OutputStream dst boolean closeInput boolean closeOutput [VARIABLES] byte[]  buf  boolean  closeInput  closeOutput  InputStream  src  OutputStream  dst  int  count  
