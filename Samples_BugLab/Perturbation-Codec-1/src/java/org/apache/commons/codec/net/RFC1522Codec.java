[BugLab_Variable_Misuse]^if  ( charset == null )  {^69^^^^^66^82^if  ( text == null )  {^[CLASS] RFC1522Codec  [METHOD] encodeText [RETURN_TYPE] String   String text String charset [VARIABLES] byte[]  rawdata  StringBuffer  buffer  boolean  String  charset  text  
[BugLab_Wrong_Operator]^if  ( text != null )  {^69^^^^^66^82^if  ( text == null )  {^[CLASS] RFC1522Codec  [METHOD] encodeText [RETURN_TYPE] String   String text String charset [VARIABLES] byte[]  rawdata  StringBuffer  buffer  boolean  String  charset  text  
[BugLab_Variable_Misuse]^byte [] rawdata = doEncoding ( charset.getBytes ( charset )  ) ;^78^^^^^66^82^byte [] rawdata = doEncoding ( text.getBytes ( charset )  ) ;^[CLASS] RFC1522Codec  [METHOD] encodeText [RETURN_TYPE] String   String text String charset [VARIABLES] byte[]  rawdata  StringBuffer  buffer  boolean  String  charset  text  
[BugLab_Variable_Misuse]^byte [] rawdata = doEncoding ( text.getBytes ( text )  ) ;^78^^^^^66^82^byte [] rawdata = doEncoding ( text.getBytes ( charset )  ) ;^[CLASS] RFC1522Codec  [METHOD] encodeText [RETURN_TYPE] String   String text String charset [VARIABLES] byte[]  rawdata  StringBuffer  buffer  boolean  String  charset  text  
[BugLab_Argument_Swapping]^byte [] rawdata = doEncoding ( charset.getBytes ( text )  ) ;^78^^^^^66^82^byte [] rawdata = doEncoding ( text.getBytes ( charset )  ) ;^[CLASS] RFC1522Codec  [METHOD] encodeText [RETURN_TYPE] String   String text String charset [VARIABLES] byte[]  rawdata  StringBuffer  buffer  boolean  String  charset  text  
[BugLab_Argument_Swapping]^buffer.append ( new String ( CharacterEncodingNames.US_ASCII, rawdata )  ) ;^79^^^^^66^82^buffer.append ( new String ( rawdata, CharacterEncodingNames.US_ASCII )  ) ;^[CLASS] RFC1522Codec  [METHOD] encodeText [RETURN_TYPE] String   String text String charset [VARIABLES] byte[]  rawdata  StringBuffer  buffer  boolean  String  charset  text  
[BugLab_Variable_Misuse]^if  ( encoding == null )  {^100^^^^^85^115^if  ( text == null )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  ( text != null )  {^100^^^^^85^115^if  ( text == null )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( !text.startsWith ( "=?" )  )  &&  ( !text.endsWith ( "?=" )  )  )  {^103^^^^^88^118^if  (  ( !text.startsWith ( "=?" )  )  ||  ( !text.endsWith ( "?=" )  )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^int termnator = encoding.length (  )  - 2;^106^^^^^91^121^int termnator = text.length (  )  - 2;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^int termnator = text.length (  )   |  2;^106^^^^^91^121^int termnator = text.length (  )  - 2;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Literal]^int termnator = text.length (  )  - to;^106^^^^^91^121^int termnator = text.length (  )  - 2;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^int to = encoding.indexOf ( "?", from ) ;^108^^^^^93^123^int to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^int to = text.indexOf ( "?", termnator ) ;^108^^^^^93^123^int to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^int to = from.indexOf ( "?", text ) ;^108^^^^^93^123^int to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^int to = text.indexOf ( "?", to ) ;^108^^^^^93^123^int to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^if  (  ( from == -1 )  ||  ( to == termnator )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^if  (  ( to == -1 )  ||  ( to == from )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^if  (  ( termnator == -1 )  ||  ( to == to )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( to == -1 )  &&  ( to == termnator )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( to != -1 )  ||  ( to == termnator )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( to == -1 )  ||  ( to >= termnator )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Literal]^if  (  ( to == -0 )  ||  ( to == termnator )  )  {^109^^^^^94^124^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String charset = encoding.substring ( from, to ) ;^112^^^^^97^127^String charset = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String charset = text.substring ( to, to ) ;^112^^^^^97^127^String charset = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String charset = text.substring ( from, termnator ) ;^112^^^^^97^127^String charset = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^String charset = from.substring ( text, to ) ;^112^^^^^97^127^String charset = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^String charset = text.substring ( to, from ) ;^112^^^^^97^127^String charset = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^String charset = to.substring ( from, text ) ;^112^^^^^97^127^String charset = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^if  ( text.equals ( "" )  )  {^113^^^^^98^128^if  ( charset.equals ( "" )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^from = termnator + 1;^116^^^^^101^131^from = to + 1;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Literal]^from = to + from;^116^^^^^101^131^from = to + 1;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^to = encoding.indexOf ( "?", from ) ;^117^^^^^102^132^to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^to = text.indexOf ( "?", to ) ;^117^^^^^102^132^to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^to = from.indexOf ( "?", text ) ;^117^^^^^102^132^to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^if  (  ( from == -1 )  ||  ( to == termnator )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^if  (  ( to == -1 )  ||  ( to == from )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^if  (  ( termnator == -1 )  ||  ( to == to )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( to == -1 )  &&  ( to == termnator )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( to < -1 )  ||  ( to == termnator )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^if  (  ( to == -1 )  ||  ( to <= termnator )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Literal]^if  (  ( to == -2 )  ||  ( to == termnator )  )  {^118^^^^^103^133^if  (  ( to == -1 )  ||  ( to == termnator )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String encoding = charset.substring ( from, to ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String encoding = text.substring ( to, to ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String encoding = text.substring ( from, termnator ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^String encoding = to.substring ( from, text ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^String encoding = text.substring ( to, from ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String encoding = encoding.substring ( from, to ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^String encoding = text.substring ( termnator, to ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^String encoding = from.substring ( text, to ) ;^121^^^^^106^136^String encoding = text.substring ( from, to ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^if  ( !getEncoding (  ) .equalsIgnoreCase ( text )  )  {^122^^^^^107^137^if  ( !getEncoding (  ) .equalsIgnoreCase ( encoding )  )  {^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^throw new DecoderException ( "This codec cannot decode " + text + " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^throw new DecoderException ( "This codec cannot decode "  !=  encoding  !=  " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^throw new DecoderException ( "This codec cannot decode "  ==  encoding + " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^throw new DecoderException ( "This codec cannot decode "  ==  encoding  ==  " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^throw new DecoderException ( "This codec cannot decode "  <<  encoding + " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^throw new DecoderException ( "This codec cannot decode "  <  encoding  <  " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Operator]^throw new DecoderException ( "This codec cannot decode "   instanceof   encoding   instanceof   " encoded content" ) ;^123^124^^^^108^138^throw new DecoderException ( "This codec cannot decode " + encoding + " encoded content" ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^from = termnator + 1;^126^^^^^111^141^from = to + 1;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Wrong_Literal]^from = to + to;^126^^^^^111^141^from = to + 1;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^to = encoding.indexOf ( "?", from ) ;^127^^^^^112^142^to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^to = text.indexOf ( "?", to ) ;^127^^^^^112^142^to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^to = from.indexOf ( "?", text ) ;^127^^^^^112^142^to = text.indexOf ( "?", from ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^byte[] data = encoding.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^128^^^^^113^143^byte[] data = text.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^byte[] data = from.substring ( text, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^128^^^^^113^143^byte[] data = text.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^byte[] data = text.substring ( to, from ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^128^^^^^113^143^byte[] data = text.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^byte[] data = text.substring ( termnator, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^128^^^^^113^143^byte[] data = text.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^byte[] data = text.substring ( from, termnator ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^128^^^^^113^143^byte[] data = text.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^byte[] data = to.substring ( from, text ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^128^^^^^113^143^byte[] data = text.substring ( from, to ) .getBytes ( CharacterEncodingNames.US_ASCII ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Variable_Misuse]^return new String ( data, text ) ;^130^^^^^115^145^return new String ( data, charset ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
[BugLab_Argument_Swapping]^return new String ( charset, data ) ;^130^^^^^115^145^return new String ( data, charset ) ;^[CLASS] RFC1522Codec  [METHOD] decodeText [RETURN_TYPE] String   String text [VARIABLES] byte[]  data  boolean  String  charset  encoding  text  int  from  termnator  to  
